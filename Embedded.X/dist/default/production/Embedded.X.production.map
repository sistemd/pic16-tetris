Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.05\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\Embedded.X.production.sym \
  --cmf=dist/default/production\Embedded.X.production.cmf -z -Q16F884 \
  -oC:\Users\ALECEI~1\AppData\Local\Temp\s8us.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Embedded.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0120h-016Fh -pstack=STACK -ACODE=00h-07FFhx2 \
  -ASTRCODE=00h-0FFFh -ASTRING=00h-0FFhx16 -ACONST=00h-0FFhx16 \
  -AENTRY=00h-0FFhx16 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\ALECEI~1\AppData\Local\Temp\s8us.o \
  dist/default/production\Embedded.X.production.o 

Object code version is 3.11

Machine type is 16F884



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ALECEI~1\AppData\Local\Temp\s8us.o
                end_init                              B        B        2        8       0
                reset_vec                             0        0        2        0       0
                config                             2007     2007        2     400E       0
dist/default/production\Embedded.X.production.o
                cinit                                 D        D       1E        8       0
                intentry                              4        4        7        8       0
                text58                              AE7      AE7       21     15CE       0
                text57                              A51      A51       1C     14A2       0
                text56                              99D      99D        E     133A       0
                text55                              939      939        6     1272       0
                text54                              990      990        D     1320       0
                text53                              93F      93F        6     127E       0
                text52                              B08      B08       21     1610       0
                text51                              C28      C28       2C     1850       0
                text50                              9C8      9C8       10     1390       0
                text49                              9D8      9D8       10     13B0       0
                text48                              9AB      9AB        E     1356       0
                text47                              945      945        7     128A       0
                text46                              A36      A36       1B     146C       0
                text45                              96C      96C        C     12D8       0
                text44                              978      978        C     12F0       0
                text43                              956      956        B     12AC       0
                text42                              69F      69F       8F      C08       0
                text41                              CE2      CE2       35     19C4       0
                text40                              BD8      BD8       25     17B0       0
                text39                              984      984        C     1308       0
                text38                              A1F      A1F       17     143E       0
                text37                              B29      B29       23     1652       0
                text36                              94C      94C        A     1298       0
                text35                              934      934        5     1268       0
                text34                               FA       FA        6        8       0
                text33                              C54      C54       2D     18A8       0
                text32                              A0A      A0A       15     1414       0
                text31                              D84      D84       41     1B08       0
                text30                              9B9      9B9        F     1372       0
                text29                              7F7      7F7        9      C08       0
                text28                              AA9      AA9       1F     1552       0
                text27                              961      961        B     12C2       0
                text26                              9F8      9F8       12     13F0       0
                text25                               96       96       64        8       0
                text24                              DC5      DC5       41     1B8A       0
                text23                              A6D      A6D       1E     14DA       0
                text22                              D17      D17       36     1A2E       0
                text21                              FA9      FA9       57     1F52       0
                text20                              A8B      A8B       1E     1516       0
                text19                              79E      79E       59      C08       0
                text18                              604      604       9B      C08       0
                text17                              9E8      9E8       10     13D0       0
                text16                              B4C      B4C       23     1698       0
                text15                              AC8      AC8       1F     1590       0
                text14                              E06      E06       41     1C0C       0
                text13                              D4D      D4D       37     1A9A       0
                text12                              B6F      B6F       23     16DE       0
                text11                              72E      72E       70      C08       0
                text10                              E88      E88       43     1D10       0
                text9                               CB1      CB1       31     1962       0
                text8                               F5C      F5C       4D     1EB8       0
                text7                               B92      B92       23     1724       0
                text6                               E47      E47       41     1C8E       0
                text5                               ECB      ECB       45     1D96       0
                text4                               BFD      BFD       2B     17FA       0
                text3                               C81      C81       30     1902       0
                text2                               BB5      BB5       23     176A       0
                text1                               F10      F10       4C     1E20       0
                maintext                             2B       2B       6B        8       0
                cstackBANK0                          20       20       27       20       1
                cstackCOMMON                         70       70        A       70       1
                cstackBANK1                          A0       A0       43       A0       1
                dataBANK1                            E4       E4        1       A0       1
                bssBANK1                             E3       E3        1       A0       1
                dataBANK0                            47       47        4       20       1
                bssCOMMON                            7A       7A        1       70       1
                bssEEDATA                             0     2100        3     4200       3
                stringtext                          100      100      504        2       0
                idataBANK1                            3        3        1        6       0
                idataBANK0                          930      930        4     1260       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              B        B        2         0
                cinit                                 D        D       1E         0
                intentry                              4        4        7         0
                reset_vec                             0        0        2         0
                text58                              AE7      AE7       21         0
                text57                              A51      A51       1C         0
                text56                              99D      99D        E         0
                text55                              939      939        6         0
                text54                              990      990        D         0
                text53                              93F      93F        6         0
                text52                              B08      B08       21         0
                text51                              C28      C28       2C         0
                text50                              9C8      9C8       10         0
                text49                              9D8      9D8       10         0
                text48                              9AB      9AB        E         0
                text47                              945      945        7         0
                text46                              A36      A36       1B         0
                text45                              96C      96C        C         0
                text44                              978      978        C         0
                text43                              956      956        B         0
                text42                              69F      69F       8F         0
                text41                              CE2      CE2       35         0
                text40                              BD8      BD8       25         0
                text39                              984      984        C         0
                text38                              A1F      A1F       17         0
                text37                              B29      B29       23         0
                text36                              94C      94C        A         0
                text35                              934      934        5         0
                text34                               FA       FA        6         0
                text33                              C54      C54       2D         0
                text32                              A0A      A0A       15         0
                text31                              D84      D84       41         0
                text30                              9B9      9B9        F         0
                text29                              7F7      7F7        9         0
                text28                              AA9      AA9       1F         0
                text27                              961      961        B         0
                text26                              9F8      9F8       12         0
                text25                               96       96       64         0
                text24                              DC5      DC5       41         0
                text23                              A6D      A6D       1E         0
                text22                              D17      D17       36         0
                text21                              FA9      FA9       57         0
                text20                              A8B      A8B       1E         0
                text19                              79E      79E       59         0
                text18                              604      604       9B         0
                text17                              9E8      9E8       10         0
                text16                              B4C      B4C       23         0
                text15                              AC8      AC8       1F         0
                text14                              E06      E06       41         0
                text13                              D4D      D4D       37         0
                text12                              B6F      B6F       23         0
                text11                              72E      72E       70         0
                text10                              E88      E88       43         0
                text9                               CB1      CB1       31         0
                text8                               F5C      F5C       4D         0
                text7                               B92      B92       23         0
                text6                               E47      E47       41         0
                text5                               ECB      ECB       45         0
                text4                               BFD      BFD       2B         0
                text3                               C81      C81       30         0
                text2                               BB5      BB5       23         0
                text1                               F10      F10       4C         0
                maintext                             2B       2B       6B         0
                idataBANK1                            3        3        1         0
                idataBANK0                          930      930        4         0

        CLASS   STRCODE        
                stringtext                          100      100      504         0

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        A         1
                bssCOMMON                            7A       7A        1         1

        CLASS   BANK0          
                cstackBANK0                          20       20       27         1
                dataBANK0                            47       47        4         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       43         1
                dataBANK1                            E4       E4        1         1
                bssBANK1                             E3       E3        1         1

        CLASS   BANK2          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         
                bssEEDATA                             0     2100        3         3

        CLASS   BANK3          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000002  000002         0       0  CODE        2
                idataBANK1                     000003  000001  000004         6       0  CODE        2
                intentry                       000004  0000FC  000100         8       0  CODE        2
                cstackBANK0                    000020  00002B  00004B        20       1  BANK0       1
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                cstackBANK1                    0000A0  000045  0000E5        A0       1  BANK1       1
                stringtext                     000100  000504  000604         2       0  STRCODE     2
                text18                         000604  0001FC  000800       C08       0  CODE        2
                idataBANK0                     000930  000004  000934      1260       0  CODE        2
                text35                         000934  000005  000939      1268       0  CODE        2
                text55                         000939  000006  00093F      1272       0  CODE        2
                text53                         00093F  000006  000945      127E       0  CODE        2
                text47                         000945  000007  00094C      128A       0  CODE        2
                text36                         00094C  00000A  000956      1298       0  CODE        2
                text43                         000956  00000B  000961      12AC       0  CODE        2
                text27                         000961  00000B  00096C      12C2       0  CODE        2
                text45                         00096C  00000C  000978      12D8       0  CODE        2
                text44                         000978  00000C  000984      12F0       0  CODE        2
                text39                         000984  00000C  000990      1308       0  CODE        2
                text54                         000990  00000D  00099D      1320       0  CODE        2
                text56                         00099D  00000E  0009AB      133A       0  CODE        2
                text48                         0009AB  00000E  0009B9      1356       0  CODE        2
                text30                         0009B9  00000F  0009C8      1372       0  CODE        2
                text50                         0009C8  000010  0009D8      1390       0  CODE        2
                text49                         0009D8  000010  0009E8      13B0       0  CODE        2
                text17                         0009E8  000010  0009F8      13D0       0  CODE        2
                text26                         0009F8  000012  000A0A      13F0       0  CODE        2
                text32                         000A0A  000015  000A1F      1414       0  CODE        2
                text38                         000A1F  000017  000A36      143E       0  CODE        2
                text46                         000A36  00001B  000A51      146C       0  CODE        2
                text57                         000A51  00001C  000A6D      14A2       0  CODE        2
                text23                         000A6D  00001E  000A8B      14DA       0  CODE        2
                text20                         000A8B  00001E  000AA9      1516       0  CODE        2
                text28                         000AA9  00001F  000AC8      1552       0  CODE        2
                text15                         000AC8  00001F  000AE7      1590       0  CODE        2
                text58                         000AE7  000021  000B08      15CE       0  CODE        2
                text52                         000B08  000021  000B29      1610       0  CODE        2
                text37                         000B29  000023  000B4C      1652       0  CODE        2
                text16                         000B4C  000023  000B6F      1698       0  CODE        2
                text12                         000B6F  000023  000B92      16DE       0  CODE        2
                text7                          000B92  000023  000BB5      1724       0  CODE        2
                text2                          000BB5  000023  000BD8      176A       0  CODE        2
                text40                         000BD8  000025  000BFD      17B0       0  CODE        2
                text4                          000BFD  00002B  000C28      17FA       0  CODE        2
                text51                         000C28  00002C  000C54      1850       0  CODE        2
                text33                         000C54  00002D  000C81      18A8       0  CODE        2
                text3                          000C81  000030  000CB1      1902       0  CODE        2
                text9                          000CB1  000031  000CE2      1962       0  CODE        2
                text41                         000CE2  000035  000D17      19C4       0  CODE        2
                text22                         000D17  000036  000D4D      1A2E       0  CODE        2
                text13                         000D4D  000037  000D84      1A9A       0  CODE        2
                text31                         000D84  000041  000DC5      1B08       0  CODE        2
                text24                         000DC5  000041  000E06      1B8A       0  CODE        2
                text14                         000E06  000041  000E47      1C0C       0  CODE        2
                text6                          000E47  000041  000E88      1C8E       0  CODE        2
                text10                         000E88  000043  000ECB      1D10       0  CODE        2
                text5                          000ECB  000045  000F10      1D96       0  CODE        2
                text1                          000F10  00004C  000F5C      1E20       0  CODE        2
                text8                          000F5C  00004D  000FA9      1EB8       0  CODE        2
                text21                         000FA9  000057  001000      1F52       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2
                bssEEDATA                      002100  000003  002103      4200       3  EEDATA      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            004B-006F             25           1
        BANK1            00E5-00EF              B           1
        BANK2            0120-016F             50           1
        CODE             0002-0002              1           2
                         0800-092F            130
        COMMON           007B-007D              3           1
        CONST            0002-0002              1           2
                         0800-092F            100
        EEDATA           2103-21FF             FD           2
        ENTRY            0002-0002              1           2
                         0800-092F            100
        IDLOC            2000-2003              4           2
        RAM              004B-006F             25           1
                         00E5-00EF              B
                         0120-016F             50
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-011F             20           1
        SFR3             0180-01EF             70           1
        STACK            0120-016F             50           1
        STRCODE          0002-0002              1           2
                         0800-092F            130
        STRING           0002-0002              1           2
                         0800-092F            100

                                  Symbol Table

?_Tetris_GetRandomUnit                     cstackBANK0  002C
?___awmod                                  cstackBANK0  002F
?___eetoi                                  cstackCOMMON 0078
?___lmul                                   cstackBANK0  0020
?___wmul                                   cstackBANK0  0035
?_rand                                     cstackBANK0  0028
Buttons_Clear@buttons                      cstackBANK0  0020
Buttons_Update@buttons                     cstackCOMMON 0076
Buttons_UpdateButton@button                cstackCOMMON 0075
Buttons_UpdateButton@nHeld                 cstackCOMMON 0073
DrawTetris@leftMask                        cstackBANK0  0032
DrawTetris@rightMask                       cstackBANK0  0034
DrawTetris@tetrisGame                      cstackBANK0  0031
DrawTetris@x                               cstackBANK0  0036
DrawTetrisGameColumn@gameRow               cstackBANK0  002B
DrawTetrisGameColumn@i                     cstackBANK0  002D
DrawTetrisGameColumn@lcdRow                cstackBANK0  002F
DrawTetrisGameColumn@leftMask              cstackBANK0  0025
DrawTetrisGameColumn@rightMask             cstackBANK0  0023
DrawTetrisGameColumn@tableY                cstackBANK0  002A
DrawTetrisGameColumn@tetrisGame            cstackBANK0  0029
DrawTetrisGameColumn@x                     cstackBANK0  0022
DrawTetrisGameColumn@y                     cstackBANK0  002E
InterruptHandler@timerInterruptCounter     bssCOMMON    007A
LCD_Clear@x                                cstackBANK0  0024
LCD_Clear@y                                cstackBANK0  0023
LCD_IsBusy@status                          cstackCOMMON 0077
LCD_ReadStatus@status                      cstackCOMMON 0074
LCD_SegmentSelection@segments              cstackCOMMON 0073
LCD_SetX@x                                 cstackBANK0  0021
LCD_SetY@y                                 cstackBANK0  0021
LCD_SetZ@z                                 cstackBANK0  0021
LCD_Write@data                             cstackCOMMON 0078
LCD_Write@mode                             cstackCOMMON 0079
LCD_WriteData@data                         cstackBANK0  0021
Tetris_ApplyPlayerToTable@game             cstackCOMMON 0079
Tetris_ApplyPlayerToTable@i                cstackCOMMON 0077
Tetris_ApplyPlayerToTable@i_312            cstackCOMMON 0078
Tetris_ApplyPlayerToTable@start            cstackCOMMON 0076
Tetris_ClearFilledRows@gameTable           cstackBANK0  0027
Tetris_ClearFilledRows@i                   cstackBANK0  0028
Tetris_ClearFilledRows@rowsCleared         cstackBANK0  0026
Tetris_CountUnitBits@i                     cstackBANK0  0024
Tetris_CountUnitBits@j                     cstackBANK0  0023
Tetris_CountUnitBits@mask                  cstackBANK0  0020
Tetris_CountUnitBits@result                cstackBANK0  0022
Tetris_CountUnitBits@unitBits              cstackCOMMON 0073
Tetris_MovePlayerDown@game                 cstackBANK0  002D
Tetris_MovePlayerLeft@game                 cstackBANK0  0030
Tetris_MovePlayerLeft@i                    cstackBANK0  002E
Tetris_MovePlayerLeft@i_447                cstackBANK0  002F
Tetris_MovePlayerRight@game                cstackBANK0  0030
Tetris_MovePlayerRight@i                   cstackBANK0  002E
Tetris_MovePlayerRight@i_461               cstackBANK0  002F
Tetris_PlayerOverlapsEnvironment@game      cstackCOMMON 0078
Tetris_PlayerOverlapsEnvironment@i         cstackCOMMON 0077
Tetris_PlayerOverlapsEnvironment@start     cstackCOMMON 0076
Tetris_PlayerTopmostY@player               cstackCOMMON 0075
Tetris_PlayerTouchingLeftBound@i           cstackCOMMON 0078
Tetris_PlayerTouchingLeftBound@player      cstackCOMMON 0077
Tetris_PlayerTouchingRightBound@i          cstackCOMMON 0078
Tetris_PlayerTouchingRightBound@player     cstackCOMMON 0077
Tetris_PlayerUnitBitsAreValid@player       cstackBANK0  0029
Tetris_RemovePlayerFromTable@game          cstackCOMMON 0077
Tetris_RemovePlayerFromTable@i             cstackCOMMON 0078
Tetris_RemovePlayerFromTable@start         cstackCOMMON 0076
Tetris_ResetGame@game                      cstackBANK0  0044
Tetris_ResetGame@playerUnit                cstackBANK0  0042
Tetris_ResetPlayer@player                  cstackBANK0  0041
Tetris_ResetPlayer@playerUnit              cstackBANK0  003D
Tetris_RotatePlayer@game                   cstackBANK0  0033
Tetris_RotatePlayer@oldRotation            cstackBANK0  0032
Tetris_ScoreForRowsCleared@rowsCleared     cstackCOMMON 0075
Tetris_SetPlayerUnit@player                cstackBANK0  002A
Tetris_SetPlayerUnit@unit                  cstackCOMMON 0078
Tetris_ShiftTableDown@gameTable            cstackBANK0  0020
Tetris_ShiftTableDown@i                    cstackBANK0  0021
Tetris_ShiftTableDown@upto                 cstackCOMMON 0073
Tetris_UpdateGame@game                     cstackBANK0  0045
Tetris_UpdateGame@rowsCleared              cstackBANK0  0044
Tetris_UpdatePlayerUnitBits@i              cstackCOMMON 0075
Tetris_UpdatePlayerUnitBits@i_332          cstackCOMMON 0073
Tetris_UpdatePlayerUnitBits@i_333          cstackCOMMON 0074
Tetris_UpdatePlayerUnitBits@player         cstackCOMMON 0077
Tetris_UpdatePlayerUnitBits@shift          cstackCOMMON 0076
_ANSEL                                     (abs)        0188
_ANSELH                                    (abs)        0189
_Buttons_Clear                             text56       099D
_Buttons_SetupInterrupts                   text55       0939
_Buttons_SetupPortB                        text54       0990
_Buttons_SetupPortsAndInterrups            text53       093F
_Buttons_Update                            text51       0C28
_Buttons_UpdateButton                      text52       0B08
_DrawTetris                                text41       0CE2
_DrawTetrisGameColumn                      text42       069F
_EEADR                                     (abs)        010D
_EECON1                                    (abs)        018C
_EECON1bits                                (abs)        018C
_EECON2                                    (abs)        018D
_EEDATA                                    (abs)        010C
_GIE                                       (abs)        005F
_INTCONbits                                (abs)        000B
_INTE                                      (abs)        005C
_INTEDG                                    (abs)        040E
_INTF                                      (abs)        0059
_IRCF0                                     (abs)        047C
_IRCF1                                     (abs)        047D
_IRCF2                                     (abs)        047E
_InterruptHandler                          text58       0AE7
_LCD_BlockWhileBusy                        text47       0945
_LCD_Clear                                 text40       0BD8
_LCD_IsBusy                                text48       09AB
_LCD_IsBusy$584                            cstackCOMMON 0076
_LCD_ReadStatus                            text49       09D8
_LCD_Reset                                 text38       0A1F
_LCD_SegmentSelection                      text50       09C8
_LCD_SetX                                  text45       096C
_LCD_SetY                                  text44       0978
_LCD_SetZ                                  text39       0984
_LCD_SetupPorts                            text37       0B29
_LCD_TurnOn                                text36       094C
_LCD_Write                                 text46       0A36
_LCD_WriteData                             text43       0956
_PEIE                                      (abs)        005E
_PORTA                                     (abs)        0005
_PORTB                                     (abs)        0006
_PORTC                                     (abs)        0007
_PORTD                                     (abs)        0008
_RB1                                       (abs)        0031
_RB2                                       (abs)        0032
_RB3                                       (abs)        0033
_RB4                                       (abs)        0034
_RC0                                       (abs)        0038
_RC1                                       (abs)        0039
_RC2                                       (abs)        003A
_RC3                                       (abs)        003B
_RD0                                       (abs)        0040
_RD1                                       (abs)        0041
_ResetTimer                                text35       0934
_STATUSbits                                (abs)        0003
_SetupOscillator                           text34       00FA
_SetupRandomness                           text28       0AA9
_SetupTimer                                text27       0961
_T1CKPS0                                   (abs)        0084
_T1CKPS1                                   (abs)        0085
_TMR1                                      (abs)        000E
_TMR1CS                                    (abs)        0081
_TMR1IE                                    (abs)        0460
_TMR1IF                                    (abs)        0060
_TMR1ON                                    (abs)        0080
_TRISA                                     (abs)        0085
_TRISB                                     (abs)        0086
_TRISC                                     (abs)        0087
_TRISD                                     (abs)        0088
_Tetris_ApplyPlayerToTable                 text25       0096
_Tetris_ClearFilledRows                    text9        0CB1
_Tetris_CountUnitBits                      text14       0E06
_Tetris_GetRandomUnit                      text4        0BFD
_Tetris_MovePlayerDown                     text3        0C81
_Tetris_MovePlayerLeft                     text21       0FA9
_Tetris_MovePlayerRight                    text19       079E
_Tetris_PlayerOverlapsEnvironment          text24       0DC5
_Tetris_PlayerTopmostY                     text26       09F8
_Tetris_PlayerTouchingLeftBound            text23       0A6D
_Tetris_PlayerTouchingRightBound           text20       0A8B
_Tetris_PlayerUnitBitsAreValid             text13       0D4D
_Tetris_RemovePlayerFromTable              text22       0D17
_Tetris_ResetGame                          text15       0AC8
_Tetris_ResetPlayer                        text16       0B4C
_Tetris_RotatePlayer                       text11       072E
_Tetris_ScoreForRowsCleared                text2        0BB5
_Tetris_SetPlayerUnit                      text17       09E8
_Tetris_ShiftTableDown                     text10       0E88
_Tetris_UpdateGame                         text1        0F10
_Tetris_UpdatePlayerUnitBits               text18       0604
_Tetris_playerStartingPosition             stringtext   0512
_Tetris_unitPivot                          stringtext   0514
_Tetris_units                              stringtext   0516
_WPUB                                      (abs)        0095
__CFG_BOR4V$BOR40V                         (abs)        0000
__CFG_BOREN$OFF                            (abs)        0000
__CFG_CP$OFF                               (abs)        0000
__CFG_CPD$OFF                              (abs)        0000
__CFG_FCMEN$OFF                            (abs)        0000
__CFG_FOSC$INTRC_NOCLKOUT                  (abs)        0000
__CFG_IESO$OFF                             (abs)        0000
__CFG_LVP$OFF                              (abs)        0000
__CFG_MCLRE$ON                             (abs)        0000
__CFG_PWRTE$OFF                            (abs)        0000
__CFG_WDTE$OFF                             (abs)        0000
__CFG_WRT$OFF                              (abs)        0000
__Habs1                                    abs1         0000
__Hbank0                                   bank0        0000
__Hbank1                                   bank1        0000
__Hbank2                                   bank2        0000
__Hbank3                                   bank3        0000
__HbssBANK1                                bssBANK1     0000
__HbssCOMMON                               bssCOMMON    0000
__HbssEEDATA                               bssEEDATA    0000
__Hcinit                                   cinit        002B
__Hclrtext                                 clrtext      0000
__Hcode                                    code         0000
__Hcommon                                  common       0000
__Hconfig                                  config       2009
__HcstackBANK0                             cstackBANK0  0000
__HcstackBANK1                             cstackBANK1  0000
__HcstackCOMMON                            cstackCOMMON 0000
__HdataBANK0                               dataBANK0    0000
__HdataBANK1                               dataBANK1    0000
__Heeprom_data                             eeprom_data  0000
__Hend_init                                end_init     000D
__Hfunctab                                 functab      0000
__HidataBANK0                              idataBANK0   0000
__HidataBANK1                              idataBANK1   0000
__Hidloc                                   idloc        0000
__Hinit                                    init         000B
__Hintentry                                intentry     000B
__Hmaintext                                maintext     0000
__Hpowerup                                 powerup      0000
__Hram                                     ram          0000
__Hreset_vec                               reset_vec    0002
__Hsfr0                                    sfr0         0000
__Hsfr1                                    sfr1         0000
__Hsfr2                                    sfr2         0000
__Hsfr3                                    sfr3         0000
__Hspace_0                                 (abs)        2009
__Hspace_1                                 (abs)        00E5
__Hspace_2                                 (abs)        0000
__Hspace_3                                 (abs)        0003
__Hstack                                   stack        0000
__Hstrings                                 strings      0000
__Hstringtext                              stringtext   0000
__Htext                                    text         0000
__Labs1                                    abs1         0000
__Lbank0                                   bank0        0000
__Lbank1                                   bank1        0000
__Lbank2                                   bank2        0000
__Lbank3                                   bank3        0000
__LbssBANK1                                bssBANK1     0000
__LbssCOMMON                               bssCOMMON    0000
__LbssEEDATA                               bssEEDATA    0000
__Lcinit                                   cinit        000D
__Lclrtext                                 clrtext      0000
__Lcode                                    code         0000
__Lcommon                                  common       0000
__Lconfig                                  config       2007
__LcstackBANK0                             cstackBANK0  0000
__LcstackBANK1                             cstackBANK1  0000
__LcstackCOMMON                            cstackCOMMON 0000
__LdataBANK0                               dataBANK0    0000
__LdataBANK1                               dataBANK1    0000
__Leeprom_data                             eeprom_data  0000
__Lend_init                                end_init     000B
__Lfunctab                                 functab      0000
__LidataBANK0                              idataBANK0   0000
__LidataBANK1                              idataBANK1   0000
__Lidloc                                   idloc        0000
__Linit                                    init         000B
__Lintentry                                intentry     0004
__Lmaintext                                maintext     0000
__Lpowerup                                 powerup      0000
__Lram                                     ram          0000
__Lreset_vec                               reset_vec    0000
__Lsfr0                                    sfr0         0000
__Lsfr1                                    sfr1         0000
__Lsfr2                                    sfr2         0000
__Lsfr3                                    sfr3         0000
__Lspace_0                                 (abs)        0000
__Lspace_1                                 (abs)        0000
__Lspace_2                                 (abs)        0000
__Lspace_3                                 (abs)        0000
__Lstack                                   stack        0000
__Lstrings                                 strings      0000
__Lstringtext                              stringtext   0000
__Ltext                                    text         0000
__S0                                       (abs)        2009
__S1                                       (abs)        00E5
__S2                                       (abs)        0000
__S3                                       (abs)        2103
___awmod                                   text8        0F5C
___awmod@counter                           cstackBANK0  0033
___awmod@dividend                          cstackBANK0  0031
___awmod@divisor                           cstackBANK0  002F
___awmod@sign                              cstackBANK0  0034
___eecpymem                                text33       0C54
___eecpymem@cp                             cstackCOMMON 0076
___eecpymem@from                           cstackCOMMON 0073
___eecpymem@size                           cstackCOMMON 0074
___eecpymem@to                             cstackCOMMON 0077
___eetoi                                   text32       0A0A
___eetoi@addr                              cstackBANK0  0022
___eetoi@data                              cstackBANK0  0023
___int_sp                                  stack        0000
___itoee                                   text30       09B9
___itoee@addr                              cstackBANK0  0029
___itoee@data                              cstackBANK0  0025
___latbits                                 (abs)        0001
___lbmod                                   text12       0B6F
___lbmod@counter                           cstackCOMMON 0078
___lbmod@dividend                          cstackCOMMON 0077
___lbmod@divisor                           cstackCOMMON 0073
___lbmod@rem                               cstackCOMMON 0079
___lmul                                    text6        0E47
___lmul@multiplicand                       cstackBANK0  0024
___lmul@multiplier                         cstackBANK0  0020
___lmul@product                            cstackCOMMON 0074
___memcpyee                                text31       0D84
___memcpyee@from                           cstackCOMMON 0073
___memcpyee@ptr                            cstackCOMMON 0076
___memcpyee@size                           cstackCOMMON 0074
___memcpyee@to                             cstackCOMMON 0077
___sp                                      stack        0000
___stackhi                                 (abs)        0000
___stacklo                                 (abs)        0000
___wmul                                    text7        0B92
___wmul@multiplicand                       cstackBANK0  0037
___wmul@multiplier                         cstackBANK0  0035
___wmul@product                            cstackBANK0  0039
__end_of_Buttons_Clear                     text56       09AB
__end_of_Buttons_SetupInterrupts           text55       093F
__end_of_Buttons_SetupPortB                text54       099D
__end_of_Buttons_SetupPortsAndInterrups    text53       0945
__end_of_Buttons_Update                    text51       0C54
__end_of_Buttons_UpdateButton              text52       0B29
__end_of_DrawTetris                        text41       0D17
__end_of_DrawTetrisGameColumn              text42       072E
__end_of_InterruptHandler                  text58       0B08
__end_of_LCD_BlockWhileBusy                text47       094C
__end_of_LCD_Clear                         text40       0BFD
__end_of_LCD_IsBusy                        text48       09B9
__end_of_LCD_ReadStatus                    text49       09E8
__end_of_LCD_Reset                         text38       0A36
__end_of_LCD_SegmentSelection              text50       09D8
__end_of_LCD_SetX                          text45       0978
__end_of_LCD_SetY                          text44       0984
__end_of_LCD_SetZ                          text39       0990
__end_of_LCD_SetupPorts                    text37       0B4C
__end_of_LCD_TurnOn                        text36       0956
__end_of_LCD_Write                         text46       0A51
__end_of_LCD_WriteData                     text43       0961
__end_of_ResetTimer                        text35       0939
__end_of_SetupOscillator                   text34       0100
__end_of_SetupRandomness                   text28       0AC8
__end_of_SetupTimer                        text27       096C
__end_of_Tetris_ApplyPlayerToTable         text25       00FA
__end_of_Tetris_ClearFilledRows            text9        0CE2
__end_of_Tetris_CountUnitBits              text14       0E47
__end_of_Tetris_GetRandomUnit              text4        0C28
__end_of_Tetris_MovePlayerDown             text3        0CB1
__end_of_Tetris_MovePlayerLeft             text21       1000
__end_of_Tetris_MovePlayerRight            text19       07F7
__end_of_Tetris_PlayerOverlapsEnvironment  text24       0E06
__end_of_Tetris_PlayerTopmostY             text26       0A0A
__end_of_Tetris_PlayerTouchingLeftBound    text23       0A8B
__end_of_Tetris_PlayerTouchingRightBound   text20       0AA9
__end_of_Tetris_PlayerUnitBitsAreValid     text13       0D84
__end_of_Tetris_RemovePlayerFromTable      text22       0D4D
__end_of_Tetris_ResetGame                  text15       0AE7
__end_of_Tetris_ResetPlayer                text16       0B6F
__end_of_Tetris_RotatePlayer               text11       079E
__end_of_Tetris_ScoreForRowsCleared        text2        0BD8
__end_of_Tetris_SetPlayerUnit              text17       09F8
__end_of_Tetris_ShiftTableDown             text10       0ECB
__end_of_Tetris_UpdateGame                 text1        0F5C
__end_of_Tetris_UpdatePlayerUnitBits       text18       069F
__end_of_Tetris_playerStartingPosition     stringtext   0514
__end_of_Tetris_unitPivot                  stringtext   0516
__end_of_Tetris_units                      stringtext   0604
__end_of___awmod                           text8        0FA9
__end_of___eecpymem                        text33       0C81
__end_of___eetoi                           text32       0A1F
__end_of___itoee                           text30       09C8
__end_of___lbmod                           text12       0B92
__end_of___lmul                            text6        0E88
__end_of___memcpyee                        text31       0DC5
__end_of___wmul                            text7        0BB5
__end_of__initialization                   cinit        0028
__end_of__stringtab                        stringtext   0112
__end_of_logoImage                         stringtext   0512
__end_of_main                              maintext     0096
__end_of_memset                            text57       0A6D
__end_of_rand                              text5        0F10
__end_of_srand                             text29       0800
__initialization                           cinit        000D
__pbssBANK1                                bssBANK1     00E3
__pbssCOMMON                               bssCOMMON    007A
__pbssEEDATA                               bssEEDATA    0000
__pcstackBANK0                             cstackBANK0  0020
__pcstackBANK1                             cstackBANK1  00A0
__pcstackCOMMON                            cstackCOMMON 0070
__pdataBANK0                               dataBANK0    0047
__pdataBANK1                               dataBANK1    00E4
__pidataBANK0                              idataBANK0   0930
__pidataBANK1                              idataBANK1   0003
__pintentry                                intentry     0004
__pmaintext                                maintext     002B
__pstringtext                              stringtext   0100
__ptext1                                   text1        0F10
__ptext10                                  text10       0E88
__ptext11                                  text11       072E
__ptext12                                  text12       0B6F
__ptext13                                  text13       0D4D
__ptext14                                  text14       0E06
__ptext15                                  text15       0AC8
__ptext16                                  text16       0B4C
__ptext17                                  text17       09E8
__ptext18                                  text18       0604
__ptext19                                  text19       079E
__ptext2                                   text2        0BB5
__ptext20                                  text20       0A8B
__ptext21                                  text21       0FA9
__ptext22                                  text22       0D17
__ptext23                                  text23       0A6D
__ptext24                                  text24       0DC5
__ptext25                                  text25       0096
__ptext26                                  text26       09F8
__ptext27                                  text27       0961
__ptext28                                  text28       0AA9
__ptext29                                  text29       07F7
__ptext3                                   text3        0C81
__ptext30                                  text30       09B9
__ptext31                                  text31       0D84
__ptext32                                  text32       0A0A
__ptext33                                  text33       0C54
__ptext34                                  text34       00FA
__ptext35                                  text35       0934
__ptext36                                  text36       094C
__ptext37                                  text37       0B29
__ptext38                                  text38       0A1F
__ptext39                                  text39       0984
__ptext4                                   text4        0BFD
__ptext40                                  text40       0BD8
__ptext41                                  text41       0CE2
__ptext42                                  text42       069F
__ptext43                                  text43       0956
__ptext44                                  text44       0978
__ptext45                                  text45       096C
__ptext46                                  text46       0A36
__ptext47                                  text47       0945
__ptext48                                  text48       09AB
__ptext49                                  text49       09D8
__ptext5                                   text5        0ECB
__ptext50                                  text50       09C8
__ptext51                                  text51       0C28
__ptext52                                  text52       0B08
__ptext53                                  text53       093F
__ptext54                                  text54       0990
__ptext55                                  text55       0939
__ptext56                                  text56       099D
__ptext57                                  text57       0A51
__ptext58                                  text58       0AE7
__ptext6                                   text6        0E47
__ptext7                                   text7        0B92
__ptext8                                   text8        0F5C
__ptext9                                   text9        0CB1
__size_of_Buttons_Clear                    (abs)        0000
__size_of_Buttons_SetupInterrupts          (abs)        0000
__size_of_Buttons_SetupPortB               (abs)        0000
__size_of_Buttons_SetupPortsAndInterrups   (abs)        0000
__size_of_Buttons_Update                   (abs)        0000
__size_of_Buttons_UpdateButton             (abs)        0000
__size_of_DrawTetris                       (abs)        0000
__size_of_DrawTetrisGameColumn             (abs)        0000
__size_of_InterruptHandler                 (abs)        0000
__size_of_LCD_BlockWhileBusy               (abs)        0000
__size_of_LCD_Clear                        (abs)        0000
__size_of_LCD_IsBusy                       (abs)        0000
__size_of_LCD_ReadStatus                   (abs)        0000
__size_of_LCD_Reset                        (abs)        0000
__size_of_LCD_SegmentSelection             (abs)        0000
__size_of_LCD_SetX                         (abs)        0000
__size_of_LCD_SetY                         (abs)        0000
__size_of_LCD_SetZ                         (abs)        0000
__size_of_LCD_SetupPorts                   (abs)        0000
__size_of_LCD_TurnOn                       (abs)        0000
__size_of_LCD_Write                        (abs)        0000
__size_of_LCD_WriteData                    (abs)        0000
__size_of_ResetTimer                       (abs)        0000
__size_of_SetupOscillator                  (abs)        0000
__size_of_SetupRandomness                  (abs)        0000
__size_of_SetupTimer                       (abs)        0000
__size_of_Tetris_ApplyPlayerToTable        (abs)        0000
__size_of_Tetris_ClearFilledRows           (abs)        0000
__size_of_Tetris_CountUnitBits             (abs)        0000
__size_of_Tetris_GetRandomUnit             (abs)        0000
__size_of_Tetris_MovePlayerDown            (abs)        0000
__size_of_Tetris_MovePlayerLeft            (abs)        0000
__size_of_Tetris_MovePlayerRight           (abs)        0000
__size_of_Tetris_PlayerOverlapsEnvironment (abs)        0000
__size_of_Tetris_PlayerTopmostY            (abs)        0000
__size_of_Tetris_PlayerTouchingLeftBound   (abs)        0000
__size_of_Tetris_PlayerTouchingRightBound  (abs)        0000
__size_of_Tetris_PlayerUnitBitsAreValid    (abs)        0000
__size_of_Tetris_RemovePlayerFromTable     (abs)        0000
__size_of_Tetris_ResetGame                 (abs)        0000
__size_of_Tetris_ResetPlayer               (abs)        0000
__size_of_Tetris_RotatePlayer              (abs)        0000
__size_of_Tetris_ScoreForRowsCleared       (abs)        0000
__size_of_Tetris_SetPlayerUnit             (abs)        0000
__size_of_Tetris_ShiftTableDown            (abs)        0000
__size_of_Tetris_UpdateGame                (abs)        0000
__size_of_Tetris_UpdatePlayerUnitBits      (abs)        0000
__size_of___awmod                          (abs)        0000
__size_of___eecpymem                       (abs)        0000
__size_of___eetoi                          (abs)        0000
__size_of___itoee                          (abs)        0000
__size_of___lbmod                          (abs)        0000
__size_of___lmul                           (abs)        0000
__size_of___memcpyee                       (abs)        0000
__size_of___wmul                           (abs)        0000
__size_of_main                             (abs)        0000
__size_of_memset                           (abs)        0000
__size_of_rand                             (abs)        0000
__size_of_srand                            (abs)        0000
__stringbase                               stringtext   0112
__stringtab                                stringtext   0100
_highscore                                 bssEEDATA    0000
_logoImage                                 stringtext   0112
_main                                      maintext     002B
_memset                                    text57       0A51
_nRBPU                                     (abs)        040F
_rand                                      text5        0ECB
_randx                                     dataBANK0    0047
_srand                                     text29       07F7
_timerPrescaler                            dataBANK1    00E4
_uniqueSeed                                bssEEDATA    0001
_updateReady                               bssBANK1     00E3
btemp                                      (abs)        007E
end_of_initialization                      cinit        0028
interrupt_function                         intentry     0004
intlevel0                                  functab      0000
intlevel1                                  functab      0000
intlevel2                                  functab      0000
intlevel3                                  functab      0000
intlevel4                                  functab      0000
intlevel5                                  functab      0000
main@buttons                               cstackBANK1  00A0
main@tetrisGame                            cstackBANK1  00A4
memset@c                                   cstackCOMMON 0073
memset@n                                   cstackCOMMON 0075
memset@p                                   cstackCOMMON 0078
memset@p1                                  cstackCOMMON 0079
reset_vec                                  reset_vec    0000
saved_w                                    (abs)        007E
srand@x                                    cstackBANK0  0025
start                                      init         000B
start_initialization                       cinit        000D
wtemp0                                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 99 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tetrisGame     63    4[BANK1 ] struct .
  buttons         4    0[BANK1 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0      67       0
      Temps:          0       1       0       0
      Totals:         0       1      67       0
Total ram usage:       68 bytes
 Hardware stack levels required when called:    8
 This function calls:
		_Buttons_Clear
		_Buttons_SetupPortsAndInterrups
		_Buttons_Update
		_DrawTetris
		_LCD_Clear
		_LCD_Reset
		_LCD_SegmentSelection
		_LCD_SetupPorts
		_LCD_TurnOn
		_ResetTimer
		_SetupOscillator
		_SetupRandomness
		_SetupTimer
		_Tetris_GetRandomUnit
		_Tetris_MovePlayerLeft
		_Tetris_MovePlayerRight
		_Tetris_ResetGame
		_Tetris_RotatePlayer
		_Tetris_UpdateGame
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _Tetris_UpdateGame *****************
 Defined at:
		line 350 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1   37[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
  rowsCleared     1   36[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E60
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_ClearFilledRows
		_Tetris_GetRandomUnit
		_Tetris_MovePlayerDown
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_ResetPlayer
		_Tetris_ScoreForRowsCleared
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Tetris_ScoreForRowsCleared *****************
 Defined at:
		line 315 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  rowsCleared     1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  rowsCleared     1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_UpdateGame
 This function uses a non-reentrant model


 *************** function _Tetris_MovePlayerDown *****************
 Defined at:
		line 386 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1   13[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_RemovePlayerFromTable
 This function is called by:
		_Tetris_UpdateGame
 This function uses a non-reentrant model


 *************** function _Tetris_GetRandomUnit *****************
 Defined at:
		line 327 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   12[BANK0 ] PTR const struct .
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       2       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awmod
		___wmul
		_rand
 This function is called by:
		_main
		_Tetris_UpdateGame
 This function uses a non-reentrant model


 *************** function _rand *****************
 Defined at:
		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    8[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       5       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lmul
 This function is called by:
		_Tetris_GetRandomUnit
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4    0[BANK0 ] unsigned long 
  multiplicand    4    4[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  product         4    4[COMMON] unsigned long 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       8       0       0
      Locals:         4       0       0       0
      Temps:          1       0       0       0
      Totals:         5       8       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_rand
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   21[BANK0 ] unsigned int 
  multiplicand    2   23[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   25[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2   21[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_GetRandomUnit
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2   15[BANK0 ] int 
  dividend        2   17[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1   20[BANK0 ] unsigned char 
  counter         1   19[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   15[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          1       0       0       0
      Totals:         1       6       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_GetRandomUnit
 This function uses a non-reentrant model


 *************** function _Tetris_ClearFilledRows *****************
 Defined at:
		line 366 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  gameTable       1    wreg     PTR unsigned int 
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  gameTable       1    7[BANK0 ] PTR unsigned int 
		 -> main@tetrisGame(63), 
  i               1    8[BANK0 ] unsigned char 
  rowsCleared     1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       4       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Tetris_ShiftTableDown
 This function is called by:
		_Tetris_UpdateGame
 This function uses a non-reentrant model


 *************** function _Tetris_ShiftTableDown *****************
 Defined at:
		line 301 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  gameTable       1    wreg     PTR unsigned int 
		 -> main@tetrisGame(63), 
  upto            1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  gameTable       1    0[BANK0 ] PTR unsigned int 
		 -> main@tetrisGame(63), 
  i               1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         0       2       0       0
      Temps:          6       0       0       0
      Totals:         7       2       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_ClearFilledRows
 This function uses a non-reentrant model


 *************** function _Tetris_RotatePlayer *****************
 Defined at:
		line 447 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1   19[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
  oldRotation     1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       6       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_PlayerUnitBitsAreValid
		_Tetris_RemovePlayerFromTable
		_Tetris_UpdatePlayerUnitBits
		___lbmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1    7[COMMON] unsigned char 
  rem             1    9[COMMON] unsigned char 
  counter         1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerUnitBitsAreValid *****************
 Defined at:
		line 283 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR const struct .
		 -> tetrisGame.player(13), main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  player          1    9[BANK0 ] PTR const struct .
		 -> tetrisGame.player(13), main@tetrisGame(63), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_CountUnitBits
 This function is called by:
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_CountUnitBits *****************
 Defined at:
		line 247 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  unitBits        2    3[COMMON] PTR const unsigned int 
		 -> tetrisGame.player(13), Tetris_units.bits(32), Tetris_units(238), main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  j               1    3[BANK0 ] unsigned char 
  mask            2    0[BANK0 ] unsigned int 
  i               1    4[BANK0 ] unsigned char 
  result          1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       5       0       0
      Temps:          5       0       0       0
      Totals:         7       5       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    2
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_PlayerUnitBitsAreValid
 This function uses a non-reentrant model


 *************** function _Tetris_ResetGame *****************
 Defined at:
		line 343 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
  playerUnit      2   34[BANK0 ] PTR const struct .
		 -> Tetris_units(238), 
 Auto vars:     Size  Location     Type
  game            1   36[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_ResetPlayer
		_memset
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Tetris_ResetPlayer *****************
 Defined at:
		line 294 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
  playerUnit      2   29[BANK0 ] PTR const struct .
		 -> Tetris_units(238), 
 Auto vars:     Size  Location     Type
  player          1   33[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Tetris_SetPlayerUnit
 This function is called by:
		_Tetris_ResetGame
		_Tetris_UpdateGame
 This function uses a non-reentrant model


 *************** function _Tetris_SetPlayerUnit *****************
 Defined at:
		line 288 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
  unit            2    8[COMMON] PTR const struct .
		 -> Tetris_units(238), 
 Auto vars:     Size  Location     Type
  player          1   10[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         2       1       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_UpdatePlayerUnitBits
 This function is called by:
		_Tetris_ResetPlayer
 This function uses a non-reentrant model


 *************** function _Tetris_UpdatePlayerUnitBits *****************
 Defined at:
		line 263 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  player          1    7[COMMON] PTR struct .
		 -> main@tetrisGame(63), 
  i               1    4[COMMON] unsigned char 
  i               1    3[COMMON] unsigned char 
  i               1    5[COMMON] unsigned char 
  shift           1    6[COMMON] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         5       0       0       0
      Temps:          0      10       0       0
      Totals:         5      10       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    2
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_SetPlayerUnit
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_MovePlayerRight *****************
 Defined at:
		line 424 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1   16[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
  i               1   15[BANK0 ] unsigned char 
  i               1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_PlayerTouchingRightBound
		_Tetris_RemovePlayerFromTable
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerTouchingRightBound *****************
 Defined at:
		line 208 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  player          1    7[COMMON] PTR struct .
		 -> main@tetrisGame(63), 
  i               1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          4       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_MovePlayerRight
 This function uses a non-reentrant model


 *************** function _Tetris_MovePlayerLeft *****************
 Defined at:
		line 401 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1   16[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
  i               1   15[BANK0 ] unsigned char 
  i               1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_PlayerTouchingLeftBound
		_Tetris_RemovePlayerFromTable
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Tetris_RemovePlayerFromTable *****************
 Defined at:
		line 219 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1    7[COMMON] PTR struct .
		 -> main@tetrisGame(63), 
  i               1    8[COMMON] unsigned char 
  start           1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0       8       0       0
      Totals:         3       8       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_PlayerTopmostY
 This function is called by:
		_Tetris_MovePlayerDown
		_Tetris_MovePlayerLeft
		_Tetris_MovePlayerRight
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerTouchingLeftBound *****************
 Defined at:
		line 197 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  player          1    7[COMMON] PTR struct .
		 -> main@tetrisGame(63), 
  i               1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          4       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_MovePlayerLeft
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerOverlapsEnvironment *****************
 Defined at:
		line 185 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1    8[COMMON] PTR struct .
		 -> main@tetrisGame(63), 
  i               1    7[COMMON] unsigned char 
  start           1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0      12       0       0
      Totals:         3      12       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_PlayerTopmostY
 This function is called by:
		_Tetris_UpdateGame
		_Tetris_MovePlayerDown
		_Tetris_MovePlayerLeft
		_Tetris_MovePlayerRight
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_ApplyPlayerToTable *****************
 Defined at:
		line 228 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1    9[COMMON] PTR struct .
		 -> main@tetrisGame(63), 
  i               1    8[COMMON] unsigned char 
  i               1    7[COMMON] unsigned char 
  start           1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         4       0       0       0
      Temps:          0       8       0       0
      Totals:         4       8       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_PlayerTopmostY
 This function is called by:
		_Tetris_ResetGame
		_Tetris_UpdateGame
		_Tetris_MovePlayerDown
		_Tetris_MovePlayerLeft
		_Tetris_MovePlayerRight
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerTopmostY *****************
 Defined at:
		line 180 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  player          1    5[COMMON] PTR struct .
		 -> main@tetrisGame(63), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    2
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_RemovePlayerFromTable
		_Tetris_ApplyPlayerToTable
 This function uses a non-reentrant model


 *************** function _SetupTimer *****************
 Defined at:
		line 56 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SetupRandomness *****************
 Defined at:
		line 93 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___eetoi
		___itoee
		_srand
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _srand *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c"
 Parameters:    Size  Location     Type
  x               2    5[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_SetupRandomness
 This function uses a non-reentrant model


 *************** function ___itoee *****************
 Defined at:
		line 157 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeprom.c"
 Parameters:    Size  Location     Type
  addr            1    wreg     PTR eeprom void 
		 -> uniqueSeed(2), 
  data            2    5[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  addr            1    9[BANK0 ] PTR eeprom void 
		 -> uniqueSeed(2), 
 Return value:  Size  Location     Type
                  2    5[BANK0 ] unsigned int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___memcpyee
 This function is called by:
		_SetupRandomness
 This function uses a non-reentrant model


 *************** function ___memcpyee *****************
 Defined at:
		line 39 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeprom.c"
 Parameters:    Size  Location     Type
  to              1    wreg     PTR eeprom unsigned char
		 -> uniqueSeed(2), 
  from            1    3[COMMON] PTR const unsigned char 
		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(4), __ltoee@data(4), 
		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  size            1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  to              1    7[COMMON] PTR eeprom unsigned char
		 -> uniqueSeed(2), 
  ptr             1    6[COMMON] PTR const unsigned char 
		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(4), __ltoee@data(4), 
		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		___itoee
 This function uses a non-reentrant model


 *************** function ___eetoi *****************
 Defined at:
		line 112 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeprom.c"
 Parameters:    Size  Location     Type
  addr            1    wreg     PTR eeprom void 
		 -> uniqueSeed(2), 
 Auto vars:     Size  Location     Type
  addr            1    2[BANK0 ] PTR eeprom void 
		 -> uniqueSeed(2), 
  data            2    3[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    8[COMMON] unsigned int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       3       0       0
      Temps:          0       2       0       0
      Totals:         2       5       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___eecpymem
 This function is called by:
		_SetupRandomness
 This function uses a non-reentrant model


 *************** function ___eecpymem *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeprom.c"
 Parameters:    Size  Location     Type
  to              1    wreg     PTR volatile unsigned ch
		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(4), __eetol@data(4), 
		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  from            1    3[COMMON] PTR eeprom unsigned char
		 -> uniqueSeed(2), 
  size            1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  to              1    7[COMMON] PTR volatile unsigned ch
		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(4), __eetol@data(4), 
		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  cp              1    6[COMMON] PTR volatile unsigned ch
		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(4), __eetol@data(4), 
		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		___eetoi
 This function uses a non-reentrant model


 *************** function _SetupOscillator *****************
 Defined at:
		line 47 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ResetTimer *****************
 Defined at:
		line 66 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_TurnOn *****************
 Defined at:
		line 120 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_Write
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_SetupPorts *****************
 Defined at:
		line 48 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_Reset *****************
 Defined at:
		line 66 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCD_SetX
		_LCD_SetY
		_LCD_SetZ
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_SetZ *****************
 Defined at:
		line 140 in file "LCD.c"
 Parameters:    Size  Location     Type
  z               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  z               1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_Write
 This function is called by:
		_LCD_Reset
 This function uses a non-reentrant model


 *************** function _LCD_Clear *****************
 Defined at:
		line 145 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  y               1    3[BANK0 ] unsigned char 
  x               1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCD_SetX
		_LCD_SetY
		_LCD_WriteData
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _DrawTetris *****************
 Defined at:
		line 53 in file "Drawing.c"
 Parameters:    Size  Location     Type
  tetrisGame      1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  tetrisGame      1   17[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
  x               1   22[BANK0 ] unsigned char 
  rightMask       2   20[BANK0 ] unsigned int 
  leftMask        2   18[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       6       0       0
      Temps:          0       1       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_DrawTetrisGameColumn
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _DrawTetrisGameColumn *****************
 Defined at:
		line 15 in file "Drawing.c"
 Parameters:    Size  Location     Type
  tetrisGame      1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
  x               1    2[BANK0 ] unsigned char 
  rightMask       2    3[BANK0 ] unsigned int 
  leftMask        2    5[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  tetrisGame      1    9[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
  i               1   13[BANK0 ] unsigned char 
  gameRow         2   11[BANK0 ] unsigned int 
  lcdRow          1   15[BANK0 ] unsigned char 
  y               1   14[BANK0 ] unsigned char 
  tableY          1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       7       0       0
      Temps:          0       2       0       0
      Totals:         0      14       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCD_SegmentSelection
		_LCD_SetX
		_LCD_SetY
		_LCD_WriteData
 This function is called by:
		_DrawTetris
 This function uses a non-reentrant model


 *************** function _LCD_WriteData *****************
 Defined at:
		line 102 in file "LCD.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_Write
 This function is called by:
		_LCD_Clear
		_DrawTetrisGameColumn
		_DrawLogo
 This function uses a non-reentrant model


 *************** function _LCD_SetY *****************
 Defined at:
		line 130 in file "LCD.c"
 Parameters:    Size  Location     Type
  y               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  y               1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_Write
 This function is called by:
		_LCD_Reset
		_LCD_Clear
		_DrawTetrisGameColumn
 This function uses a non-reentrant model


 *************** function _LCD_SetX *****************
 Defined at:
		line 135 in file "LCD.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  x               1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_Write
 This function is called by:
		_LCD_Reset
		_LCD_Clear
		_DrawTetrisGameColumn
 This function uses a non-reentrant model


 *************** function _LCD_Write *****************
 Defined at:
		line 35 in file "LCD.c"
 Parameters:    Size  Location     Type
  mode            1    wreg     enum E1321
  data            1    8[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  mode            1    9[COMMON] enum E1321
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_BlockWhileBusy
 This function is called by:
		_LCD_WriteData
		_LCD_TurnOn
		_LCD_SetY
		_LCD_SetX
		_LCD_SetZ
		_LCD_TurnOff
 This function uses a non-reentrant model


 *************** function _LCD_BlockWhileBusy *****************
 Defined at:
		line 28 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_IsBusy
 This function is called by:
		_LCD_Write
		_LCD_ReadData
 This function uses a non-reentrant model


 *************** function _LCD_IsBusy *****************
 Defined at:
		line 22 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  status          1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_ReadStatus
 This function is called by:
		_LCD_BlockWhileBusy
 This function uses a non-reentrant model


 *************** function _LCD_ReadStatus *****************
 Defined at:
		line 80 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  status          1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_IsBusy
 This function uses a non-reentrant model


 *************** function _LCD_SegmentSelection *****************
 Defined at:
		line 107 in file "LCD.c"
 Parameters:    Size  Location     Type
  segments        1    wreg     enum E1292
 Auto vars:     Size  Location     Type
  segments        1    3[COMMON] enum E1292
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_DrawTetrisGameColumn
		_DrawLogo
 This function uses a non-reentrant model


 *************** function _Buttons_Update *****************
 Defined at:
		line 51 in file "Buttons.c"
 Parameters:    Size  Location     Type
  buttons         1    wreg     PTR struct .
		 -> main@buttons(4), 
 Auto vars:     Size  Location     Type
  buttons         1    6[COMMON] PTR struct .
		 -> main@buttons(4), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Buttons_UpdateButton
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Buttons_UpdateButton *****************
 Defined at:
		line 26 in file "Buttons.c"
 Parameters:    Size  Location     Type
  button          1    wreg     PTR struct .
		 -> main@buttons(4), 
  nHeld           1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  button          1    5[COMMON] PTR struct .
		 -> main@buttons(4), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Buttons_Update
 This function uses a non-reentrant model


 *************** function _Buttons_SetupPortsAndInterrups *****************
 Defined at:
		line 40 in file "Buttons.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Buttons_SetupInterrupts
		_Buttons_SetupPortB
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Buttons_SetupPortB *****************
 Defined at:
		line 11 in file "Buttons.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Buttons_SetupPortsAndInterrups
 This function uses a non-reentrant model


 *************** function _Buttons_SetupInterrupts *****************
 Defined at:
		line 19 in file "Buttons.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Buttons_SetupPortsAndInterrups
 This function uses a non-reentrant model


 *************** function _Buttons_Clear *****************
 Defined at:
		line 46 in file "Buttons.c"
 Parameters:    Size  Location     Type
  buttons         1    wreg     PTR struct .
		 -> main@buttons(4), 
 Auto vars:     Size  Location     Type
  buttons         1    0[BANK0 ] PTR struct .
		 -> main@buttons(4), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_memset
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _memset *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c"
 Parameters:    Size  Location     Type
  p1              1    wreg     PTR void 
		 -> main@buttons(4), main@tetrisGame(63), 
  c               2    3[COMMON] int 
  n               2    5[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  p1              1    9[COMMON] PTR void 
		 -> main@buttons(4), main@tetrisGame(63), 
  p               1    8[COMMON] PTR unsigned char 
		 -> main@buttons(4), main@tetrisGame(63), 
 Return value:  Size  Location     Type
                  1    wreg      PTR void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_ResetGame
		_Buttons_Clear
 This function uses a non-reentrant model


 *************** function _InterruptHandler *****************
 Defined at:
		line 71 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          3       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
../Tetris/Tetris.c
		_Tetris_ApplyPlayerToTable		CODE           	0096	0000	101
		_Tetris_UpdateGame		CODE           	0F10	0000	77
		_Tetris_PlayerTouchingRightBound		CODE           	0A8B	0000	31
		_Tetris_MovePlayerRight		CODE           	079E	0000	90
		_Tetris_RemovePlayerFromTable		CODE           	0D17	0000	55
		_Tetris_RotatePlayer		CODE           	072E	0000	113
		_Tetris_ClearFilledRows		CODE           	0CB1	0000	50
		_Tetris_ScoreForRowsCleared		CODE           	0BB5	0000	36
		_Tetris_ShiftTableDown		CODE           	0E88	0000	68
		_Tetris_UpdatePlayerUnitBits		CODE           	0604	0000	156
		_Tetris_ResetPlayer		CODE           	0B4C	0000	36
		_Tetris_MovePlayerDown		CODE           	0C81	0000	49
		_Tetris_PlayerOverlapsEnvironment		CODE           	0DC5	0000	66
		_Tetris_GetRandomUnit		CODE           	0BFD	0000	44
		_Tetris_PlayerTopmostY		CODE           	09F8	0000	19
		_Tetris_SetPlayerUnit		CODE           	09E8	0000	17
		_Tetris_PlayerUnitBitsAreValid		CODE           	0D4D	0000	56
		_Tetris_CountUnitBits		CODE           	0E06	0000	66
		_Tetris_MovePlayerLeft		CODE           	0FA9	0000	88
		_Tetris_PlayerTouchingLeftBound		CODE           	0A6D	0000	31
		_Tetris_ResetGame		CODE           	0AC8	0000	32

../Tetris/Tetris.c estimated size: 1281

Drawing.c
		_DrawTetrisGameColumn		CODE           	069F	0000	144
		_DrawTetris    		CODE           	0CE2	0000	54

Drawing.c estimated size: 198

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c
		___awmod       		CODE           	0F5C	0000	78

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c estimated size: 78

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c
		___wmul        		CODE           	0B92	0000	36

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c estimated size: 36

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c
		___lbmod       		CODE           	0B6F	0000	36

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c estimated size: 36

Buttons.c
		_Buttons_SetupPortB		CODE           	0990	0000	14
		_Buttons_SetupInterrupts		CODE           	0939	0000	7
		_Buttons_UpdateButton		CODE           	0B08	0000	34
		_Buttons_Clear 		CODE           	099D	0000	15
		_Buttons_Update		CODE           	0C28	0000	45
		_Buttons_SetupPortsAndInterrups		CODE           	093F	0000	7

Buttons.c estimated size: 122

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeprom.c
		___memcpyee    		CODE           	0D84	0000	66
		___eetoi       		CODE           	0A0A	0000	22
		___itoee       		CODE           	09B9	0000	16
		___eecpymem    		CODE           	0C54	0000	46

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeprom.c estimated size: 150

shared
		_Tetris_unitPivot		STRCODE        	0514	0000	3
		__stringtab    		STRCODE        	0100	0000	19
		_logoImage     		STRCODE        	0112	0000	1025
		_Tetris_playerStartingPosition		STRCODE        	0512	0000	3
		__initialization		CODE           	000D	0000	28
		_Tetris_units  		STRCODE        	0516	0000	239

shared estimated size: 1317

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c
		___lmul        		CODE           	0E47	0000	66

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c estimated size: 66

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c
		_srand         		CODE           	07F7	0000	10
		_rand          		CODE           	0ECB	0000	70

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c estimated size: 80

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c
		_memset        		CODE           	0A51	0000	29

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c estimated size: 29

main.c
		_main          		CODE           	002B	0000	108
		_SetupOscillator		CODE           	00FA	0000	7
		_InterruptHandler		CODE           	0AE7	0000	34
		_SetupTimer    		CODE           	0961	0000	12
		_ResetTimer    		CODE           	0934	0000	6
		_SetupRandomness		CODE           	0AA9	0000	32

main.c estimated size: 199

LCD.c
		_LCD_SegmentSelection		CODE           	09C8	0000	17
		_LCD_BlockWhileBusy		CODE           	0945	0000	8
		_LCD_SetX      		CODE           	096C	0000	13
		_LCD_SetY      		CODE           	0978	0000	13
		_LCD_SetZ      		CODE           	0984	0000	13
		_LCD_ReadStatus		CODE           	09D8	0000	17
		_LCD_Reset     		CODE           	0A1F	0000	24
		_LCD_SetupPorts		CODE           	0B29	0000	36
		_LCD_TurnOn    		CODE           	094C	0000	11
		_LCD_Clear     		CODE           	0BD8	0000	38
		_LCD_Write     		CODE           	0A36	0000	28
		_LCD_IsBusy    		CODE           	09AB	0000	15
		_LCD_WriteData 		CODE           	0956	0000	12

LCD.c estimated size: 245

