Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.05\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\Embedded.X.production.sym \
  --cmf=dist/default/production\Embedded.X.production.cmf -z -Q16F884 \
  -oC:\Users\ALECEI~1\AppData\Local\Temp\s20k.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Embedded.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0120h-016Fh -pstack=STACK -ACODE=00h-07FFhx2 \
  -ASTRCODE=00h-0FFFh -ASTRING=00h-0FFhx16 -ACONST=00h-0FFhx16 \
  -AENTRY=00h-0FFhx16 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\ALECEI~1\AppData\Local\Temp\s20k.o \
  dist/default/production\Embedded.X.production.o 

Object code version is 3.11

Machine type is 16F884



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ALECEI~1\AppData\Local\Temp\s20k.o
                end_init                              0        0        2        0       0
dist/default/production\Embedded.X.production.o
                cinit                               7EE      7EE       12      FDC       0
                text20                              664      664       4D      CC8       0
                text19                              3E3      3E3       13      7C6       0
                text18                              55E      55E       3F      ABC       0
                text17                              61F      61F       45      C3E       0
                text16                              427      427       1D      84E       0
                text15                              3C6      3C6        E      78C       0
                text14                              4C5      4C5       32      98A       0
                text13                              59D      59D       41      B3A       0
                text12                              444      444       1E      888       0
                text11                              52A      52A       34      A54       0
                text10                              6B1      6B1       57      D62       0
                text9                               768      768       86      ED0       0
                text8                               3D4      3D4        F      7A8       0
                text7                               481      481       21      902       0
                text6                               40B      40B       1C      816       0
                text5                               462      462       1F      8C4       0
                text4                               5DE      5DE       41      BBC       0
                text3                               4F7      4F7       33      9EE       0
                text2                               4A2      4A2       23      944       0
                text1                               708      708       60      E10       0
                maintext                            3F6      3F6       15      7EC       0
                cstackBANK0                          20       20       16       20       1
                cstackCOMMON                         70       70        E       70       1
                cstackBANK1                          A0       A0       4E       A0       1
                dataBANK0                            36       36        4       20       1
                strings                               2        2       77        4       0
                idataBANK0                          3C2      3C2        4      784       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        2         0
                cinit                               7EE      7EE       12         0
                text20                              664      664       4D         0
                text19                              3E3      3E3       13         0
                text18                              55E      55E       3F         0
                text17                              61F      61F       45         0
                text16                              427      427       1D         0
                text15                              3C6      3C6        E         0
                text14                              4C5      4C5       32         0
                text13                              59D      59D       41         0
                text12                              444      444       1E         0
                text11                              52A      52A       34         0
                text10                              6B1      6B1       57         0
                text9                               768      768       86         0
                text8                               3D4      3D4        F         0
                text7                               481      481       21         0
                text6                               40B      40B       1C         0
                text5                               462      462       1F         0
                text4                               5DE      5DE       41         0
                text3                               4F7      4F7       33         0
                text2                               4A2      4A2       23         0
                text1                               708      708       60         0
                maintext                            3F6      3F6       15         0
                idataBANK0                          3C2      3C2        4         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                               2        2       77         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       16         1
                dataBANK0                            36       36        4         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       4E         1

        CLASS   BANK2          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK3          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000002  000002         0       0  CODE        2
                strings                        000002  000077  000079         4       0  STRING      2
                cstackBANK0                    000020  00001A  00003A        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                cstackBANK1                    0000A0  00004E  0000EE        A0       1  BANK1       1
                idataBANK0                     0003C2  000004  0003C6       784       0  CODE        2
                text15                         0003C6  00000E  0003D4       78C       0  CODE        2
                text8                          0003D4  00000F  0003E3       7A8       0  CODE        2
                text19                         0003E3  000013  0003F6       7C6       0  CODE        2
                maintext                       0003F6  000015  00040B       7EC       0  CODE        2
                text6                          00040B  00001C  000427       816       0  CODE        2
                text16                         000427  00001D  000444       84E       0  CODE        2
                text12                         000444  00001E  000462       888       0  CODE        2
                text5                          000462  00001F  000481       8C4       0  CODE        2
                text7                          000481  000021  0004A2       902       0  CODE        2
                text2                          0004A2  000023  0004C5       944       0  CODE        2
                text14                         0004C5  000032  0004F7       98A       0  CODE        2
                text3                          0004F7  000033  00052A       9EE       0  CODE        2
                text11                         00052A  000034  00055E       A54       0  CODE        2
                text18                         00055E  00003F  00059D       ABC       0  CODE        2
                text13                         00059D  000041  0005DE       B3A       0  CODE        2
                text4                          0005DE  000041  00061F       BBC       0  CODE        2
                text17                         00061F  000045  000664       C3E       0  CODE        2
                text20                         000664  00004D  0006B1       CC8       0  CODE        2
                text10                         0006B1  000057  000708       D62       0  CODE        2
                text1                          000708  000060  000768       E10       0  CODE        2
                text9                          000768  000086  0007EE       ED0       0  CODE        2
                cinit                          0007EE  000012  000800       FDC       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            003A-006F             36           1
        BANK1            00EE-00EF              2           1
        BANK2            0120-016F             50           1
        CODE             0079-03C1            349           2
                         0800-0FFF            800
        CONFIG           2007-2008              2           2
        CONST            0079-03C1            100           2
                         0800-0FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0079-03C1            100           2
                         0800-0FFF            100
        IDLOC            2000-2003              4           2
        RAM              003A-006F             36           1
                         00EE-00EF              2
                         0120-016F             50
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-011F             20           1
        SFR3             0180-01EF             70           1
        STACK            0120-016F             50           1
        STRCODE          0079-03C1            349           2
                         0800-0FFF            800
        STRING           0079-03C1            100           2
                         0800-0FFF            100

                                  Symbol Table

?___awmod                                  cstackBANK0  0027
?___lmul                                   cstackCOMMON 0070
?_rand                                     cstackBANK0  0020
Tetris_ApplyPlayerToTable@game             cstackCOMMON 007D
Tetris_ApplyPlayerToTable@i                cstackCOMMON 007C
Tetris_ApplyPlayerToTable@start            cstackCOMMON 007B
Tetris_CountUnitBits@i                     cstackCOMMON 007B
Tetris_CountUnitBits@j                     cstackCOMMON 007A
Tetris_CountUnitBits@mask                  cstackCOMMON 0077
Tetris_CountUnitBits@result                cstackCOMMON 0079
Tetris_CountUnitBits@unitBits              cstackCOMMON 0070
Tetris_MovePlayerLeft@game                 cstackBANK0  0030
Tetris_MovePlayerLeft@i                    cstackBANK0  002E
Tetris_MovePlayerLeft@i_281                cstackBANK0  002F
Tetris_PlayerOverlapsEnvironment@game      cstackCOMMON 0074
Tetris_PlayerOverlapsEnvironment@i         cstackCOMMON 0075
Tetris_PlayerOverlapsEnvironment@start     cstackCOMMON 0073
Tetris_PlayerTopmostY@player               cstackCOMMON 0072
Tetris_PlayerTouchingLeftBound@i           cstackCOMMON 0075
Tetris_PlayerTouchingLeftBound@player      cstackCOMMON 0074
Tetris_PlayerUnitBitsAreValid@player       cstackCOMMON 007C
Tetris_RemovePlayerFromTable@game          cstackCOMMON 007C
Tetris_RemovePlayerFromTable@i             cstackCOMMON 007D
Tetris_RemovePlayerFromTable@start         cstackCOMMON 007B
Tetris_ResetGame@game                      cstackBANK0  0034
Tetris_ResetGame@playerUnit                cstackBANK0  0032
Tetris_ResetPlayer@player                  cstackBANK0  0024
Tetris_ResetPlayer@playerUnit              cstackBANK0  0021
Tetris_RotatePlayer@game                   cstackBANK0  002F
Tetris_RotatePlayer@oldRotation            cstackBANK0  002E
Tetris_SetPlayerUnit@player                cstackBANK0  0020
Tetris_SetPlayerUnit@unit                  cstackCOMMON 007C
Tetris_UpdatePlayerUnitBits@i              cstackCOMMON 0079
Tetris_UpdatePlayerUnitBits@i_197          cstackCOMMON 0077
Tetris_UpdatePlayerUnitBits@i_198          cstackCOMMON 0078
Tetris_UpdatePlayerUnitBits@player         cstackCOMMON 007B
Tetris_UpdatePlayerUnitBits@shift          cstackCOMMON 007A
_Tetris_ApplyPlayerToTable                 text14       04C5
_Tetris_CountUnitBits                      text4        05DE
_Tetris_GetRandomUnit                      text16       0427
_Tetris_MovePlayerLeft                     text10       06B1
_Tetris_PlayerOverlapsEnvironment          text13       059D
_Tetris_PlayerTopmostY                     text15       03C6
_Tetris_PlayerTouchingLeftBound            text12       0444
_Tetris_PlayerUnitBitsAreValid             text3        04F7
_Tetris_RemovePlayerFromTable              text11       052A
_Tetris_ResetGame                          text5        0462
_Tetris_ResetPlayer                        text7        0481
_Tetris_RotatePlayer                       text1        0708
_Tetris_SetPlayerUnit                      text8        03D4
_Tetris_UpdatePlayerUnitBits               text9        0768
_Tetris_playerStartingPosition             strings      0012
_Tetris_unitPivot                          strings      0014
_Tetris_units                              strings      0016
__Habs1                                    abs1         0000
__Hbank0                                   bank0        0000
__Hbank1                                   bank1        0000
__Hbank2                                   bank2        0000
__Hbank3                                   bank3        0000
__Hcinit                                   cinit        0800
__Hclrtext                                 clrtext      0000
__Hcode                                    code         0000
__Hcommon                                  common       0000
__Hconfig                                  config       0000
__HcstackBANK0                             cstackBANK0  0000
__HcstackBANK1                             cstackBANK1  0000
__HcstackCOMMON                            cstackCOMMON 0000
__HdataBANK0                               dataBANK0    0000
__Heeprom_data                             eeprom_data  0000
__Hend_init                                end_init     0002
__Hfunctab                                 functab      0000
__HidataBANK0                              idataBANK0   0000
__Hidloc                                   idloc        0000
__Hinit                                    init         0000
__Hintentry                                intentry     0000
__Hmaintext                                maintext     0000
__Hpowerup                                 powerup      0000
__Hram                                     ram          0000
__Hreset_vec                               reset_vec    0000
__Hsfr0                                    sfr0         0000
__Hsfr1                                    sfr1         0000
__Hsfr2                                    sfr2         0000
__Hsfr3                                    sfr3         0000
__Hspace_0                                 (abs)        0800
__Hspace_1                                 (abs)        00EE
__Hspace_2                                 (abs)        0000
__Hspace_3                                 (abs)        0000
__Hstack                                   stack        0000
__Hstrings                                 strings      0000
__Htext                                    text         0000
__Labs1                                    abs1         0000
__Lbank0                                   bank0        0000
__Lbank1                                   bank1        0000
__Lbank2                                   bank2        0000
__Lbank3                                   bank3        0000
__Lcinit                                   cinit        07EE
__Lclrtext                                 clrtext      0000
__Lcode                                    code         0000
__Lcommon                                  common       0000
__Lconfig                                  config       0000
__LcstackBANK0                             cstackBANK0  0000
__LcstackBANK1                             cstackBANK1  0000
__LcstackCOMMON                            cstackCOMMON 0000
__LdataBANK0                               dataBANK0    0000
__Leeprom_data                             eeprom_data  0000
__Lend_init                                end_init     0000
__Lfunctab                                 functab      0000
__LidataBANK0                              idataBANK0   0000
__Lidloc                                   idloc        0000
__Linit                                    init         0000
__Lintentry                                intentry     0000
__Lmaintext                                maintext     0000
__Lpowerup                                 powerup      0000
__Lram                                     ram          0000
__Lreset_vec                               reset_vec    0000
__Lsfr0                                    sfr0         0000
__Lsfr1                                    sfr1         0000
__Lsfr2                                    sfr2         0000
__Lsfr3                                    sfr3         0000
__Lspace_0                                 (abs)        0000
__Lspace_1                                 (abs)        0000
__Lspace_2                                 (abs)        0000
__Lspace_3                                 (abs)        0000
__Lstack                                   stack        0000
__Lstrings                                 strings      0000
__Ltext                                    text         0000
__S0                                       (abs)        0800
__S1                                       (abs)        00EE
__S2                                       (abs)        0000
__S3                                       (abs)        0000
___awmod                                   text20       0664
___awmod@counter                           cstackBANK0  002B
___awmod@dividend                          cstackBANK0  0029
___awmod@divisor                           cstackBANK0  0027
___awmod@sign                              cstackBANK0  002C
___bmul                                    text19       03E3
___bmul@multiplicand                       cstackBANK0  002D
___bmul@multiplier                         cstackBANK0  0030
___bmul@product                            cstackBANK0  002F
___int_sp                                  stack        0000
___latbits                                 (abs)        0001
___lbmod                                   text2        04A2
___lbmod@counter                           cstackCOMMON 0075
___lbmod@dividend                          cstackCOMMON 0074
___lbmod@divisor                           cstackCOMMON 0070
___lbmod@rem                               cstackCOMMON 0076
___lmul                                    text18       055E
___lmul@multiplicand                       cstackCOMMON 0074
___lmul@multiplier                         cstackCOMMON 0070
___lmul@product                            cstackCOMMON 0079
___sp                                      stack        0000
___stackhi                                 (abs)        0000
___stacklo                                 (abs)        0000
__end_of_Tetris_ApplyPlayerToTable         text14       04F7
__end_of_Tetris_CountUnitBits              text4        061F
__end_of_Tetris_GetRandomUnit              text16       0444
__end_of_Tetris_MovePlayerLeft             text10       0708
__end_of_Tetris_PlayerOverlapsEnvironment  text13       05DE
__end_of_Tetris_PlayerTopmostY             text15       03D4
__end_of_Tetris_PlayerTouchingLeftBound    text12       0462
__end_of_Tetris_PlayerUnitBitsAreValid     text3        052A
__end_of_Tetris_RemovePlayerFromTable      text11       055E
__end_of_Tetris_ResetGame                  text5        0481
__end_of_Tetris_ResetPlayer                text7        04A2
__end_of_Tetris_RotatePlayer               text1        0768
__end_of_Tetris_SetPlayerUnit              text8        03E3
__end_of_Tetris_UpdatePlayerUnitBits       text9        07EE
__end_of_Tetris_playerStartingPosition     strings      0014
__end_of_Tetris_unitPivot                  strings      0016
__end_of_Tetris_units                      strings      0079
__end_of___awmod                           text20       06B1
__end_of___bmul                            text19       03F6
__end_of___lbmod                           text2        04C5
__end_of___lmul                            text18       059D
__end_of__initialization                   cinit        07FD
__end_of__stringtab                        strings      0012
__end_of_main                              maintext     040B
__end_of_memset                            text6        0427
__end_of_rand                              text17       0664
__initialization                           cinit        07EE
__pcstackBANK0                             cstackBANK0  0020
__pcstackBANK1                             cstackBANK1  00A0
__pcstackCOMMON                            cstackCOMMON 0070
__pdataBANK0                               dataBANK0    0036
__pidataBANK0                              idataBANK0   03C2
__pmaintext                                maintext     03F6
__pstrings                                 strings      0002
__ptext1                                   text1        0708
__ptext10                                  text10       06B1
__ptext11                                  text11       052A
__ptext12                                  text12       0444
__ptext13                                  text13       059D
__ptext14                                  text14       04C5
__ptext15                                  text15       03C6
__ptext16                                  text16       0427
__ptext17                                  text17       061F
__ptext18                                  text18       055E
__ptext19                                  text19       03E3
__ptext2                                   text2        04A2
__ptext20                                  text20       0664
__ptext3                                   text3        04F7
__ptext4                                   text4        05DE
__ptext5                                   text5        0462
__ptext6                                   text6        040B
__ptext7                                   text7        0481
__ptext8                                   text8        03D4
__ptext9                                   text9        0768
__size_of_Tetris_ApplyPlayerToTable        (abs)        0000
__size_of_Tetris_CountUnitBits             (abs)        0000
__size_of_Tetris_GetRandomUnit             (abs)        0000
__size_of_Tetris_MovePlayerLeft            (abs)        0000
__size_of_Tetris_PlayerOverlapsEnvironment (abs)        0000
__size_of_Tetris_PlayerTopmostY            (abs)        0000
__size_of_Tetris_PlayerTouchingLeftBound   (abs)        0000
__size_of_Tetris_PlayerUnitBitsAreValid    (abs)        0000
__size_of_Tetris_RemovePlayerFromTable     (abs)        0000
__size_of_Tetris_ResetGame                 (abs)        0000
__size_of_Tetris_ResetPlayer               (abs)        0000
__size_of_Tetris_RotatePlayer              (abs)        0000
__size_of_Tetris_SetPlayerUnit             (abs)        0000
__size_of_Tetris_UpdatePlayerUnitBits      (abs)        0000
__size_of___awmod                          (abs)        0000
__size_of___bmul                           (abs)        0000
__size_of___lbmod                          (abs)        0000
__size_of___lmul                           (abs)        0000
__size_of_main                             (abs)        0000
__size_of_memset                           (abs)        0000
__size_of_rand                             (abs)        0000
__stringbase                               strings      0011
__stringtab                                strings      0002
_main                                      maintext     03F6
_memset                                    text6        040B
_rand                                      text17       061F
_randx                                     dataBANK0    0036
btemp                                      (abs)        007E
end_of_initialization                      cinit        07FD
intlevel0                                  functab      0000
intlevel1                                  functab      0000
intlevel2                                  functab      0000
intlevel3                                  functab      0000
intlevel4                                  functab      0000
intlevel5                                  functab      0000
main@game                                  cstackBANK1  00A0
memset@c                                   cstackCOMMON 0070
memset@n                                   cstackCOMMON 0072
memset@p                                   cstackCOMMON 0076
memset@p1                                  cstackCOMMON 0075
reset_vec                                  reset_vec    0000
start                                      init         0000
start_initialization                       cinit        07EE
wtemp0                                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 5 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  game           78    0[BANK1 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0      78       0
      Temps:          0       1       0       0
      Totals:         0       1      78       0
Total ram usage:       79 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_Tetris_GetRandomUnit
		_Tetris_MovePlayerLeft
		_Tetris_ResetGame
		_Tetris_RotatePlayer
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _Tetris_RotatePlayer *****************
 Defined at:
		line 282 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  game            1   15[BANK0 ] PTR struct .
		 -> main@game(78), 
  oldRotation     1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_PlayerUnitBitsAreValid
		_Tetris_RemovePlayerFromTable
		_Tetris_UpdatePlayerUnitBits
		___lbmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1    4[COMMON] unsigned char 
  rem             1    6[COMMON] unsigned char 
  counter         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerUnitBitsAreValid *****************
 Defined at:
		line 174 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR const struct .
		 -> game.player(13), main@game(78), 
 Auto vars:     Size  Location     Type
  player          1   12[COMMON] PTR const struct .
		 -> game.player(13), main@game(78), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       4       0       0
      Totals:         1       4       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Tetris_CountUnitBits
 This function is called by:
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_CountUnitBits *****************
 Defined at:
		line 138 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  unitBits        2    0[COMMON] PTR const unsigned int 
		 -> game.player(13), Tetris_units.bits(32), Tetris_units(99), main@game(78), 
 Auto vars:     Size  Location     Type
  j               1   10[COMMON] unsigned char 
  mask            2    7[COMMON] unsigned int 
  i               1   11[COMMON] unsigned char 
  result          1    9[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         5       0       0       0
      Temps:          5       0       0       0
      Totals:        12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    2
 This function calls:
		Nothing
 This function is called by:
		_Tetris_PlayerUnitBitsAreValid
 This function uses a non-reentrant model


 *************** function _Tetris_ResetGame *****************
 Defined at:
		line 210 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@game(78), 
  playerUnit      1   18[BANK0 ] PTR const struct .
		 -> Tetris_units(99), 
 Auto vars:     Size  Location     Type
  game            1   20[BANK0 ] PTR struct .
		 -> main@game(78), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_ResetPlayer
		_memset
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _memset *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c"
 Parameters:    Size  Location     Type
  p1              1    wreg     PTR void 
		 -> main@game(78), 
  c               2    0[COMMON] int 
  n               2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  p1              1    5[COMMON] PTR void 
		 -> main@game(78), 
  p               1    6[COMMON] PTR unsigned char 
		 -> main@game(78), 
 Return value:  Size  Location     Type
                  1    wreg      PTR void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_ResetGame
 This function uses a non-reentrant model


 *************** function _Tetris_ResetPlayer *****************
 Defined at:
		line 185 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@game(78), 
  playerUnit      1    1[BANK0 ] PTR const struct .
		 -> Tetris_units(99), 
 Auto vars:     Size  Location     Type
  player          1    4[BANK0 ] PTR struct .
		 -> main@game(78), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_SetPlayerUnit
 This function is called by:
		_Tetris_ResetGame
 This function uses a non-reentrant model


 *************** function _Tetris_SetPlayerUnit *****************
 Defined at:
		line 179 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@game(78), 
  unit            1   12[COMMON] PTR const struct .
		 -> Tetris_units(99), 
 Auto vars:     Size  Location     Type
  player          1    0[BANK0 ] PTR struct .
		 -> main@game(78), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         0       1       0       0
      Temps:          1       0       0       0
      Totals:         2       1       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Tetris_UpdatePlayerUnitBits
 This function is called by:
		_Tetris_ResetPlayer
 This function uses a non-reentrant model


 *************** function _Tetris_UpdatePlayerUnitBits *****************
 Defined at:
		line 154 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  player          1   11[COMMON] PTR struct .
		 -> main@game(78), 
  i               1    8[COMMON] unsigned char 
  i               1    7[COMMON] unsigned char 
  i               1    9[COMMON] unsigned char 
  shift           1   10[COMMON] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         5       0       0       0
      Temps:          7       0       0       0
      Totals:        12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    2
 This function calls:
		Nothing
 This function is called by:
		_Tetris_SetPlayerUnit
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_MovePlayerLeft *****************
 Defined at:
		line 236 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  game            1   16[BANK0 ] PTR struct .
		 -> main@game(78), 
  i               1   15[BANK0 ] unsigned char 
  i               1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_PlayerTouchingLeftBound
		_Tetris_RemovePlayerFromTable
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Tetris_RemovePlayerFromTable *****************
 Defined at:
		line 120 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  game            1   12[COMMON] PTR struct .
		 -> main@game(78), 
  i               1   13[COMMON] unsigned char 
  start           1   11[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          8       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Tetris_PlayerTopmostY
 This function is called by:
		_Tetris_MovePlayerLeft
		_Tetris_RotatePlayer
		_Tetris_MovePlayerDown
		_Tetris_MovePlayerRight
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerTouchingLeftBound *****************
 Defined at:
		line 98 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  player          1    4[COMMON] PTR struct .
		 -> main@game(78), 
  i               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          4       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_MovePlayerLeft
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerOverlapsEnvironment *****************
 Defined at:
		line 86 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  game            1    4[COMMON] PTR struct .
		 -> main@game(78), 
  i               1    5[COMMON] unsigned char 
  start           1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0      12       0       0
      Totals:         3      12       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Tetris_PlayerTopmostY
 This function is called by:
		_Tetris_MovePlayerLeft
		_Tetris_RotatePlayer
		_Tetris_MovePlayerDown
		_Tetris_MovePlayerRight
 This function uses a non-reentrant model


 *************** function _Tetris_ApplyPlayerToTable *****************
 Defined at:
		line 129 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  game            1   13[COMMON] PTR struct .
		 -> main@game(78), 
  i               1   12[COMMON] unsigned char 
  start           1   11[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          8       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Tetris_PlayerTopmostY
 This function is called by:
		_Tetris_ResetGame
		_Tetris_MovePlayerLeft
		_Tetris_RotatePlayer
		_Tetris_MovePlayerDown
		_Tetris_MovePlayerRight
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerTopmostY *****************
 Defined at:
		line 81 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  player          1    2[COMMON] PTR struct .
		 -> main@game(78), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    2
 This function calls:
		Nothing
 This function is called by:
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_RemovePlayerFromTable
		_Tetris_ApplyPlayerToTable
 This function uses a non-reentrant model


 *************** function _Tetris_GetRandomUnit *****************
 Defined at:
		line 192 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      PTR const struct .
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___awmod
		___bmul
		_rand
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rand *****************
 Defined at:
		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       5       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___lmul
 This function is called by:
		_Tetris_GetRandomUnit
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4    0[COMMON] unsigned long 
  multiplicand    4    4[COMMON] unsigned long 
 Auto vars:     Size  Location     Type
  product         4    9[COMMON] unsigned long 
 Return value:  Size  Location     Type
                  4    0[COMMON] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         8       0       0       0
      Locals:         4       0       0       0
      Temps:          1       0       0       0
      Totals:        13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_rand
 This function uses a non-reentrant model


 *************** function ___bmul *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1   13[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1   16[BANK0 ] unsigned char 
  product         1   15[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_GetRandomUnit
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2    7[BANK0 ] int 
  dividend        2    9[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1   12[BANK0 ] unsigned char 
  counter         1   11[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    7[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          1       0       0       0
      Totals:         1       6       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_GetRandomUnit
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
../Tetris/Tetris.c
		_Tetris_ApplyPlayerToTable		CODE           	04C5	0000	51
		_Tetris_RemovePlayerFromTable		CODE           	052A	0000	53
		_Tetris_RotatePlayer		CODE           	0708	0000	97
		_Tetris_UpdatePlayerUnitBits		CODE           	0768	0000	135
		_Tetris_ResetPlayer		CODE           	0481	0000	34
		_Tetris_PlayerOverlapsEnvironment		CODE           	059D	0000	66
		_Tetris_GetRandomUnit		CODE           	0427	0000	30
		_Tetris_PlayerTopmostY		CODE           	03C6	0000	15
		_Tetris_SetPlayerUnit		CODE           	03D4	0000	16
		_Tetris_PlayerUnitBitsAreValid		CODE           	04F7	0000	52
		_Tetris_CountUnitBits		CODE           	05DE	0000	66
		_Tetris_MovePlayerLeft		CODE           	06B1	0000	88
		_Tetris_PlayerTouchingLeftBound		CODE           	0444	0000	31
		_Tetris_ResetGame		CODE           	0462	0000	32

../Tetris/Tetris.c estimated size: 766

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c
		___awmod       		CODE           	0664	0000	78

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c estimated size: 78

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c
		___lbmod       		CODE           	04A2	0000	36

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c estimated size: 36

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c
		___bmul        		CODE           	03E3	0000	20

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c estimated size: 20

shared
		_Tetris_unitPivot		STRING         	0014	0000	3
		__stringtab    		STRING         	0002	0000	17
		_Tetris_playerStartingPosition		STRING         	0012	0000	3
		__initialization		CODE           	07EE	0000	16
		_Tetris_units  		STRING         	0016	0000	100

shared estimated size: 139

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c
		___lmul        		CODE           	055E	0000	64

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c estimated size: 64

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c
		_rand          		CODE           	061F	0000	70

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c estimated size: 70

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c
		_memset        		CODE           	040B	0000	29

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c estimated size: 29

main.c
		_main          		CODE           	03F6	0000	22

main.c estimated size: 22

