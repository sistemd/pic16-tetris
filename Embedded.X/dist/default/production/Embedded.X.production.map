Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.05\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\Embedded.X.production.sym \
  --cmf=dist/default/production\Embedded.X.production.cmf -z -Q16F884 \
  -oC:\Users\ALECEI~1\AppData\Local\Temp\s49c.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Embedded.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0120h-016Fh -pstack=STACK -ACODE=00h-07FFhx2 \
  -ASTRCODE=00h-0FFFh -ASTRING=00h-0FFhx16 -ACONST=00h-0FFhx16 \
  -AENTRY=00h-0FFhx16 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\ALECEI~1\AppData\Local\Temp\s49c.o \
  dist/default/production\Embedded.X.production.o 

Object code version is 3.11

Machine type is 16F884



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ALECEI~1\AppData\Local\Temp\s49c.o
                end_init                              B        B        2        8       0
                reset_vec                             0        0        2        0       0
                config                             2007     2007        2     400E       0
dist/default/production\Embedded.X.production.o
                cinit                                 D        D       26        8       0
                intentry                              4        4        7        8       0
                text69                              BC9      BC9       2E     1792       0
                text68                              9D5      9D5       1E     13AA       0
                text67                              8CB      8CB        C     1196       0
                text66                              A4E      A4E       21     149C       0
                text65                              B70      B70       2C     16E0       0
                text64                              961      961       11     12C2       0
                text63                              D96      D96       3E     1B2C       0
                text62                              C87      C87       35     190E       0
                text61                              931      931       10     1262       0
                text60                              941      941       10     1282       0
                text59                              914      914        E     1228       0
                text58                              89C      89C        7     1138       0
                text57                              99B      99B       1D     1336       0
                text56                              8D7      8D7        C     11AE       0
                text55                              8E3      8E3        C     11C6       0
                text54                              8C0      8C0        B     1180       0
                text53                              383      383      102      4EC       0
                text52                              BF7      BF7       2F     17EE       0
                text51                              276      276      10D      4EC       0
                text50                              5C7      5C7       8F      4EC       0
                text49                              CBC      CBC       35     1978       0
                text48                              72C      72C       65      4EC       0
                text47                              AFB      AFB       25     15F6       0
                text46                              8AC      8AC        A     1158       0
                text45                              8B6      8B6        A     116C       0
                text44                              D5C      D5C       3A     1AB8       0
                text43                              886      886        5     110C       0
                text42                              88B      88B        5     1116       0
                text41                              907      907        D     120E       0
                text40                              890      890        6     1120       0
                text39                              8EF      8EF        C     11DE       0
                text38                              984      984       17     1308       0
                text37                              A6F      A6F       23     14DE       0
                text36                              896      896        6     112C       0
                text35                              B9C      B9C       2D     1738       0
                text34                              7EA      7EA       15      4EC       0
                text33                              DD4      DD4       41     1BA8       0
                text32                              922      922        F     1244       0
                text31                              8A3      8A3        9     1146       0
                text30                              A2F      A2F       1F     145E       0
                text29                              8FB      8FB        C     11F6       0
                text28                              9B8      9B8       1D     1370       0
                text27                              972      972       12     12E4       0
                text26                              6C6      6C6       66      4EC       0
                text25                              E15      E15       41     1C2A       0
                text24                              9F3      9F3       1E     13E6       0
                text23                              D26      D26       36     1A4C       0
                text22                               8A       8A       57        8       0
                text21                              A11      A11       1E     1422       0
                text20                              791      791       59      4EC       0
                text19                              52C      52C       9B      4EC       0
                text18                              951      951       10     12A2       0
                text17                              A92      A92       23     1524       0
                text16                               E1       E1       1F        8       0
                text15                              E56      E56       41     1CAC       0
                text14                              CF1      CF1       35     19E2       0
                text13                              B20      B20       25     1640       0
                text12                              656      656       70      4EC       0
                text11                              ED8      ED8       43     1DB0       0
                text10                              C56      C56       31     18AC       0
                text9                               F60      F60       4D     1EC0       0
                text8                               AB5      AB5       23     156A       0
                text7                               E97      E97       41     1D2E       0
                text6                               F1B      F1B       45     1E36       0
                text5                               B45      B45       2B     168A       0
                text4                               C26      C26       30     184C       0
                text3                               AD8      AD8       23     15B0       0
                text2                               FAD      FAD       53     1F5A       0
                text1                                33       33       57        8       0
                maintext                            485      485       A7      4EC       0
                cstackBANK0                          20       20       27       20       1
                cstackCOMMON                         70       70        9       70       1
                cstackBANK1                          A0       A0       44       A0       1
                dataBANK1                            E4       E4        2       A0       1
                bssBANK1                             E6       E6        1       A0       1
                dataBANK0                            47       47        4       20       1
                dataCOMMON                           7A       7A        1       70       1
                bssCOMMON                            79       79        1       70       1
                bssEEDATA                             0     2100        4     4200       3
                stringtext                          100      100      176        2       0
                idataBANK1                            2        2        2        0       0
                idataBANK0                          882      882        4     1104       0
                idataCOMMON                         7FF      7FF        1      4EC       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              B        B        2         0
                cinit                                 D        D       26         0
                intentry                              4        4        7         0
                reset_vec                             0        0        2         0
                text69                              BC9      BC9       2E         0
                text68                              9D5      9D5       1E         0
                text67                              8CB      8CB        C         0
                text66                              A4E      A4E       21         0
                text65                              B70      B70       2C         0
                text64                              961      961       11         0
                text63                              D96      D96       3E         0
                text62                              C87      C87       35         0
                text61                              931      931       10         0
                text60                              941      941       10         0
                text59                              914      914        E         0
                text58                              89C      89C        7         0
                text57                              99B      99B       1D         0
                text56                              8D7      8D7        C         0
                text55                              8E3      8E3        C         0
                text54                              8C0      8C0        B         0
                text53                              383      383      102         0
                text52                              BF7      BF7       2F         0
                text51                              276      276      10D         0
                text50                              5C7      5C7       8F         0
                text49                              CBC      CBC       35         0
                text48                              72C      72C       65         0
                text47                              AFB      AFB       25         0
                text46                              8AC      8AC        A         0
                text45                              8B6      8B6        A         0
                text44                              D5C      D5C       3A         0
                text43                              886      886        5         0
                text42                              88B      88B        5         0
                text41                              907      907        D         0
                text40                              890      890        6         0
                text39                              8EF      8EF        C         0
                text38                              984      984       17         0
                text37                              A6F      A6F       23         0
                text36                              896      896        6         0
                text35                              B9C      B9C       2D         0
                text34                              7EA      7EA       15         0
                text33                              DD4      DD4       41         0
                text32                              922      922        F         0
                text31                              8A3      8A3        9         0
                text30                              A2F      A2F       1F         0
                text29                              8FB      8FB        C         0
                text28                              9B8      9B8       1D         0
                text27                              972      972       12         0
                text26                              6C6      6C6       66         0
                text25                              E15      E15       41         0
                text24                              9F3      9F3       1E         0
                text23                              D26      D26       36         0
                text22                               8A       8A       57         0
                text21                              A11      A11       1E         0
                text20                              791      791       59         0
                text19                              52C      52C       9B         0
                text18                              951      951       10         0
                text17                              A92      A92       23         0
                text16                               E1       E1       1F         0
                text15                              E56      E56       41         0
                text14                              CF1      CF1       35         0
                text13                              B20      B20       25         0
                text12                              656      656       70         0
                text11                              ED8      ED8       43         0
                text10                              C56      C56       31         0
                text9                               F60      F60       4D         0
                text8                               AB5      AB5       23         0
                text7                               E97      E97       41         0
                text6                               F1B      F1B       45         0
                text5                               B45      B45       2B         0
                text4                               C26      C26       30         0
                text3                               AD8      AD8       23         0
                text2                               FAD      FAD       53         0
                text1                                33       33       57         0
                maintext                            485      485       A7         0
                idataBANK1                            2        2        2         0
                idataBANK0                          882      882        4         0
                idataCOMMON                         7FF      7FF        1         0

        CLASS   STRCODE        
                stringtext                          100      100      176         0

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        9         1
                dataCOMMON                           7A       7A        1         1
                bssCOMMON                            79       79        1         1

        CLASS   BANK0          
                cstackBANK0                          20       20       27         1
                dataBANK0                            47       47        4         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       44         1
                dataBANK1                            E4       E4        2         1
                bssBANK1                             E6       E6        1         1

        CLASS   BANK2          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         
                bssEEDATA                             0     2100        4         3

        CLASS   BANK3          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000004  000004         0       0  CODE        2
                intentry                       000004  0000FC  000100         8       0  CODE        2
                cstackBANK0                    000020  00002B  00004B        20       1  BANK0       1
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                cstackBANK1                    0000A0  000047  0000E7        A0       1  BANK1       1
                stringtext                     000100  000176  000276         2       0  STRCODE     2
                text51                         000276  00058A  000800       4EC       0  CODE        2
                idataBANK0                     000882  000004  000886      1104       0  CODE        2
                text43                         000886  000005  00088B      110C       0  CODE        2
                text42                         00088B  000005  000890      1116       0  CODE        2
                text40                         000890  000006  000896      1120       0  CODE        2
                text36                         000896  000006  00089C      112C       0  CODE        2
                text58                         00089C  000007  0008A3      1138       0  CODE        2
                text31                         0008A3  000009  0008AC      1146       0  CODE        2
                text46                         0008AC  00000A  0008B6      1158       0  CODE        2
                text45                         0008B6  00000A  0008C0      116C       0  CODE        2
                text54                         0008C0  00000B  0008CB      1180       0  CODE        2
                text67                         0008CB  00000C  0008D7      1196       0  CODE        2
                text56                         0008D7  00000C  0008E3      11AE       0  CODE        2
                text55                         0008E3  00000C  0008EF      11C6       0  CODE        2
                text39                         0008EF  00000C  0008FB      11DE       0  CODE        2
                text29                         0008FB  00000C  000907      11F6       0  CODE        2
                text41                         000907  00000D  000914      120E       0  CODE        2
                text59                         000914  00000E  000922      1228       0  CODE        2
                text32                         000922  00000F  000931      1244       0  CODE        2
                text61                         000931  000010  000941      1262       0  CODE        2
                text60                         000941  000010  000951      1282       0  CODE        2
                text18                         000951  000010  000961      12A2       0  CODE        2
                text64                         000961  000011  000972      12C2       0  CODE        2
                text27                         000972  000012  000984      12E4       0  CODE        2
                text38                         000984  000017  00099B      1308       0  CODE        2
                text57                         00099B  00001D  0009B8      1336       0  CODE        2
                text28                         0009B8  00001D  0009D5      1370       0  CODE        2
                text68                         0009D5  00001E  0009F3      13AA       0  CODE        2
                text24                         0009F3  00001E  000A11      13E6       0  CODE        2
                text21                         000A11  00001E  000A2F      1422       0  CODE        2
                text30                         000A2F  00001F  000A4E      145E       0  CODE        2
                text66                         000A4E  000021  000A6F      149C       0  CODE        2
                text37                         000A6F  000023  000A92      14DE       0  CODE        2
                text17                         000A92  000023  000AB5      1524       0  CODE        2
                text8                          000AB5  000023  000AD8      156A       0  CODE        2
                text3                          000AD8  000023  000AFB      15B0       0  CODE        2
                text47                         000AFB  000025  000B20      15F6       0  CODE        2
                text13                         000B20  000025  000B45      1640       0  CODE        2
                text5                          000B45  00002B  000B70      168A       0  CODE        2
                text65                         000B70  00002C  000B9C      16E0       0  CODE        2
                text35                         000B9C  00002D  000BC9      1738       0  CODE        2
                text69                         000BC9  00002E  000BF7      1792       0  CODE        2
                text52                         000BF7  00002F  000C26      17EE       0  CODE        2
                text4                          000C26  000030  000C56      184C       0  CODE        2
                text10                         000C56  000031  000C87      18AC       0  CODE        2
                text62                         000C87  000035  000CBC      190E       0  CODE        2
                text49                         000CBC  000035  000CF1      1978       0  CODE        2
                text14                         000CF1  000035  000D26      19E2       0  CODE        2
                text23                         000D26  000036  000D5C      1A4C       0  CODE        2
                text44                         000D5C  00003A  000D96      1AB8       0  CODE        2
                text63                         000D96  00003E  000DD4      1B2C       0  CODE        2
                text33                         000DD4  000041  000E15      1BA8       0  CODE        2
                text25                         000E15  000041  000E56      1C2A       0  CODE        2
                text15                         000E56  000041  000E97      1CAC       0  CODE        2
                text7                          000E97  000041  000ED8      1D2E       0  CODE        2
                text11                         000ED8  000043  000F1B      1DB0       0  CODE        2
                text6                          000F1B  000045  000F60      1E36       0  CODE        2
                text9                          000F60  00004D  000FAD      1EC0       0  CODE        2
                text2                          000FAD  000053  001000      1F5A       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2
                bssEEDATA                      002100  000004  002104      4200       3  EEDATA      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            004B-006F             25           1
        BANK1            00E7-00EF              9           1
        BANK2            0120-016F             50           1
        CODE             0800-0881             82           2
        COMMON           007B-007D              3           1
        CONST            0800-0881             82           2
        EEDATA           2104-21FF             FC           2
        ENTRY            0800-0881             82           2
        IDLOC            2000-2003              4           2
        RAM              004B-006F             25           1
                         00E7-00EF              9
                         0120-016F             50
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-011F             20           1
        SFR3             0180-01EF             70           1
        STACK            0120-016F             50           1
        STRCODE          0800-0881             82           2
        STRING           0800-0881             82           2

                                  Symbol Table

?_Tetris_GetRandomUnit                     cstackBANK0  002C
?___awmod                                  cstackBANK0  002F
?___eetoi                                  cstackBANK0  0020
?___lmul                                   cstackBANK0  0020
?___lwdiv                                  cstackCOMMON 0073
?___wmul                                   cstackBANK0  0035
?_rand                                     cstackBANK0  0028
Buttons_Clear@buttons                      cstackCOMMON 0078
Buttons_Update@buttons                     cstackCOMMON 0076
Buttons_UpdateButton@button                cstackCOMMON 0075
Buttons_UpdateButton@nHeld                 cstackCOMMON 0073
DrawCurrentScore@lcdData                   cstackBANK0  003A
DrawCurrentScore@lcdData_768               cstackBANK0  003B
DrawCurrentScore@lcdData_770               cstackBANK0  003C
DrawCurrentScore@scoreDigits               cstackBANK0  0035
DrawCurrentScore@tetrisGame                cstackBANK0  003D
DrawCurrentScore@y                         cstackBANK0  003F
DrawCurrentScore@y_767                     cstackBANK0  0040
DrawCurrentScore@y_769                     cstackBANK0  003E
DrawHiMarker@y                             cstackBANK0  0024
DrawHighscore@highscore                    cstackBANK0  002C
DrawHighscore@lcdData                      cstackBANK0  003C
DrawHighscore@lcdData_778                  cstackBANK0  003D
DrawHighscore@lcdData_780                  cstackBANK0  003E
DrawHighscore@scoreDigits                  cstackBANK0  0037
DrawHighscore@y                            cstackBANK0  003F
DrawHighscore@y_777                        cstackBANK0  0040
DrawHighscore@y_779                        cstackBANK0  0041
DrawHighscoreText@x                        cstackBANK0  0028
DrawHighscoreText@y                        cstackBANK0  0026
DrawHighscoreText@y_786                    cstackBANK0  0027
DrawTetris@leftMask                        cstackBANK0  0033
DrawTetris@rightMask                       cstackBANK0  0035
DrawTetris@tetrisGame                      cstackBANK0  0032
DrawTetris@x                               cstackBANK0  0037
DrawTetrisGameColumn@gameRow               cstackBANK0  002C
DrawTetrisGameColumn@i                     cstackBANK0  002E
DrawTetrisGameColumn@lcdRow                cstackBANK0  0030
DrawTetrisGameColumn@leftMask              cstackBANK0  0026
DrawTetrisGameColumn@rightMask             cstackBANK0  0024
DrawTetrisGameColumn@tableY                cstackBANK0  002B
DrawTetrisGameColumn@tetrisGame            cstackBANK0  002A
DrawTetrisGameColumn@x                     cstackBANK0  0023
DrawTetrisGameColumn@y                     cstackBANK0  002F
FlashVictoriously@i                        cstackBANK0  002C
GetDigits@digits                           cstackBANK0  0025
GetDigits@i                                cstackBANK0  002B
GetDigits@n                                cstackBANK0  0023
GetDigits@newN                             cstackBANK0  0029
InterruptHandler@timerInterruptCounter     bssCOMMON    0079
LCD_Clear@x                                cstackBANK0  0025
LCD_Clear@y                                cstackBANK0  0024
LCD_IsBusy@status                          cstackCOMMON 0077
LCD_ReadStatus@status                      cstackCOMMON 0074
LCD_SegmentSelection@segments              cstackCOMMON 0073
LCD_SetX@x                                 cstackBANK0  0022
LCD_SetY@y                                 cstackBANK0  0022
LCD_SetZ@z                                 cstackBANK0  0022
LCD_Write@data                             cstackCOMMON 0078
LCD_Write@mode                             cstackBANK0  0020
LCD_WriteData@data                         cstackBANK0  0022
Tetris_ApplyPlayerToTable@game             cstackBANK0  002B
Tetris_ApplyPlayerToTable@i                cstackBANK0  0029
Tetris_ApplyPlayerToTable@i_361            cstackBANK0  002A
Tetris_ApplyPlayerToTable@start            cstackBANK0  0028
Tetris_ClearFilledRows@gameTable           cstackCOMMON 0077
Tetris_ClearFilledRows@i                   cstackCOMMON 0078
Tetris_ClearFilledRows@rowsCleared         cstackCOMMON 0076
Tetris_CountUnitBits@i                     cstackBANK0  0029
Tetris_CountUnitBits@j                     cstackBANK0  0028
Tetris_CountUnitBits@mask                  cstackBANK0  0025
Tetris_CountUnitBits@result                cstackBANK0  0027
Tetris_CountUnitBits@unitBits              cstackCOMMON 0073
Tetris_MovePlayerDown@game                 cstackBANK0  002D
Tetris_MovePlayerLeft@game                 cstackBANK0  0030
Tetris_MovePlayerLeft@i                    cstackBANK0  002E
Tetris_MovePlayerLeft@i_496                cstackBANK0  002F
Tetris_MovePlayerRight@game                cstackBANK0  0030
Tetris_MovePlayerRight@i                   cstackBANK0  002E
Tetris_MovePlayerRight@i_510               cstackBANK0  002F
Tetris_PlayerOverlapsEnvironment@game      cstackCOMMON 0077
Tetris_PlayerOverlapsEnvironment@i         cstackCOMMON 0078
Tetris_PlayerOverlapsEnvironment@start     cstackCOMMON 0076
Tetris_PlayerTopmostY@player               cstackCOMMON 0075
Tetris_PlayerTouchingLeftBound@i           cstackCOMMON 0078
Tetris_PlayerTouchingLeftBound@player      cstackCOMMON 0077
Tetris_PlayerTouchingRightBound@i          cstackCOMMON 0078
Tetris_PlayerTouchingRightBound@player     cstackCOMMON 0077
Tetris_PlayerUnitBitsAreValid@player       cstackBANK0  002A
Tetris_RemovePlayerFromTable@game          cstackCOMMON 0077
Tetris_RemovePlayerFromTable@i             cstackCOMMON 0078
Tetris_RemovePlayerFromTable@start         cstackCOMMON 0076
Tetris_ResetGame@game                      cstackBANK0  0044
Tetris_ResetGame@playerUnit                cstackBANK0  0042
Tetris_ResetPlayer@player                  cstackBANK0  0041
Tetris_ResetPlayer@playerUnit              cstackBANK0  003D
Tetris_RotatePlayer@game                   cstackBANK0  0033
Tetris_RotatePlayer@oldRotation            cstackBANK0  0032
Tetris_ScoreForRowsCleared@rowsCleared     cstackCOMMON 0075
Tetris_SetPlayerUnit@player                cstackCOMMON 0078
Tetris_SetPlayerUnit@unit                  cstackBANK0  002A
Tetris_ShiftTableDown@gameTable            cstackCOMMON 0074
Tetris_ShiftTableDown@i                    cstackCOMMON 0075
Tetris_ShiftTableDown@upto                 cstackCOMMON 0073
Tetris_UpdateGame@game                     cstackBANK0  0045
Tetris_UpdateGame@rowsCleared              cstackBANK0  0044
Tetris_UpdatePlayerUnitBits@i              cstackCOMMON 0075
Tetris_UpdatePlayerUnitBits@i_381          cstackCOMMON 0073
Tetris_UpdatePlayerUnitBits@i_382          cstackCOMMON 0074
Tetris_UpdatePlayerUnitBits@player         cstackCOMMON 0077
Tetris_UpdatePlayerUnitBits@shift          cstackCOMMON 0076
UpdateDifficulty@tetrisGame                cstackCOMMON 0075
_ANSEL                                     (abs)        0188
_ANSELH                                    (abs)        0189
_Buttons_Clear                             text67       08CB
_Buttons_Setup                             text40       0890
_Buttons_SetupInterrupts                   text42       088B
_Buttons_SetupPortB                        text41       0907
_Buttons_Update                            text65       0B70
_Buttons_UpdateButton                      text66       0A4E
_DrawCurrentScore                          text53       0383
_DrawHiMarker                              text52       0BF7
_DrawHighscore                             text51       0276
_DrawHighscoreText                         text48       072C
_DrawTetris                                text49       0CBC
_DrawTetrisGameColumn                      text50       05C7
_EEADR                                     (abs)        010D
_EECON1                                    (abs)        018C
_EECON1bits                                (abs)        018C
_EECON2                                    (abs)        018D
_EEDATA                                    (abs)        010C
_FlashVictoriously                         text44       0D5C
_Font_digits                               stringtext   0112
_Font_hi                                   stringtext   017A
_Font_score                                stringtext   0162
_GIE                                       (abs)        005F
_GetDigits                                 text62       0C87
_INTCONbits                                (abs)        000B
_INTE                                      (abs)        005C
_INTEDG                                    (abs)        040E
_INTF                                      (abs)        0059
_IRCF0                                     (abs)        047C
_IRCF1                                     (abs)        047D
_IRCF2                                     (abs)        047E
_InterruptHandler                          text69       0BC9
_LCD_BlockWhileBusy                        text58       089C
_LCD_Clear                                 text47       0AFB
_LCD_IsBusy                                text59       0914
_LCD_IsBusy$632                            cstackCOMMON 0076
_LCD_ReadStatus                            text60       0941
_LCD_Reset                                 text38       0984
_LCD_SegmentSelection                      text61       0931
_LCD_SetX                                  text56       08D7
_LCD_SetY                                  text55       08E3
_LCD_SetZ                                  text39       08EF
_LCD_SetupPorts                            text37       0A6F
_LCD_TurnOff                               text46       08AC
_LCD_TurnOn                                text45       08B6
_LCD_Write                                 text57       099B
_LCD_WriteData                             text54       08C0
_PEIE                                      (abs)        005E
_PORTA                                     (abs)        0005
_PORTB                                     (abs)        0006
_PORTC                                     (abs)        0007
_PORTD                                     (abs)        0008
_RB1                                       (abs)        0031
_RB2                                       (abs)        0032
_RB3                                       (abs)        0033
_RB4                                       (abs)        0034
_RC0                                       (abs)        0038
_RC1                                       (abs)        0039
_RC2                                       (abs)        003A
_RC3                                       (abs)        003B
_RD0                                       (abs)        0040
_RD1                                       (abs)        0041
_ResetTimer                                text43       0886
_STATUSbits                                (abs)        0003
_Setup                                     text28       09B8
_SetupOscillator                           text36       0896
_SetupRandomness                           text30       0A2F
_SetupTimer                                text29       08FB
_T1CKPS0                                   (abs)        0084
_T1CKPS1                                   (abs)        0085
_TMR1                                      (abs)        000E
_TMR1CS                                    (abs)        0081
_TMR1IE                                    (abs)        0460
_TMR1IF                                    (abs)        0060
_TMR1ON                                    (abs)        0080
_TRISA                                     (abs)        0085
_TRISB                                     (abs)        0086
_TRISC                                     (abs)        0087
_TRISD                                     (abs)        0088
_Tetris_ApplyPlayerToTable                 text26       06C6
_Tetris_ClearFilledRows                    text10       0C56
_Tetris_CountUnitBits                      text15       0E56
_Tetris_GetRandomUnit                      text5        0B45
_Tetris_MovePlayerDown                     text4        0C26
_Tetris_MovePlayerLeft                     text22       008A
_Tetris_MovePlayerRight                    text20       0791
_Tetris_PlayerOverlapsEnvironment          text25       0E15
_Tetris_PlayerTopmostY                     text27       0972
_Tetris_PlayerTouchingLeftBound            text24       09F3
_Tetris_PlayerTouchingRightBound           text21       0A11
_Tetris_PlayerUnitBitsAreValid             text14       0CF1
_Tetris_RemovePlayerFromTable              text23       0D26
_Tetris_ResetGame                          text16       00E1
_Tetris_ResetPlayer                        text17       0A92
_Tetris_RotatePlayer                       text12       0656
_Tetris_ScoreForRowsCleared                text3        0AD8
_Tetris_SetPlayerUnit                      text18       0951
_Tetris_ShiftTableDown                     text11       0ED8
_Tetris_UpdateGame                         text2        0FAD
_Tetris_UpdatePlayerUnitBits               text19       052C
_Tetris_playerStartingPosition             stringtext   0182
_Tetris_unitPivot                          stringtext   0184
_Tetris_units                              stringtext   0188
_UpdateDifficulty                          text1        0033
_WPUB                                      (abs)        0095
__CFG_BOR4V$BOR40V                         (abs)        0000
__CFG_BOREN$OFF                            (abs)        0000
__CFG_CP$OFF                               (abs)        0000
__CFG_CPD$OFF                              (abs)        0000
__CFG_FCMEN$OFF                            (abs)        0000
__CFG_FOSC$INTRC_NOCLKOUT                  (abs)        0000
__CFG_IESO$OFF                             (abs)        0000
__CFG_LVP$OFF                              (abs)        0000
__CFG_MCLRE$ON                             (abs)        0000
__CFG_PWRTE$OFF                            (abs)        0000
__CFG_WDTE$OFF                             (abs)        0000
__CFG_WRT$OFF                              (abs)        0000
__Habs1                                    abs1         0000
__Hbank0                                   bank0        0000
__Hbank1                                   bank1        0000
__Hbank2                                   bank2        0000
__Hbank3                                   bank3        0000
__HbssBANK1                                bssBANK1     0000
__HbssCOMMON                               bssCOMMON    0000
__HbssEEDATA                               bssEEDATA    0000
__Hcinit                                   cinit        0033
__Hclrtext                                 clrtext      0000
__Hcode                                    code         0000
__Hcommon                                  common       0000
__Hconfig                                  config       2009
__HcstackBANK0                             cstackBANK0  0000
__HcstackBANK1                             cstackBANK1  0000
__HcstackCOMMON                            cstackCOMMON 0000
__HdataBANK0                               dataBANK0    0000
__HdataBANK1                               dataBANK1    0000
__HdataCOMMON                              dataCOMMON   0000
__Heeprom_data                             eeprom_data  0000
__Hend_init                                end_init     000D
__Hfunctab                                 functab      0000
__HidataBANK0                              idataBANK0   0000
__HidataBANK1                              idataBANK1   0000
__HidataCOMMON                             idataCOMMON  0000
__Hidloc                                   idloc        0000
__Hinit                                    init         000B
__Hintentry                                intentry     000B
__Hmaintext                                maintext     0000
__Hpowerup                                 powerup      0000
__Hram                                     ram          0000
__Hreset_vec                               reset_vec    0002
__Hsfr0                                    sfr0         0000
__Hsfr1                                    sfr1         0000
__Hsfr2                                    sfr2         0000
__Hsfr3                                    sfr3         0000
__Hspace_0                                 (abs)        2009
__Hspace_1                                 (abs)        00E7
__Hspace_2                                 (abs)        0000
__Hspace_3                                 (abs)        0004
__Hstack                                   stack        0000
__Hstrings                                 strings      0000
__Hstringtext                              stringtext   0000
__Htext                                    text         0000
__Labs1                                    abs1         0000
__Lbank0                                   bank0        0000
__Lbank1                                   bank1        0000
__Lbank2                                   bank2        0000
__Lbank3                                   bank3        0000
__LbssBANK1                                bssBANK1     0000
__LbssCOMMON                               bssCOMMON    0000
__LbssEEDATA                               bssEEDATA    0000
__Lcinit                                   cinit        000D
__Lclrtext                                 clrtext      0000
__Lcode                                    code         0000
__Lcommon                                  common       0000
__Lconfig                                  config       2007
__LcstackBANK0                             cstackBANK0  0000
__LcstackBANK1                             cstackBANK1  0000
__LcstackCOMMON                            cstackCOMMON 0000
__LdataBANK0                               dataBANK0    0000
__LdataBANK1                               dataBANK1    0000
__LdataCOMMON                              dataCOMMON   0000
__Leeprom_data                             eeprom_data  0000
__Lend_init                                end_init     000B
__Lfunctab                                 functab      0000
__LidataBANK0                              idataBANK0   0000
__LidataBANK1                              idataBANK1   0000
__LidataCOMMON                             idataCOMMON  0000
__Lidloc                                   idloc        0000
__Linit                                    init         000B
__Lintentry                                intentry     0004
__Lmaintext                                maintext     0000
__Lpowerup                                 powerup      0000
__Lram                                     ram          0000
__Lreset_vec                               reset_vec    0000
__Lsfr0                                    sfr0         0000
__Lsfr1                                    sfr1         0000
__Lsfr2                                    sfr2         0000
__Lsfr3                                    sfr3         0000
__Lspace_0                                 (abs)        0000
__Lspace_1                                 (abs)        0000
__Lspace_2                                 (abs)        0000
__Lspace_3                                 (abs)        0000
__Lstack                                   stack        0000
__Lstrings                                 strings      0000
__Lstringtext                              stringtext   0000
__Ltext                                    text         0000
__S0                                       (abs)        2009
__S1                                       (abs)        00E7
__S2                                       (abs)        0000
__S3                                       (abs)        2104
___awmod                                   text9        0F60
___awmod@counter                           cstackBANK0  0033
___awmod@dividend                          cstackBANK0  0031
___awmod@divisor                           cstackBANK0  002F
___awmod@sign                              cstackBANK0  0034
___bmul                                    text64       0961
___bmul@multiplicand                       cstackCOMMON 0073
___bmul@multiplier                         cstackCOMMON 0076
___bmul@product                            cstackCOMMON 0075
___eecpymem                                text35       0B9C
___eecpymem@cp                             cstackCOMMON 0076
___eecpymem@from                           cstackCOMMON 0073
___eecpymem@size                           cstackCOMMON 0074
___eecpymem@to                             cstackCOMMON 0077
___eetoi                                   text34       07EA
___eetoi@addr                              cstackBANK0  0026
___eetoi@data                              cstackBANK0  0024
___int_sp                                  stack        0000
___itoee                                   text32       0922
___itoee@addr                              cstackCOMMON 0078
___itoee@data                              cstackBANK0  0027
___latbits                                 (abs)        0001
___lbmod                                   text13       0B20
___lbmod@counter                           cstackBANK0  0021
___lbmod@dividend                          cstackBANK0  0020
___lbmod@divisor                           cstackCOMMON 0073
___lbmod@rem                               cstackBANK0  0022
___lmul                                    text7        0E97
___lmul@multiplicand                       cstackBANK0  0024
___lmul@multiplier                         cstackBANK0  0020
___lmul@product                            cstackCOMMON 0074
___lwdiv                                   text63       0D96
___lwdiv@counter                           cstackBANK0  0020
___lwdiv@dividend                          cstackCOMMON 0075
___lwdiv@divisor                           cstackCOMMON 0073
___lwdiv@quotient                          cstackBANK0  0021
___memcpyee                                text33       0DD4
___memcpyee@from                           cstackCOMMON 0073
___memcpyee@ptr                            cstackCOMMON 0076
___memcpyee@size                           cstackCOMMON 0074
___memcpyee@to                             cstackCOMMON 0077
___sp                                      stack        0000
___stackhi                                 (abs)        0000
___stacklo                                 (abs)        0000
___wmul                                    text8        0AB5
___wmul@multiplicand                       cstackBANK0  0037
___wmul@multiplier                         cstackBANK0  0035
___wmul@product                            cstackBANK0  0039
__end_ofDrawHighscoreText@baseX            stringtext   0188
__end_ofDrawHighscoreText@baseY            stringtext   0187
__end_of_Buttons_Clear                     text67       08D7
__end_of_Buttons_Setup                     text40       0896
__end_of_Buttons_SetupInterrupts           text42       0890
__end_of_Buttons_SetupPortB                text41       0914
__end_of_Buttons_Update                    text65       0B9C
__end_of_Buttons_UpdateButton              text66       0A6F
__end_of_DrawCurrentScore                  text53       0485
__end_of_DrawHiMarker                      text52       0C26
__end_of_DrawHighscore                     text51       0383
__end_of_DrawHighscoreText                 text48       0791
__end_of_DrawTetris                        text49       0CF1
__end_of_DrawTetrisGameColumn              text50       0656
__end_of_FlashVictoriously                 text44       0D96
__end_of_Font_digits                       stringtext   0162
__end_of_Font_hi                           stringtext   0182
__end_of_Font_score                        stringtext   017A
__end_of_GetDigits                         text62       0CBC
__end_of_InterruptHandler                  text69       0BF7
__end_of_LCD_BlockWhileBusy                text58       08A3
__end_of_LCD_Clear                         text47       0B20
__end_of_LCD_IsBusy                        text59       0922
__end_of_LCD_ReadStatus                    text60       0951
__end_of_LCD_Reset                         text38       099B
__end_of_LCD_SegmentSelection              text61       0941
__end_of_LCD_SetX                          text56       08E3
__end_of_LCD_SetY                          text55       08EF
__end_of_LCD_SetZ                          text39       08FB
__end_of_LCD_SetupPorts                    text37       0A92
__end_of_LCD_TurnOff                       text46       08B6
__end_of_LCD_TurnOn                        text45       08C0
__end_of_LCD_Write                         text57       09B8
__end_of_LCD_WriteData                     text54       08CB
__end_of_ResetTimer                        text43       088B
__end_of_Setup                             text28       09D5
__end_of_SetupOscillator                   text36       089C
__end_of_SetupRandomness                   text30       0A4E
__end_of_SetupTimer                        text29       0907
__end_of_Tetris_ApplyPlayerToTable         text26       072C
__end_of_Tetris_ClearFilledRows            text10       0C87
__end_of_Tetris_CountUnitBits              text15       0E97
__end_of_Tetris_GetRandomUnit              text5        0B70
__end_of_Tetris_MovePlayerDown             text4        0C56
__end_of_Tetris_MovePlayerLeft             text22       00E1
__end_of_Tetris_MovePlayerRight            text20       07EA
__end_of_Tetris_PlayerOverlapsEnvironment  text25       0E56
__end_of_Tetris_PlayerTopmostY             text27       0984
__end_of_Tetris_PlayerTouchingLeftBound    text24       0A11
__end_of_Tetris_PlayerTouchingRightBound   text21       0A2F
__end_of_Tetris_PlayerUnitBitsAreValid     text14       0D26
__end_of_Tetris_RemovePlayerFromTable      text23       0D5C
__end_of_Tetris_ResetGame                  text16       0100
__end_of_Tetris_ResetPlayer                text17       0AB5
__end_of_Tetris_RotatePlayer               text12       06C6
__end_of_Tetris_ScoreForRowsCleared        text3        0AFB
__end_of_Tetris_SetPlayerUnit              text18       0961
__end_of_Tetris_ShiftTableDown             text11       0F1B
__end_of_Tetris_UpdateGame                 text2        1000
__end_of_Tetris_UpdatePlayerUnitBits       text19       05C7
__end_of_Tetris_playerStartingPosition     stringtext   0184
__end_of_Tetris_unitPivot                  stringtext   0186
__end_of_Tetris_units                      stringtext   0276
__end_of_UpdateDifficulty                  text1        008A
__end_of___awmod                           text9        0FAD
__end_of___bmul                            text64       0972
__end_of___eecpymem                        text35       0BC9
__end_of___eetoi                           text34       07FF
__end_of___itoee                           text32       0931
__end_of___lbmod                           text13       0B45
__end_of___lmul                            text7        0ED8
__end_of___lwdiv                           text63       0DD4
__end_of___memcpyee                        text33       0E15
__end_of___wmul                            text8        0AD8
__end_of__initialization                   cinit        0030
__end_of__stringtab                        stringtext   0112
__end_of_main                              maintext     052C
__end_of_memset                            text68       09F3
__end_of_rand                              text6        0F60
__end_of_srand                             text31       08AC
__initialization                           cinit        000D
__pbssBANK1                                bssBANK1     00E6
__pbssCOMMON                               bssCOMMON    0079
__pbssEEDATA                               bssEEDATA    0000
__pcstackBANK0                             cstackBANK0  0020
__pcstackBANK1                             cstackBANK1  00A0
__pcstackCOMMON                            cstackCOMMON 0070
__pdataBANK0                               dataBANK0    0047
__pdataBANK1                               dataBANK1    00E4
__pdataCOMMON                              dataCOMMON   007A
__pidataBANK0                              idataBANK0   0882
__pidataBANK1                              idataBANK1   0002
__pidataCOMMON                             idataCOMMON  07FF
__pintentry                                intentry     0004
__pmaintext                                maintext     0485
__pstringtext                              stringtext   0100
__ptext1                                   text1        0033
__ptext10                                  text10       0C56
__ptext11                                  text11       0ED8
__ptext12                                  text12       0656
__ptext13                                  text13       0B20
__ptext14                                  text14       0CF1
__ptext15                                  text15       0E56
__ptext16                                  text16       00E1
__ptext17                                  text17       0A92
__ptext18                                  text18       0951
__ptext19                                  text19       052C
__ptext2                                   text2        0FAD
__ptext20                                  text20       0791
__ptext21                                  text21       0A11
__ptext22                                  text22       008A
__ptext23                                  text23       0D26
__ptext24                                  text24       09F3
__ptext25                                  text25       0E15
__ptext26                                  text26       06C6
__ptext27                                  text27       0972
__ptext28                                  text28       09B8
__ptext29                                  text29       08FB
__ptext3                                   text3        0AD8
__ptext30                                  text30       0A2F
__ptext31                                  text31       08A3
__ptext32                                  text32       0922
__ptext33                                  text33       0DD4
__ptext34                                  text34       07EA
__ptext35                                  text35       0B9C
__ptext36                                  text36       0896
__ptext37                                  text37       0A6F
__ptext38                                  text38       0984
__ptext39                                  text39       08EF
__ptext4                                   text4        0C26
__ptext40                                  text40       0890
__ptext41                                  text41       0907
__ptext42                                  text42       088B
__ptext43                                  text43       0886
__ptext44                                  text44       0D5C
__ptext45                                  text45       08B6
__ptext46                                  text46       08AC
__ptext47                                  text47       0AFB
__ptext48                                  text48       072C
__ptext49                                  text49       0CBC
__ptext5                                   text5        0B45
__ptext50                                  text50       05C7
__ptext51                                  text51       0276
__ptext52                                  text52       0BF7
__ptext53                                  text53       0383
__ptext54                                  text54       08C0
__ptext55                                  text55       08E3
__ptext56                                  text56       08D7
__ptext57                                  text57       099B
__ptext58                                  text58       089C
__ptext59                                  text59       0914
__ptext6                                   text6        0F1B
__ptext60                                  text60       0941
__ptext61                                  text61       0931
__ptext62                                  text62       0C87
__ptext63                                  text63       0D96
__ptext64                                  text64       0961
__ptext65                                  text65       0B70
__ptext66                                  text66       0A4E
__ptext67                                  text67       08CB
__ptext68                                  text68       09D5
__ptext69                                  text69       0BC9
__ptext7                                   text7        0E97
__ptext8                                   text8        0AB5
__ptext9                                   text9        0F60
__size_of_Buttons_Clear                    (abs)        0000
__size_of_Buttons_Setup                    (abs)        0000
__size_of_Buttons_SetupInterrupts          (abs)        0000
__size_of_Buttons_SetupPortB               (abs)        0000
__size_of_Buttons_Update                   (abs)        0000
__size_of_Buttons_UpdateButton             (abs)        0000
__size_of_DrawCurrentScore                 (abs)        0000
__size_of_DrawHiMarker                     (abs)        0000
__size_of_DrawHighscore                    (abs)        0000
__size_of_DrawHighscoreText                (abs)        0000
__size_of_DrawTetris                       (abs)        0000
__size_of_DrawTetrisGameColumn             (abs)        0000
__size_of_FlashVictoriously                (abs)        0000
__size_of_GetDigits                        (abs)        0000
__size_of_InterruptHandler                 (abs)        0000
__size_of_LCD_BlockWhileBusy               (abs)        0000
__size_of_LCD_Clear                        (abs)        0000
__size_of_LCD_IsBusy                       (abs)        0000
__size_of_LCD_ReadStatus                   (abs)        0000
__size_of_LCD_Reset                        (abs)        0000
__size_of_LCD_SegmentSelection             (abs)        0000
__size_of_LCD_SetX                         (abs)        0000
__size_of_LCD_SetY                         (abs)        0000
__size_of_LCD_SetZ                         (abs)        0000
__size_of_LCD_SetupPorts                   (abs)        0000
__size_of_LCD_TurnOff                      (abs)        0000
__size_of_LCD_TurnOn                       (abs)        0000
__size_of_LCD_Write                        (abs)        0000
__size_of_LCD_WriteData                    (abs)        0000
__size_of_ResetTimer                       (abs)        0000
__size_of_Setup                            (abs)        0000
__size_of_SetupOscillator                  (abs)        0000
__size_of_SetupRandomness                  (abs)        0000
__size_of_SetupTimer                       (abs)        0000
__size_of_Tetris_ApplyPlayerToTable        (abs)        0000
__size_of_Tetris_ClearFilledRows           (abs)        0000
__size_of_Tetris_CountUnitBits             (abs)        0000
__size_of_Tetris_GetRandomUnit             (abs)        0000
__size_of_Tetris_MovePlayerDown            (abs)        0000
__size_of_Tetris_MovePlayerLeft            (abs)        0000
__size_of_Tetris_MovePlayerRight           (abs)        0000
__size_of_Tetris_PlayerOverlapsEnvironment (abs)        0000
__size_of_Tetris_PlayerTopmostY            (abs)        0000
__size_of_Tetris_PlayerTouchingLeftBound   (abs)        0000
__size_of_Tetris_PlayerTouchingRightBound  (abs)        0000
__size_of_Tetris_PlayerUnitBitsAreValid    (abs)        0000
__size_of_Tetris_RemovePlayerFromTable     (abs)        0000
__size_of_Tetris_ResetGame                 (abs)        0000
__size_of_Tetris_ResetPlayer               (abs)        0000
__size_of_Tetris_RotatePlayer              (abs)        0000
__size_of_Tetris_ScoreForRowsCleared       (abs)        0000
__size_of_Tetris_SetPlayerUnit             (abs)        0000
__size_of_Tetris_ShiftTableDown            (abs)        0000
__size_of_Tetris_UpdateGame                (abs)        0000
__size_of_Tetris_UpdatePlayerUnitBits      (abs)        0000
__size_of_UpdateDifficulty                 (abs)        0000
__size_of___awmod                          (abs)        0000
__size_of___bmul                           (abs)        0000
__size_of___eecpymem                       (abs)        0000
__size_of___eetoi                          (abs)        0000
__size_of___itoee                          (abs)        0000
__size_of___lbmod                          (abs)        0000
__size_of___lmul                           (abs)        0000
__size_of___lwdiv                          (abs)        0000
__size_of___memcpyee                       (abs)        0000
__size_of___wmul                           (abs)        0000
__size_of_main                             (abs)        0000
__size_of_memset                           (abs)        0000
__size_of_rand                             (abs)        0000
__size_of_srand                            (abs)        0000
__stringbase                               stringtext   0112
__stringtab                                stringtext   0100
_defaultTimerPrescaler                     dataBANK1    00E4
_highscore                                 bssEEDATA    0002
_main                                      maintext     0485
_memset                                    text68       09D5
_nRBPU                                     (abs)        040F
_paused                                    dataCOMMON   007A
_rand                                      text6        0F1B
_randx                                     dataBANK0    0047
_srand                                     text31       08A3
_timerPrescaler                            dataBANK1    00E5
_uniqueSeed                                bssEEDATA    0000
_updateReady                               bssBANK1     00E6
btemp                                      (abs)        007E
end_of_initialization                      cinit        0030
interrupt_function                         intentry     0004
intlevel0                                  functab      0000
intlevel1                                  functab      0000
intlevel2                                  functab      0000
intlevel3                                  functab      0000
intlevel4                                  functab      0000
intlevel5                                  functab      0000
main@buttons                               cstackBANK1  00A1
main@status                                cstackBANK1  00A0
main@tetrisGame                            cstackBANK1  00A5
memset@c                                   cstackCOMMON 0073
memset@n                                   cstackCOMMON 0075
memset@p                                   cstackBANK0  0020
memset@p1                                  cstackBANK0  0021
reset_vec                                  reset_vec    0000
saved_w                                    (abs)        007E
srand@x                                    cstackBANK0  0027
start                                      init         000B
start_initialization                       cinit        000D
wtemp0                                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 153 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  status          1    0[BANK1 ] unsigned char 
  tetrisGame     63    5[BANK1 ] struct .
  buttons         4    1[BANK1 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0      68       0
      Temps:          0       1       0       0
      Totals:         0       1      68       0
Total ram usage:       69 bytes
 Hardware stack levels required when called:    8
 This function calls:
		_Buttons_Clear
		_Buttons_Update
		_DrawCurrentScore
		_DrawHighscore
		_DrawTetris
		_FlashVictoriously
		_ResetTimer
		_Setup
		_Tetris_GetRandomUnit
		_Tetris_MovePlayerLeft
		_Tetris_MovePlayerRight
		_Tetris_ResetGame
		_Tetris_RotatePlayer
		_Tetris_UpdateGame
		_UpdateDifficulty
		___eetoi
		___itoee
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _UpdateDifficulty *****************
 Defined at:
		line 134 in file "main.c"
 Parameters:    Size  Location     Type
  tetrisGame      1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  tetrisGame      1    5[COMMON] PTR struct .
		 -> main@tetrisGame(63), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Tetris_UpdateGame *****************
 Defined at:
		line 351 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1   37[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
  rowsCleared     1   36[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E60
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_ClearFilledRows
		_Tetris_GetRandomUnit
		_Tetris_MovePlayerDown
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_ResetPlayer
		_Tetris_ScoreForRowsCleared
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Tetris_ScoreForRowsCleared *****************
 Defined at:
		line 316 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  rowsCleared     1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  rowsCleared     1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_UpdateGame
 This function uses a non-reentrant model


 *************** function _Tetris_MovePlayerDown *****************
 Defined at:
		line 392 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1   13[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_RemovePlayerFromTable
 This function is called by:
		_Tetris_UpdateGame
 This function uses a non-reentrant model


 *************** function _Tetris_GetRandomUnit *****************
 Defined at:
		line 328 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   12[BANK0 ] PTR const struct .
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       2       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awmod
		___wmul
		_rand
 This function is called by:
		_main
		_Tetris_UpdateGame
 This function uses a non-reentrant model


 *************** function _rand *****************
 Defined at:
		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    8[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       5       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lmul
 This function is called by:
		_Tetris_GetRandomUnit
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4    0[BANK0 ] unsigned long 
  multiplicand    4    4[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  product         4    4[COMMON] unsigned long 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       8       0       0
      Locals:         4       0       0       0
      Temps:          1       0       0       0
      Totals:         5       8       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_rand
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   21[BANK0 ] unsigned int 
  multiplicand    2   23[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   25[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2   21[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_GetRandomUnit
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2   15[BANK0 ] int 
  dividend        2   17[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1   20[BANK0 ] unsigned char 
  counter         1   19[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   15[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          1       0       0       0
      Totals:         1       6       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_GetRandomUnit
 This function uses a non-reentrant model


 *************** function _Tetris_ClearFilledRows *****************
 Defined at:
		line 372 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  gameTable       1    wreg     PTR unsigned int 
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  gameTable       1    7[COMMON] PTR unsigned int 
		 -> main@tetrisGame(63), 
  i               1    8[COMMON] unsigned char 
  rowsCleared     1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0       4       0       0
      Totals:         3       4       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Tetris_ShiftTableDown
 This function is called by:
		_Tetris_UpdateGame
 This function uses a non-reentrant model


 *************** function _Tetris_ShiftTableDown *****************
 Defined at:
		line 302 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  gameTable       1    wreg     PTR unsigned int 
		 -> main@tetrisGame(63), 
  upto            1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  gameTable       1    4[COMMON] PTR unsigned int 
		 -> main@tetrisGame(63), 
  i               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         2       0       0       0
      Temps:          0       6       0       0
      Totals:         3       6       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_ClearFilledRows
 This function uses a non-reentrant model


 *************** function _Tetris_RotatePlayer *****************
 Defined at:
		line 453 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1   19[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
  oldRotation     1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       6       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_PlayerUnitBitsAreValid
		_Tetris_RemovePlayerFromTable
		_Tetris_UpdatePlayerUnitBits
		___lbmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1    0[BANK0 ] unsigned char 
  rem             1    2[BANK0 ] unsigned char 
  counter         1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         0       3       0       0
      Temps:          3       0       0       0
      Totals:         4       3       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerUnitBitsAreValid *****************
 Defined at:
		line 283 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR const struct .
		 -> tetrisGame.player(13), main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  player          1   10[BANK0 ] PTR const struct .
		 -> tetrisGame.player(13), main@tetrisGame(63), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          4       0       0       0
      Totals:         4       1       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_CountUnitBits
 This function is called by:
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_CountUnitBits *****************
 Defined at:
		line 247 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  unitBits        2    3[COMMON] PTR const unsigned int 
		 -> tetrisGame.player(13), Tetris_units.bits(32), Tetris_units(238), main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  j               1    8[BANK0 ] unsigned char 
  mask            2    5[BANK0 ] unsigned int 
  i               1    9[BANK0 ] unsigned char 
  result          1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       5       0       0
      Temps:          0       5       0       0
      Totals:         2      10       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    2
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_PlayerUnitBitsAreValid
 This function uses a non-reentrant model


 *************** function _Tetris_ResetGame *****************
 Defined at:
		line 344 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
  playerUnit      2   34[BANK0 ] PTR const struct .
		 -> Tetris_units(238), 
 Auto vars:     Size  Location     Type
  game            1   36[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_ResetPlayer
		_memset
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Tetris_ResetPlayer *****************
 Defined at:
		line 295 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
  playerUnit      2   29[BANK0 ] PTR const struct .
		 -> Tetris_units(238), 
 Auto vars:     Size  Location     Type
  player          1   33[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Tetris_SetPlayerUnit
 This function is called by:
		_Tetris_ResetGame
		_Tetris_UpdateGame
 This function uses a non-reentrant model


 *************** function _Tetris_SetPlayerUnit *****************
 Defined at:
		line 289 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
  unit            2   10[BANK0 ] PTR const struct .
		 -> Tetris_units(238), 
 Auto vars:     Size  Location     Type
  player          1    8[COMMON] PTR struct .
		 -> main@tetrisGame(63), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       2       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_UpdatePlayerUnitBits
 This function is called by:
		_Tetris_ResetPlayer
 This function uses a non-reentrant model


 *************** function _Tetris_UpdatePlayerUnitBits *****************
 Defined at:
		line 263 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  player          1    7[COMMON] PTR struct .
		 -> main@tetrisGame(63), 
  i               1    4[COMMON] unsigned char 
  i               1    3[COMMON] unsigned char 
  i               1    5[COMMON] unsigned char 
  shift           1    6[COMMON] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         5       0       0       0
      Temps:          0      10       0       0
      Totals:         5      10       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    2
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_SetPlayerUnit
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_MovePlayerRight *****************
 Defined at:
		line 430 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1   16[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
  i               1   15[BANK0 ] unsigned char 
  i               1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_PlayerTouchingRightBound
		_Tetris_RemovePlayerFromTable
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerTouchingRightBound *****************
 Defined at:
		line 208 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  player          1    7[COMMON] PTR struct .
		 -> main@tetrisGame(63), 
  i               1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          4       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_MovePlayerRight
 This function uses a non-reentrant model


 *************** function _Tetris_MovePlayerLeft *****************
 Defined at:
		line 407 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1   16[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
  i               1   15[BANK0 ] unsigned char 
  i               1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_PlayerTouchingLeftBound
		_Tetris_RemovePlayerFromTable
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Tetris_RemovePlayerFromTable *****************
 Defined at:
		line 219 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1    7[COMMON] PTR struct .
		 -> main@tetrisGame(63), 
  i               1    8[COMMON] unsigned char 
  start           1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0       8       0       0
      Totals:         3       8       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_PlayerTopmostY
 This function is called by:
		_Tetris_MovePlayerDown
		_Tetris_MovePlayerLeft
		_Tetris_MovePlayerRight
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerTouchingLeftBound *****************
 Defined at:
		line 197 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  player          1    7[COMMON] PTR struct .
		 -> main@tetrisGame(63), 
  i               1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          4       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_MovePlayerLeft
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerOverlapsEnvironment *****************
 Defined at:
		line 185 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1    7[COMMON] PTR struct .
		 -> main@tetrisGame(63), 
  i               1    8[COMMON] unsigned char 
  start           1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0      12       0       0
      Totals:         3      12       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_PlayerTopmostY
 This function is called by:
		_Tetris_UpdateGame
		_Tetris_MovePlayerDown
		_Tetris_MovePlayerLeft
		_Tetris_MovePlayerRight
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_ApplyPlayerToTable *****************
 Defined at:
		line 228 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  game            1   11[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
  i               1   10[BANK0 ] unsigned char 
  i               1    9[BANK0 ] unsigned char 
  start           1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       8       0       0
      Totals:         0      12       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_PlayerTopmostY
 This function is called by:
		_Tetris_ResetGame
		_Tetris_UpdateGame
		_Tetris_MovePlayerDown
		_Tetris_MovePlayerLeft
		_Tetris_MovePlayerRight
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerTopmostY *****************
 Defined at:
		line 180 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  player          1    5[COMMON] PTR struct .
		 -> main@tetrisGame(63), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    2
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_RemovePlayerFromTable
		_Tetris_ApplyPlayerToTable
 This function uses a non-reentrant model


 *************** function _Setup *****************
 Defined at:
		line 118 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_Buttons_Setup
		_LCD_Clear
		_LCD_Reset
		_LCD_SegmentSelection
		_LCD_SetupPorts
		_LCD_TurnOn
		_SetupOscillator
		_SetupRandomness
		_SetupTimer
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SetupTimer *****************
 Defined at:
		line 64 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Setup
 This function uses a non-reentrant model


 *************** function _SetupRandomness *****************
 Defined at:
		line 112 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___eetoi
		___itoee
		_srand
 This function is called by:
		_Setup
 This function uses a non-reentrant model


 *************** function _srand *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c"
 Parameters:    Size  Location     Type
  x               2    7[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_SetupRandomness
 This function uses a non-reentrant model


 *************** function ___itoee *****************
 Defined at:
		line 157 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeprom.c"
 Parameters:    Size  Location     Type
  addr            1    wreg     PTR eeprom void 
		 -> highscore(2), uniqueSeed(2), 
  data            2    7[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  addr            1    8[COMMON] PTR eeprom void 
		 -> highscore(2), uniqueSeed(2), 
 Return value:  Size  Location     Type
                  2    7[BANK0 ] unsigned int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         1       0       0       0
      Temps:          0       2       0       0
      Totals:         1       4       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___memcpyee
 This function is called by:
		_SetupRandomness
		_main
 This function uses a non-reentrant model


 *************** function ___memcpyee *****************
 Defined at:
		line 39 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeprom.c"
 Parameters:    Size  Location     Type
  to              1    wreg     PTR eeprom unsigned char
		 -> highscore(2), uniqueSeed(2), 
  from            1    3[COMMON] PTR const unsigned char 
		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(4), __ltoee@data(4), 
		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  size            1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  to              1    7[COMMON] PTR eeprom unsigned char
		 -> highscore(2), uniqueSeed(2), 
  ptr             1    6[COMMON] PTR const unsigned char 
		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(4), __ltoee@data(4), 
		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		___itoee
 This function uses a non-reentrant model


 *************** function ___eetoi *****************
 Defined at:
		line 112 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeprom.c"
 Parameters:    Size  Location     Type
  addr            1    wreg     PTR eeprom void 
		 -> highscore(2), uniqueSeed(2), 
 Auto vars:     Size  Location     Type
  addr            1    6[BANK0 ] PTR eeprom void 
		 -> highscore(2), uniqueSeed(2), 
  data            2    4[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       2       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___eecpymem
 This function is called by:
		_SetupRandomness
		_main
 This function uses a non-reentrant model


 *************** function ___eecpymem *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeprom.c"
 Parameters:    Size  Location     Type
  to              1    wreg     PTR volatile unsigned ch
		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(4), __eetol@data(4), 
		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  from            1    3[COMMON] PTR eeprom unsigned char
		 -> highscore(2), uniqueSeed(2), 
  size            1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  to              1    7[COMMON] PTR volatile unsigned ch
		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(4), __eetol@data(4), 
		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  cp              1    6[COMMON] PTR volatile unsigned ch
		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(4), __eetol@data(4), 
		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		___eetoi
 This function uses a non-reentrant model


 *************** function _SetupOscillator *****************
 Defined at:
		line 7 in file "./Frequency.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Setup
 This function uses a non-reentrant model


 *************** function _LCD_SetupPorts *****************
 Defined at:
		line 48 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Setup
 This function uses a non-reentrant model


 *************** function _LCD_Reset *****************
 Defined at:
		line 66 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCD_SetX
		_LCD_SetY
		_LCD_SetZ
 This function is called by:
		_Setup
 This function uses a non-reentrant model


 *************** function _LCD_SetZ *****************
 Defined at:
		line 140 in file "LCD.c"
 Parameters:    Size  Location     Type
  z               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  z               1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_Write
 This function is called by:
		_LCD_Reset
 This function uses a non-reentrant model


 *************** function _Buttons_Setup *****************
 Defined at:
		line 39 in file "Buttons.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Buttons_SetupInterrupts
		_Buttons_SetupPortB
 This function is called by:
		_Setup
 This function uses a non-reentrant model


 *************** function _Buttons_SetupPortB *****************
 Defined at:
		line 11 in file "Buttons.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Buttons_Setup
 This function uses a non-reentrant model


 *************** function _Buttons_SetupInterrupts *****************
 Defined at:
		line 19 in file "Buttons.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Buttons_Setup
 This function uses a non-reentrant model


 *************** function _ResetTimer *****************
 Defined at:
		line 75 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _FlashVictoriously *****************
 Defined at:
		line 167 in file "Drawing.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   12[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       3       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_DrawHighscoreText
		_LCD_Clear
		_LCD_SegmentSelection
		_LCD_TurnOff
		_LCD_TurnOn
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_TurnOn *****************
 Defined at:
		line 120 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_Write
 This function is called by:
		_Setup
		_FlashVictoriously
 This function uses a non-reentrant model


 *************** function _LCD_TurnOff *****************
 Defined at:
		line 125 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_Write
 This function is called by:
		_FlashVictoriously
 This function uses a non-reentrant model


 *************** function _LCD_Clear *****************
 Defined at:
		line 145 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  y               1    4[BANK0 ] unsigned char 
  x               1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCD_SetX
		_LCD_SetY
		_LCD_WriteData
 This function is called by:
		_Setup
		_FlashVictoriously
 This function uses a non-reentrant model


 *************** function _DrawHighscoreText *****************
 Defined at:
		line 139 in file "Drawing.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  y               1    7[BANK0 ] unsigned char 
  x               1    8[BANK0 ] unsigned char 
  y               1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       3       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCD_SegmentSelection
		_LCD_SetX
		_LCD_SetY
		_LCD_WriteData
 This function is called by:
		_FlashVictoriously
 This function uses a non-reentrant model


 *************** function _DrawTetris *****************
 Defined at:
		line 62 in file "Drawing.c"
 Parameters:    Size  Location     Type
  tetrisGame      1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  tetrisGame      1   18[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
  x               1   23[BANK0 ] unsigned char 
  rightMask       2   21[BANK0 ] unsigned int 
  leftMask        2   19[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       6       0       0
      Temps:          0       1       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_DrawTetrisGameColumn
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _DrawTetrisGameColumn *****************
 Defined at:
		line 15 in file "Drawing.c"
 Parameters:    Size  Location     Type
  tetrisGame      1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
  x               1    3[BANK0 ] unsigned char 
  rightMask       2    4[BANK0 ] unsigned int 
  leftMask        2    6[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  tetrisGame      1   10[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
  i               1   14[BANK0 ] unsigned char 
  gameRow         2   12[BANK0 ] unsigned int 
  lcdRow          1   16[BANK0 ] unsigned char 
  y               1   15[BANK0 ] unsigned char 
  tableY          1   11[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       7       0       0
      Temps:          0       2       0       0
      Totals:         0      14       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCD_SegmentSelection
		_LCD_SetX
		_LCD_SetY
		_LCD_WriteData
 This function is called by:
		_DrawTetris
 This function uses a non-reentrant model


 *************** function _DrawHighscore *****************
 Defined at:
		line 106 in file "Drawing.c"
 Parameters:    Size  Location     Type
  highscore       2   12[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  lcdData         1   30[BANK0 ] unsigned char 
  lcdData         1   29[BANK0 ] unsigned char 
  lcdData         1   28[BANK0 ] unsigned char 
  y               1   33[BANK0 ] unsigned char 
  y               1   32[BANK0 ] unsigned char 
  y               1   31[BANK0 ] unsigned char 
  scoreDigits     5   23[BANK0 ] unsigned char [5]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0      11       0       0
      Temps:          0       9       0       0
      Totals:         0      22       0       0
Total ram usage:       22 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_DrawHiMarker
		_GetDigits
		_LCD_SegmentSelection
		_LCD_SetX
		_LCD_SetY
		_LCD_WriteData
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _DrawHiMarker *****************
 Defined at:
		line 53 in file "Drawing.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  y               1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCD_SegmentSelection
		_LCD_SetX
		_LCD_SetY
		_LCD_WriteData
 This function is called by:
		_DrawHighscore
 This function uses a non-reentrant model


 *************** function _DrawCurrentScore *****************
 Defined at:
		line 75 in file "Drawing.c"
 Parameters:    Size  Location     Type
  tetrisGame      1    wreg     PTR struct .
		 -> main@tetrisGame(63), 
 Auto vars:     Size  Location     Type
  tetrisGame      1   29[BANK0 ] PTR struct .
		 -> main@tetrisGame(63), 
  lcdData         1   28[BANK0 ] unsigned char 
  lcdData         1   27[BANK0 ] unsigned char 
  lcdData         1   26[BANK0 ] unsigned char 
  y               1   30[BANK0 ] unsigned char 
  y               1   32[BANK0 ] unsigned char 
  y               1   31[BANK0 ] unsigned char 
  scoreDigits     5   21[BANK0 ] unsigned char [5]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0      12       0       0
      Temps:          0       9       0       0
      Totals:         0      21       0       0
Total ram usage:       21 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_GetDigits
		_LCD_SegmentSelection
		_LCD_SetX
		_LCD_SetY
		_LCD_WriteData
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_WriteData *****************
 Defined at:
		line 102 in file "LCD.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_Write
 This function is called by:
		_LCD_Clear
		_DrawTetrisGameColumn
		_DrawHiMarker
		_DrawCurrentScore
		_DrawHighscore
		_DrawHighscoreText
 This function uses a non-reentrant model


 *************** function _LCD_SetY *****************
 Defined at:
		line 130 in file "LCD.c"
 Parameters:    Size  Location     Type
  y               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  y               1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_Write
 This function is called by:
		_LCD_Reset
		_LCD_Clear
		_DrawTetrisGameColumn
		_DrawHiMarker
		_DrawCurrentScore
		_DrawHighscore
		_DrawHighscoreText
 This function uses a non-reentrant model


 *************** function _LCD_SetX *****************
 Defined at:
		line 135 in file "LCD.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  x               1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCD_Write
 This function is called by:
		_LCD_Reset
		_LCD_Clear
		_DrawTetrisGameColumn
		_DrawHiMarker
		_DrawCurrentScore
		_DrawHighscore
		_DrawHighscoreText
 This function uses a non-reentrant model


 *************** function _LCD_Write *****************
 Defined at:
		line 35 in file "LCD.c"
 Parameters:    Size  Location     Type
  mode            1    wreg     enum E1321
  data            1    8[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  mode            1    0[BANK0 ] enum E1321
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         1       1       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_BlockWhileBusy
 This function is called by:
		_LCD_WriteData
		_LCD_TurnOn
		_LCD_TurnOff
		_LCD_SetY
		_LCD_SetX
		_LCD_SetZ
 This function uses a non-reentrant model


 *************** function _LCD_BlockWhileBusy *****************
 Defined at:
		line 28 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_IsBusy
 This function is called by:
		_LCD_Write
		_LCD_ReadData
 This function uses a non-reentrant model


 *************** function _LCD_IsBusy *****************
 Defined at:
		line 22 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  status          1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_ReadStatus
 This function is called by:
		_LCD_BlockWhileBusy
 This function uses a non-reentrant model


 *************** function _LCD_ReadStatus *****************
 Defined at:
		line 80 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  status          1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_IsBusy
 This function uses a non-reentrant model


 *************** function _LCD_SegmentSelection *****************
 Defined at:
		line 107 in file "LCD.c"
 Parameters:    Size  Location     Type
  segments        1    wreg     enum E1292
 Auto vars:     Size  Location     Type
  segments        1    3[COMMON] enum E1292
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Setup
		_DrawTetrisGameColumn
		_DrawHiMarker
		_DrawCurrentScore
		_DrawHighscore
		_DrawHighscoreText
		_FlashVictoriously
 This function uses a non-reentrant model


 *************** function _GetDigits *****************
 Defined at:
		line 11 in file "./Digits.h"
 Parameters:    Size  Location     Type
  n               2    3[BANK0 ] unsigned int 
  digits          1    5[BANK0 ] PTR unsigned char 
		 -> DrawHighscore@scoreDigits(5), DrawCurrentScore@scoreDigits(5), 
 Auto vars:     Size  Location     Type
  newN            2    9[BANK0 ] unsigned int 
  i               1   11[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       3       0       0
      Totals:         0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___bmul
		___lwdiv
 This function is called by:
		_DrawCurrentScore
		_DrawHighscore
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    3[COMMON] unsigned int 
  dividend        2    5[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    1[BANK0 ] unsigned int 
  counter         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       3       0       0
      Temps:          1       0       0       0
      Totals:         5       3       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_GetDigits
 This function uses a non-reentrant model


 *************** function ___bmul *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    6[COMMON] unsigned char 
  product         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_GetDigits
 This function uses a non-reentrant model


 *************** function _Buttons_Update *****************
 Defined at:
		line 50 in file "Buttons.c"
 Parameters:    Size  Location     Type
  buttons         1    wreg     PTR struct .
		 -> main@buttons(4), 
 Auto vars:     Size  Location     Type
  buttons         1    6[COMMON] PTR struct .
		 -> main@buttons(4), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Buttons_UpdateButton
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Buttons_UpdateButton *****************
 Defined at:
		line 25 in file "Buttons.c"
 Parameters:    Size  Location     Type
  button          1    wreg     PTR struct .
		 -> main@buttons(4), 
  nHeld           1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  button          1    5[COMMON] PTR struct .
		 -> main@buttons(4), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Buttons_Update
 This function uses a non-reentrant model


 *************** function _Buttons_Clear *****************
 Defined at:
		line 45 in file "Buttons.c"
 Parameters:    Size  Location     Type
  buttons         1    wreg     PTR struct .
		 -> main@buttons(4), 
 Auto vars:     Size  Location     Type
  buttons         1    8[COMMON] PTR struct .
		 -> main@buttons(4), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_memset
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _memset *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c"
 Parameters:    Size  Location     Type
  p1              1    wreg     PTR void 
		 -> main@buttons(4), main@tetrisGame(63), 
  c               2    3[COMMON] int 
  n               2    5[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  p1              1    1[BANK0 ] PTR void 
		 -> main@buttons(4), main@tetrisGame(63), 
  p               1    0[BANK0 ] PTR unsigned char 
		 -> main@buttons(4), main@tetrisGame(63), 
 Return value:  Size  Location     Type
                  1    wreg      PTR void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       2       0       0
      Temps:          1       0       0       0
      Totals:         5       2       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_ResetGame
		_Buttons_Clear
 This function uses a non-reentrant model


 *************** function _InterruptHandler *****************
 Defined at:
		line 80 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          3       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
./Frequency.h
		_SetupOscillator		CODE           	0896	0000	7

./Frequency.h estimated size: 7

../Tetris/Tetris.c
		_Tetris_ApplyPlayerToTable		CODE           	06C6	0000	103
		_Tetris_UpdateGame		CODE           	0FAD	0000	84
		_Tetris_PlayerTouchingRightBound		CODE           	0A11	0000	31
		_Tetris_MovePlayerRight		CODE           	0791	0000	90
		_Tetris_RemovePlayerFromTable		CODE           	0D26	0000	55
		_Tetris_RotatePlayer		CODE           	0656	0000	113
		_Tetris_ClearFilledRows		CODE           	0C56	0000	50
		_Tetris_ScoreForRowsCleared		CODE           	0AD8	0000	36
		_Tetris_ShiftTableDown		CODE           	0ED8	0000	68
		_Tetris_UpdatePlayerUnitBits		CODE           	052C	0000	156
		_Tetris_ResetPlayer		CODE           	0A92	0000	36
		_Tetris_MovePlayerDown		CODE           	0C26	0000	49
		_Tetris_PlayerOverlapsEnvironment		CODE           	0E15	0000	66
		_Tetris_GetRandomUnit		CODE           	0B45	0000	44
		_Tetris_PlayerTopmostY		CODE           	0972	0000	19
		_Tetris_SetPlayerUnit		CODE           	0951	0000	17
		_Tetris_PlayerUnitBitsAreValid		CODE           	0CF1	0000	54
		_Tetris_CountUnitBits		CODE           	0E56	0000	66
		_Tetris_MovePlayerLeft		CODE           	008A	0000	88
		_Tetris_PlayerTouchingLeftBound		CODE           	09F3	0000	31
		_Tetris_ResetGame		CODE           	00E1	0000	32

../Tetris/Tetris.c estimated size: 1288

Drawing.c
		_DrawHighscore 		CODE           	0276	0000	270
		_DrawHiMarker  		CODE           	0BF7	0000	48
		_FlashVictoriously		CODE           	0D5C	0000	59
		_DrawHighscoreText		CODE           	072C	0000	102
		_DrawTetrisGameColumn		CODE           	05C7	0000	144
		_DrawTetris    		CODE           	0CBC	0000	54
		_DrawCurrentScore		CODE           	0383	0000	259

Drawing.c estimated size: 936

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c
		___awmod       		CODE           	0F60	0000	78

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c estimated size: 78

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c
		___lwdiv       		CODE           	0D96	0000	63

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c estimated size: 63

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c
		___wmul        		CODE           	0AB5	0000	36

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c estimated size: 36

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c
		___lbmod       		CODE           	0B20	0000	38

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c estimated size: 38

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c
		___bmul        		CODE           	0961	0000	18

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c estimated size: 18

Buttons.c
		_Buttons_SetupPortB		CODE           	0907	0000	14
		_Buttons_SetupInterrupts		CODE           	088B	0000	6
		_Buttons_UpdateButton		CODE           	0A4E	0000	34
		_Buttons_Clear 		CODE           	08CB	0000	13
		_Buttons_Setup 		CODE           	0890	0000	7
		_Buttons_Update		CODE           	0B70	0000	45

Buttons.c estimated size: 119

./Digits.h
		_GetDigits     		CODE           	0C87	0000	54

./Digits.h estimated size: 54

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeprom.c
		___memcpyee    		CODE           	0DD4	0000	66
		___eetoi       		CODE           	07EA	0000	22
		___itoee       		CODE           	0922	0000	16
		___eecpymem    		CODE           	0B9C	0000	46

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\pic\__eeprom.c estimated size: 150

shared
		_Tetris_unitPivot		STRCODE        	0184	0000	3
		__stringtab    		STRCODE        	0100	0000	19
		_Font_hi       		STRCODE        	017A	0000	9
		DrawHighscoreText@baseX		STRCODE        	0000	0000	0
		_Tetris_playerStartingPosition		STRCODE        	0182	0000	3
		__initialization		CODE           	000D	0000	36
		DrawHighscoreText@baseY		STRCODE        	0000	0000	0
		_Font_digits   		STRCODE        	0112	0000	81
		_Font_score    		STRCODE        	0162	0000	25
		_Tetris_units  		STRCODE        	0188	0000	239

shared estimated size: 415

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c
		___lmul        		CODE           	0E97	0000	66

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c estimated size: 66

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c
		_srand         		CODE           	08A3	0000	10
		_rand          		CODE           	0F1B	0000	70

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c estimated size: 80

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c
		_memset        		CODE           	09D5	0000	31

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c estimated size: 31

main.c
		_main          		CODE           	0485	0000	168
		_InterruptHandler		CODE           	0BC9	0000	47
		_Setup         		CODE           	09B8	0000	30
		_SetupTimer    		CODE           	08FB	0000	13
		_UpdateDifficulty		CODE           	0033	0000	88
		_ResetTimer    		CODE           	0886	0000	6
		_SetupRandomness		CODE           	0A2F	0000	32

main.c estimated size: 384

LCD.c
		_LCD_SegmentSelection		CODE           	0931	0000	17
		_LCD_BlockWhileBusy		CODE           	089C	0000	8
		_LCD_SetX      		CODE           	08D7	0000	13
		_LCD_SetY      		CODE           	08E3	0000	13
		_LCD_SetZ      		CODE           	08EF	0000	13
		_LCD_ReadStatus		CODE           	0941	0000	17
		_LCD_Reset     		CODE           	0984	0000	24
		_LCD_SetupPorts		CODE           	0A6F	0000	36
		_LCD_TurnOn    		CODE           	08B6	0000	11
		_LCD_TurnOff   		CODE           	08AC	0000	11
		_LCD_Clear     		CODE           	0AFB	0000	38
		_LCD_Write     		CODE           	099B	0000	30
		_LCD_IsBusy    		CODE           	0914	0000	15
		_LCD_WriteData 		CODE           	08C0	0000	12

LCD.c estimated size: 258

