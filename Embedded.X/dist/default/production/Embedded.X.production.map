Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.05\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\Embedded.X.production.sym \
  --cmf=dist/default/production\Embedded.X.production.cmf -z -Q16F884 \
  -oC:\Users\ALECEI~1\AppData\Local\Temp\sdqs.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Embedded.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0120h-016Fh -pstack=STACK -ACODE=00h-07FFhx2 \
  -ASTRCODE=00h-0FFFh -ASTRING=00h-0FFhx16 -ACONST=00h-0FFhx16 \
  -AENTRY=00h-0FFhx16 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\ALECEI~1\AppData\Local\Temp\sdqs.o \
  dist/default/production\Embedded.X.production.o 

Object code version is 3.11

Machine type is 16F884



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ALECEI~1\AppData\Local\Temp\sdqs.o
                end_init                              0        0        2        0       0
dist/default/production\Embedded.X.production.o
                cinit                               7EE      7EE       12      FDC       0
                text19                              44D      44D       13      89A       0
                text18                              5AB      5AB       3F      B56       0
                text17                              66C      66C       45      CD8       0
                text16                              43C      43C       11      878       0
                text15                              41F      41F        E      83E       0
                text14                              512      512       32      A24       0
                text13                              5EA      5EA       41      BD4       0
                text12                              491      491       1E      922       0
                text11                              577      577       34      AEE       0
                text10                              6B1      6B1       57      D62       0
                text9                               768      768       86      ED0       0
                text8                               42D      42D        F      85A       0
                text7                               4CE      4CE       21      99C       0
                text6                               475      475       1C      8EA       0
                text5                               4AF      4AF       1F      95E       0
                text4                               62B      62B       41      C56       0
                text3                               544      544       33      A88       0
                text2                               4EF      4EF       23      9DE       0
                text1                               708      708       60      E10       0
                maintext                            460      460       15      8C0       0
                cstackBANK0                          20       20       12       20       1
                cstackCOMMON                         70       70        E       70       1
                cstackBANK1                          A0       A0       4E       A0       1
                dataBANK0                            32       32        4       20       1
                strings                               2        2       56        4       0
                idataBANK0                          41B      41B        4      836       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        2         0
                cinit                               7EE      7EE       12         0
                text19                              44D      44D       13         0
                text18                              5AB      5AB       3F         0
                text17                              66C      66C       45         0
                text16                              43C      43C       11         0
                text15                              41F      41F        E         0
                text14                              512      512       32         0
                text13                              5EA      5EA       41         0
                text12                              491      491       1E         0
                text11                              577      577       34         0
                text10                              6B1      6B1       57         0
                text9                               768      768       86         0
                text8                               42D      42D        F         0
                text7                               4CE      4CE       21         0
                text6                               475      475       1C         0
                text5                               4AF      4AF       1F         0
                text4                               62B      62B       41         0
                text3                               544      544       33         0
                text2                               4EF      4EF       23         0
                text1                               708      708       60         0
                maintext                            460      460       15         0
                idataBANK0                          41B      41B        4         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                               2        2       56         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       12         1
                dataBANK0                            32       32        4         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       4E         1

        CLASS   BANK2          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK3          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000002  000002         0       0  CODE        2
                strings                        000002  000056  000058         4       0  STRING      2
                cstackBANK0                    000020  000016  000036        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                cstackBANK1                    0000A0  00004E  0000EE        A0       1  BANK1       1
                idataBANK0                     00041B  000004  00041F       836       0  CODE        2
                text15                         00041F  00000E  00042D       83E       0  CODE        2
                text8                          00042D  00000F  00043C       85A       0  CODE        2
                text16                         00043C  000011  00044D       878       0  CODE        2
                text19                         00044D  000013  000460       89A       0  CODE        2
                maintext                       000460  000015  000475       8C0       0  CODE        2
                text6                          000475  00001C  000491       8EA       0  CODE        2
                text12                         000491  00001E  0004AF       922       0  CODE        2
                text5                          0004AF  00001F  0004CE       95E       0  CODE        2
                text7                          0004CE  000021  0004EF       99C       0  CODE        2
                text2                          0004EF  000023  000512       9DE       0  CODE        2
                text14                         000512  000032  000544       A24       0  CODE        2
                text3                          000544  000033  000577       A88       0  CODE        2
                text11                         000577  000034  0005AB       AEE       0  CODE        2
                text18                         0005AB  00003F  0005EA       B56       0  CODE        2
                text13                         0005EA  000041  00062B       BD4       0  CODE        2
                text4                          00062B  000041  00066C       C56       0  CODE        2
                text17                         00066C  000045  0006B1       CD8       0  CODE        2
                text10                         0006B1  000057  000708       D62       0  CODE        2
                text1                          000708  000060  000768       E10       0  CODE        2
                text9                          000768  000086  0007EE       ED0       0  CODE        2
                cinit                          0007EE  000012  000800       FDC       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0036-006F             3A           1
        BANK1            00EE-00EF              2           1
        BANK2            0120-016F             50           1
        CODE             0058-041A            3C3           2
                         0800-0FFF            800
        CONFIG           2007-2008              2           2
        CONST            0058-041A            100           2
                         0800-0FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0058-041A            100           2
                         0800-0FFF            100
        IDLOC            2000-2003              4           2
        RAM              0036-006F             3A           1
                         00EE-00EF              2
                         0120-016F             50
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-011F             20           1
        SFR3             0180-01EF             70           1
        STACK            0120-016F             50           1
        STRCODE          0058-041A            3C3           2
                         0800-0FFF            800
        STRING           0058-041A            100           2
                         0800-0FFF            100

                                  Symbol Table

?___lmul                                   cstackCOMMON 0070
?_rand                                     cstackBANK0  0020
Tetris_ApplyPlayerToTable@game             cstackCOMMON 007C
Tetris_ApplyPlayerToTable@i                cstackCOMMON 007D
Tetris_ApplyPlayerToTable@start            cstackCOMMON 007B
Tetris_CountUnitBits@i                     cstackCOMMON 007B
Tetris_CountUnitBits@j                     cstackCOMMON 007A
Tetris_CountUnitBits@mask                  cstackCOMMON 0077
Tetris_CountUnitBits@result                cstackCOMMON 0079
Tetris_CountUnitBits@unitBits              cstackCOMMON 0070
Tetris_MovePlayerLeft@game                 cstackBANK0  0030
Tetris_MovePlayerLeft@i                    cstackBANK0  002E
Tetris_MovePlayerLeft@i_270                cstackBANK0  002F
Tetris_PlayerOverlapsEnvironment@game      cstackCOMMON 0074
Tetris_PlayerOverlapsEnvironment@i         cstackCOMMON 0075
Tetris_PlayerOverlapsEnvironment@start     cstackCOMMON 0073
Tetris_PlayerTopmostY@player               cstackCOMMON 0072
Tetris_PlayerTouchingLeftBound@i           cstackCOMMON 0075
Tetris_PlayerTouchingLeftBound@player      cstackCOMMON 0074
Tetris_PlayerUnitBitsAreValid@player       cstackCOMMON 007C
Tetris_RemovePlayerFromTable@game          cstackCOMMON 007C
Tetris_RemovePlayerFromTable@i             cstackCOMMON 007D
Tetris_RemovePlayerFromTable@start         cstackCOMMON 007B
Tetris_ResetGame@game                      cstackBANK0  002D
Tetris_ResetGame@playerUnit                cstackBANK0  002B
Tetris_ResetPlayer@player                  cstackBANK0  0024
Tetris_ResetPlayer@playerUnit              cstackBANK0  0021
Tetris_RotatePlayer@game                   cstackBANK0  002F
Tetris_RotatePlayer@oldRotation            cstackBANK0  002E
Tetris_SetPlayerUnit@player                cstackBANK0  0020
Tetris_SetPlayerUnit@unit                  cstackCOMMON 007C
Tetris_UpdatePlayerUnitBits@i              cstackCOMMON 0079
Tetris_UpdatePlayerUnitBits@i_197          cstackCOMMON 0077
Tetris_UpdatePlayerUnitBits@i_198          cstackCOMMON 0078
Tetris_UpdatePlayerUnitBits@player         cstackCOMMON 007B
Tetris_UpdatePlayerUnitBits@shift          cstackCOMMON 007A
_Tetris_ApplyPlayerToTable                 text14       0512
_Tetris_CountUnitBits                      text4        062B
_Tetris_GetRandomUnit                      text16       043C
_Tetris_MovePlayerLeft                     text10       06B1
_Tetris_PlayerOverlapsEnvironment          text13       05EA
_Tetris_PlayerTopmostY                     text15       041F
_Tetris_PlayerTouchingLeftBound            text12       0491
_Tetris_PlayerUnitBitsAreValid             text3        0544
_Tetris_RemovePlayerFromTable              text11       0577
_Tetris_ResetGame                          text5        04AF
_Tetris_ResetPlayer                        text7        04CE
_Tetris_RotatePlayer                       text1        0708
_Tetris_SetPlayerUnit                      text8        042D
_Tetris_UpdatePlayerUnitBits               text9        0768
_Tetris_playerStartingPosition             strings      0012
_Tetris_unitPivot                          strings      0014
_Tetris_units                              strings      0016
__Habs1                                    abs1         0000
__Hbank0                                   bank0        0000
__Hbank1                                   bank1        0000
__Hbank2                                   bank2        0000
__Hbank3                                   bank3        0000
__Hcinit                                   cinit        0800
__Hclrtext                                 clrtext      0000
__Hcode                                    code         0000
__Hcommon                                  common       0000
__Hconfig                                  config       0000
__HcstackBANK0                             cstackBANK0  0000
__HcstackBANK1                             cstackBANK1  0000
__HcstackCOMMON                            cstackCOMMON 0000
__HdataBANK0                               dataBANK0    0000
__Heeprom_data                             eeprom_data  0000
__Hend_init                                end_init     0002
__Hfunctab                                 functab      0000
__HidataBANK0                              idataBANK0   0000
__Hidloc                                   idloc        0000
__Hinit                                    init         0000
__Hintentry                                intentry     0000
__Hmaintext                                maintext     0000
__Hpowerup                                 powerup      0000
__Hram                                     ram          0000
__Hreset_vec                               reset_vec    0000
__Hsfr0                                    sfr0         0000
__Hsfr1                                    sfr1         0000
__Hsfr2                                    sfr2         0000
__Hsfr3                                    sfr3         0000
__Hspace_0                                 (abs)        0800
__Hspace_1                                 (abs)        00EE
__Hspace_2                                 (abs)        0000
__Hspace_3                                 (abs)        0000
__Hstack                                   stack        0000
__Hstrings                                 strings      0000
__Htext                                    text         0000
__Labs1                                    abs1         0000
__Lbank0                                   bank0        0000
__Lbank1                                   bank1        0000
__Lbank2                                   bank2        0000
__Lbank3                                   bank3        0000
__Lcinit                                   cinit        07EE
__Lclrtext                                 clrtext      0000
__Lcode                                    code         0000
__Lcommon                                  common       0000
__Lconfig                                  config       0000
__LcstackBANK0                             cstackBANK0  0000
__LcstackBANK1                             cstackBANK1  0000
__LcstackCOMMON                            cstackCOMMON 0000
__LdataBANK0                               dataBANK0    0000
__Leeprom_data                             eeprom_data  0000
__Lend_init                                end_init     0000
__Lfunctab                                 functab      0000
__LidataBANK0                              idataBANK0   0000
__Lidloc                                   idloc        0000
__Linit                                    init         0000
__Lintentry                                intentry     0000
__Lmaintext                                maintext     0000
__Lpowerup                                 powerup      0000
__Lram                                     ram          0000
__Lreset_vec                               reset_vec    0000
__Lsfr0                                    sfr0         0000
__Lsfr1                                    sfr1         0000
__Lsfr2                                    sfr2         0000
__Lsfr3                                    sfr3         0000
__Lspace_0                                 (abs)        0000
__Lspace_1                                 (abs)        0000
__Lspace_2                                 (abs)        0000
__Lspace_3                                 (abs)        0000
__Lstack                                   stack        0000
__Lstrings                                 strings      0000
__Ltext                                    text         0000
__S0                                       (abs)        0800
__S1                                       (abs)        00EE
__S2                                       (abs)        0000
__S3                                       (abs)        0000
___bmul                                    text19       044D
___bmul@multiplicand                       cstackBANK0  0027
___bmul@multiplier                         cstackBANK0  0029
___bmul@product                            cstackBANK0  0028
___int_sp                                  stack        0000
___latbits                                 (abs)        0001
___lbmod                                   text2        04EF
___lbmod@counter                           cstackCOMMON 0075
___lbmod@dividend                          cstackCOMMON 0074
___lbmod@divisor                           cstackCOMMON 0070
___lbmod@rem                               cstackCOMMON 0076
___lmul                                    text18       05AB
___lmul@multiplicand                       cstackCOMMON 0074
___lmul@multiplier                         cstackCOMMON 0070
___lmul@product                            cstackCOMMON 0079
___sp                                      stack        0000
___stackhi                                 (abs)        0000
___stacklo                                 (abs)        0000
__end_of_Tetris_ApplyPlayerToTable         text14       0544
__end_of_Tetris_CountUnitBits              text4        066C
__end_of_Tetris_GetRandomUnit              text16       044D
__end_of_Tetris_MovePlayerLeft             text10       0708
__end_of_Tetris_PlayerOverlapsEnvironment  text13       062B
__end_of_Tetris_PlayerTopmostY             text15       042D
__end_of_Tetris_PlayerTouchingLeftBound    text12       04AF
__end_of_Tetris_PlayerUnitBitsAreValid     text3        0577
__end_of_Tetris_RemovePlayerFromTable      text11       05AB
__end_of_Tetris_ResetGame                  text5        04CE
__end_of_Tetris_ResetPlayer                text7        04EF
__end_of_Tetris_RotatePlayer               text1        0768
__end_of_Tetris_SetPlayerUnit              text8        043C
__end_of_Tetris_UpdatePlayerUnitBits       text9        07EE
__end_of_Tetris_playerStartingPosition     strings      0014
__end_of_Tetris_unitPivot                  strings      0016
__end_of_Tetris_units                      strings      0058
__end_of___bmul                            text19       0460
__end_of___lbmod                           text2        0512
__end_of___lmul                            text18       05EA
__end_of__initialization                   cinit        07FD
__end_of__stringtab                        strings      0012
__end_of_main                              maintext     0475
__end_of_memset                            text6        0491
__end_of_rand                              text17       06B1
__initialization                           cinit        07EE
__pcstackBANK0                             cstackBANK0  0020
__pcstackBANK1                             cstackBANK1  00A0
__pcstackCOMMON                            cstackCOMMON 0070
__pdataBANK0                               dataBANK0    0032
__pidataBANK0                              idataBANK0   041B
__pmaintext                                maintext     0460
__pstrings                                 strings      0002
__ptext1                                   text1        0708
__ptext10                                  text10       06B1
__ptext11                                  text11       0577
__ptext12                                  text12       0491
__ptext13                                  text13       05EA
__ptext14                                  text14       0512
__ptext15                                  text15       041F
__ptext16                                  text16       043C
__ptext17                                  text17       066C
__ptext18                                  text18       05AB
__ptext19                                  text19       044D
__ptext2                                   text2        04EF
__ptext3                                   text3        0544
__ptext4                                   text4        062B
__ptext5                                   text5        04AF
__ptext6                                   text6        0475
__ptext7                                   text7        04CE
__ptext8                                   text8        042D
__ptext9                                   text9        0768
__size_of_Tetris_ApplyPlayerToTable        (abs)        0000
__size_of_Tetris_CountUnitBits             (abs)        0000
__size_of_Tetris_GetRandomUnit             (abs)        0000
__size_of_Tetris_MovePlayerLeft            (abs)        0000
__size_of_Tetris_PlayerOverlapsEnvironment (abs)        0000
__size_of_Tetris_PlayerTopmostY            (abs)        0000
__size_of_Tetris_PlayerTouchingLeftBound   (abs)        0000
__size_of_Tetris_PlayerUnitBitsAreValid    (abs)        0000
__size_of_Tetris_RemovePlayerFromTable     (abs)        0000
__size_of_Tetris_ResetGame                 (abs)        0000
__size_of_Tetris_ResetPlayer               (abs)        0000
__size_of_Tetris_RotatePlayer              (abs)        0000
__size_of_Tetris_SetPlayerUnit             (abs)        0000
__size_of_Tetris_UpdatePlayerUnitBits      (abs)        0000
__size_of___bmul                           (abs)        0000
__size_of___lbmod                          (abs)        0000
__size_of___lmul                           (abs)        0000
__size_of_main                             (abs)        0000
__size_of_memset                           (abs)        0000
__size_of_rand                             (abs)        0000
__stringbase                               strings      0011
__stringtab                                strings      0002
_main                                      maintext     0460
_memset                                    text6        0475
_rand                                      text17       066C
_randx                                     dataBANK0    0032
btemp                                      (abs)        007E
end_of_initialization                      cinit        07FD
intlevel0                                  functab      0000
intlevel1                                  functab      0000
intlevel2                                  functab      0000
intlevel3                                  functab      0000
intlevel4                                  functab      0000
intlevel5                                  functab      0000
main@game                                  cstackBANK1  00A0
memset@c                                   cstackCOMMON 0070
memset@n                                   cstackCOMMON 0072
memset@p                                   cstackCOMMON 0076
memset@p1                                  cstackCOMMON 0075
reset_vec                                  reset_vec    0000
start                                      init         0000
start_initialization                       cinit        07EE
wtemp0                                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 5 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  game           78    0[BANK1 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0      78       0
      Temps:          0       1       0       0
      Totals:         0       1      78       0
Total ram usage:       79 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_Tetris_GetRandomUnit
		_Tetris_MovePlayerLeft
		_Tetris_ResetGame
		_Tetris_RotatePlayer
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _Tetris_RotatePlayer *****************
 Defined at:
		line 238 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  game            1   15[BANK0 ] PTR struct .
		 -> main@game(78), 
  oldRotation     1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_PlayerUnitBitsAreValid
		_Tetris_RemovePlayerFromTable
		_Tetris_UpdatePlayerUnitBits
		___lbmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1    4[COMMON] unsigned char 
  rem             1    6[COMMON] unsigned char 
  counter         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerUnitBitsAreValid *****************
 Defined at:
		line 145 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR const struct .
		 -> game.player(13), main@game(78), 
 Auto vars:     Size  Location     Type
  player          1   12[COMMON] PTR const struct .
		 -> game.player(13), main@game(78), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       4       0       0
      Totals:         1       4       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Tetris_CountUnitBits
 This function is called by:
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_CountUnitBits *****************
 Defined at:
		line 109 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  unitBits        2    0[COMMON] PTR const unsigned int 
		 -> game.player(13), Tetris_units.bits(32), Tetris_units(66), main@game(78), 
 Auto vars:     Size  Location     Type
  j               1   10[COMMON] unsigned char 
  mask            2    7[COMMON] unsigned int 
  i               1   11[COMMON] unsigned char 
  result          1    9[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         5       0       0       0
      Temps:          5       0       0       0
      Totals:        12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    2
 This function calls:
		Nothing
 This function is called by:
		_Tetris_PlayerUnitBitsAreValid
 This function uses a non-reentrant model


 *************** function _Tetris_ResetGame *****************
 Defined at:
		line 180 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@game(78), 
  playerUnit      1   11[BANK0 ] PTR const struct .
		 -> Tetris_units(66), 
 Auto vars:     Size  Location     Type
  game            1   13[BANK0 ] PTR struct .
		 -> main@game(78), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_ResetPlayer
		_memset
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _memset *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c"
 Parameters:    Size  Location     Type
  p1              1    wreg     PTR void 
		 -> main@game(78), 
  c               2    0[COMMON] int 
  n               2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  p1              1    5[COMMON] PTR void 
		 -> main@game(78), 
  p               1    6[COMMON] PTR unsigned char 
		 -> main@game(78), 
 Return value:  Size  Location     Type
                  1    wreg      PTR void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_ResetGame
 This function uses a non-reentrant model


 *************** function _Tetris_ResetPlayer *****************
 Defined at:
		line 156 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@game(78), 
  playerUnit      1    1[BANK0 ] PTR const struct .
		 -> Tetris_units(66), 
 Auto vars:     Size  Location     Type
  player          1    4[BANK0 ] PTR struct .
		 -> main@game(78), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_SetPlayerUnit
 This function is called by:
		_Tetris_ResetGame
 This function uses a non-reentrant model


 *************** function _Tetris_SetPlayerUnit *****************
 Defined at:
		line 150 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@game(78), 
  unit            1   12[COMMON] PTR const struct .
		 -> Tetris_units(66), 
 Auto vars:     Size  Location     Type
  player          1    0[BANK0 ] PTR struct .
		 -> main@game(78), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         0       1       0       0
      Temps:          1       0       0       0
      Totals:         2       1       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Tetris_UpdatePlayerUnitBits
 This function is called by:
		_Tetris_ResetPlayer
 This function uses a non-reentrant model


 *************** function _Tetris_UpdatePlayerUnitBits *****************
 Defined at:
		line 125 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  player          1   11[COMMON] PTR struct .
		 -> main@game(78), 
  i               1    8[COMMON] unsigned char 
  i               1    7[COMMON] unsigned char 
  i               1    9[COMMON] unsigned char 
  shift           1   10[COMMON] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         5       0       0       0
      Temps:          7       0       0       0
      Totals:        12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    2
 This function calls:
		Nothing
 This function is called by:
		_Tetris_SetPlayerUnit
		_Tetris_RotatePlayer
 This function uses a non-reentrant model


 *************** function _Tetris_MovePlayerLeft *****************
 Defined at:
		line 192 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  game            1   16[BANK0 ] PTR struct .
		 -> main@game(78), 
  i               1   15[BANK0 ] unsigned char 
  i               1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Tetris_ApplyPlayerToTable
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_PlayerTouchingLeftBound
		_Tetris_RemovePlayerFromTable
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Tetris_RemovePlayerFromTable *****************
 Defined at:
		line 91 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  game            1   12[COMMON] PTR struct .
		 -> main@game(78), 
  i               1   13[COMMON] unsigned char 
  start           1   11[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          8       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Tetris_PlayerTopmostY
 This function is called by:
		_Tetris_MovePlayerLeft
		_Tetris_RotatePlayer
		_Tetris_MovePlayerRight
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerTouchingLeftBound *****************
 Defined at:
		line 69 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  player          1    4[COMMON] PTR struct .
		 -> main@game(78), 
  i               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          4       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_MovePlayerLeft
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerOverlapsEnvironment *****************
 Defined at:
		line 57 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  game            1    4[COMMON] PTR struct .
		 -> main@game(78), 
  i               1    5[COMMON] unsigned char 
  start           1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0      12       0       0
      Totals:         3      12       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Tetris_PlayerTopmostY
 This function is called by:
		_Tetris_MovePlayerLeft
		_Tetris_RotatePlayer
		_Tetris_MovePlayerRight
 This function uses a non-reentrant model


 *************** function _Tetris_ApplyPlayerToTable *****************
 Defined at:
		line 100 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  game            1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  game            1   12[COMMON] PTR struct .
		 -> main@game(78), 
  i               1   13[COMMON] unsigned char 
  start           1   11[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          8       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Tetris_PlayerTopmostY
 This function is called by:
		_Tetris_ResetGame
		_Tetris_MovePlayerLeft
		_Tetris_RotatePlayer
		_Tetris_MovePlayerRight
 This function uses a non-reentrant model


 *************** function _Tetris_PlayerTopmostY *****************
 Defined at:
		line 52 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
  player          1    wreg     PTR struct .
		 -> main@game(78), 
 Auto vars:     Size  Location     Type
  player          1    2[COMMON] PTR struct .
		 -> main@game(78), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    2
 This function calls:
		Nothing
 This function is called by:
		_Tetris_PlayerOverlapsEnvironment
		_Tetris_RemovePlayerFromTable
		_Tetris_ApplyPlayerToTable
 This function uses a non-reentrant model


 *************** function _Tetris_GetRandomUnit *****************
 Defined at:
		line 163 in file "../Tetris/Tetris.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      PTR const struct .
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___bmul
		_rand
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rand *****************
 Defined at:
		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       5       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___lmul
 This function is called by:
		_Tetris_GetRandomUnit
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4    0[COMMON] unsigned long 
  multiplicand    4    4[COMMON] unsigned long 
 Auto vars:     Size  Location     Type
  product         4    9[COMMON] unsigned long 
 Return value:  Size  Location     Type
                  4    0[COMMON] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         8       0       0       0
      Locals:         4       0       0       0
      Temps:          1       0       0       0
      Totals:        13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_rand
 This function uses a non-reentrant model


 *************** function ___bmul *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    7[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    9[BANK0 ] unsigned char 
  product         1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       2       0       0
      Temps:          1       0       0       0
      Totals:         1       3       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Tetris_GetRandomUnit
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
../Tetris/Tetris.c
		_Tetris_ApplyPlayerToTable		CODE           	0512	0000	51
		_Tetris_RemovePlayerFromTable		CODE           	0577	0000	53
		_Tetris_RotatePlayer		CODE           	0708	0000	97
		_Tetris_UpdatePlayerUnitBits		CODE           	0768	0000	135
		_Tetris_ResetPlayer		CODE           	04CE	0000	34
		_Tetris_PlayerOverlapsEnvironment		CODE           	05EA	0000	66
		_Tetris_GetRandomUnit		CODE           	043C	0000	18
		_Tetris_PlayerTopmostY		CODE           	041F	0000	15
		_Tetris_SetPlayerUnit		CODE           	042D	0000	16
		_Tetris_PlayerUnitBitsAreValid		CODE           	0544	0000	52
		_Tetris_CountUnitBits		CODE           	062B	0000	66
		_Tetris_MovePlayerLeft		CODE           	06B1	0000	88
		_Tetris_PlayerTouchingLeftBound		CODE           	0491	0000	31
		_Tetris_ResetGame		CODE           	04AF	0000	32

../Tetris/Tetris.c estimated size: 754

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c
		___lbmod       		CODE           	04EF	0000	36

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c estimated size: 36

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c
		___bmul        		CODE           	044D	0000	20

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c estimated size: 20

shared
		_Tetris_unitPivot		STRING         	0014	0000	3
		__stringtab    		STRING         	0002	0000	17
		_Tetris_playerStartingPosition		STRING         	0012	0000	3
		__initialization		CODE           	07EE	0000	16
		_Tetris_units  		STRING         	0016	0000	67

shared estimated size: 106

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c
		___lmul        		CODE           	05AB	0000	64

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c estimated size: 64

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c
		_rand          		CODE           	066C	0000	70

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c estimated size: 70

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c
		_memset        		CODE           	0475	0000	29

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c estimated size: 29

main.c
		_main          		CODE           	0460	0000	22

main.c estimated size: 22

