Version 4.0 HI-TECH Software Intermediate Code
"20 ../Tetris/Tetris.h
[; ;../Tetris/Tetris.h: 20: typedef struct {
[s S1 `uc 1 `uc 1 ]
[n S1 . x y ]
[v F46 `ui ~T0 @X0 -> 4 `i t ]
"25
[; ;../Tetris/Tetris.h: 25: typedef struct {
[s S2 `uc 1 `F46 -> 4 `i ]
[n S2 . numRotations bits ]
"30
[; ;../Tetris/Tetris.h: 30: typedef struct {
[s S3 `S1 1 `*CS2 1 `ui -> 4 `i `uc 1 ]
[n S3 . position unit unitBits rotation ]
"41
[; ;../Tetris/Tetris.h: 41: typedef struct {
[s S4 `ui -> 32 `i `S3 1 `ui 1 ]
[n S4 . table player currentScore ]
"60 ../Tetris/Tetris.c
[; ;../Tetris/Tetris.c: 60:  for (uint8_t i = 0; i < TETRIS_UNIT_HEIGHT; ++i)
[c E36 4 .. ]
[n E36 . TETRIS_UNIT_HEIGHT  ]
"75 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\c90\stdlib.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\c90\stdlib.h: 75: extern int rand(void);
[v _rand `(i ~T0 @X0 0 ef ]
"113 ../Tetris/Tetris.c
[; ;../Tetris/Tetris.c: 113:  player->unit = Tetris_units + (rand() % TETRIS_NUM_UNITS);
[c E279 2 .. ]
[n E279 . TETRIS_NUM_UNITS  ]
"16 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\c90\string.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\c90\string.h: 16: extern void * memset(void *, int, size_t);
[v _memset `(*v ~T0 @X0 0 ef3`*v`i`ui ]
"11 ../Tetris/Tetris.c
[; ;../Tetris/Tetris.c: 11: static Position const Tetris_unitPivot = {
[v _Tetris_unitPivot `CS1 ~T0 @X0 1 s ]
[i _Tetris_unitPivot
:U ..
:U ..
-> -> 3 `i `uc
-> -> 2 `i `uc
..
..
]
"16
[; ;../Tetris/Tetris.c: 16: static Position const Tetris_playerStartingPosition = {
[v _Tetris_playerStartingPosition `CS1 ~T0 @X0 1 s ]
[i _Tetris_playerStartingPosition
:U ..
:U ..
-> -> 8 `i `uc
-> -> 2 `i `uc
..
..
]
"21
[; ;../Tetris/Tetris.c: 21: static Tetris_Unit const Tetris_units[TETRIS_NUM_UNITS] = {
[v _Tetris_units `CS2 ~T0 @X0 -> 2 `i s ]
[i _Tetris_units
:U ..
:U ..
-> -> 2 `i `uc
:U ..
:U ..
-> -> 16 `i `ui
-> -> 16 `i `ui
-> -> 16 `i `ui
-> -> 16 `i `ui
..
:U ..
-> -> 0 `i `ui
-> -> 0 `i `ui
-> -> 60 `i `ui
-> -> 0 `i `ui
..
..
..
:U ..
-> -> 1 `i `uc
:U ..
:U ..
-> -> 0 `i `ui
-> -> 24 `i `ui
-> -> 24 `i `ui
-> -> 0 `i `ui
..
..
..
..
]
"52
[; ;../Tetris/Tetris.c: 52: static uint8_t Tetris_PlayerTopmostY(Tetris_Player *player)
[v _Tetris_PlayerTopmostY `(uc ~T0 @X0 1 sf1`*S3 ]
"53
[; ;../Tetris/Tetris.c: 53: {
{
[e :U _Tetris_PlayerTopmostY ]
"52
[; ;../Tetris/Tetris.c: 52: static uint8_t Tetris_PlayerTopmostY(Tetris_Player *player)
[v _player `*S3 ~T0 @X0 1 r1 ]
"53
[; ;../Tetris/Tetris.c: 53: {
[f ]
"54
[; ;../Tetris/Tetris.c: 54:  return player->position.y - Tetris_unitPivot.y;
[e ) -> - -> . . *U _player 0 1 `i -> . _Tetris_unitPivot 1 `i `uc ]
[e $UE 9  ]
"55
[; ;../Tetris/Tetris.c: 55: }
[e :UE 9 ]
}
"57
[; ;../Tetris/Tetris.c: 57: static uint8_t Tetris_PlayerOverlapsEnvironment(Tetris_Game *game)
[v _Tetris_PlayerOverlapsEnvironment `(uc ~T0 @X0 1 sf1`*S4 ]
"58
[; ;../Tetris/Tetris.c: 58: {
{
[e :U _Tetris_PlayerOverlapsEnvironment ]
"57
[; ;../Tetris/Tetris.c: 57: static uint8_t Tetris_PlayerOverlapsEnvironment(Tetris_Game *game)
[v _game `*S4 ~T0 @X0 1 r1 ]
"58
[; ;../Tetris/Tetris.c: 58: {
[f ]
"59
[; ;../Tetris/Tetris.c: 59:  uint8_t start = Tetris_PlayerTopmostY(&game->player);
[v _start `uc ~T0 @X0 1 a ]
[e = _start ( _Tetris_PlayerTopmostY (1 &U . *U _game 1 ]
"60
[; ;../Tetris/Tetris.c: 60:  for (uint8_t i = 0; i < TETRIS_UNIT_HEIGHT; ++i)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 11  ]
[e $U 12  ]
[e :U 11 ]
"61
[; ;../Tetris/Tetris.c: 61:  {
{
"62
[; ;../Tetris/Tetris.c: 62:   if (game->player.unitBits[i] & game->table[i + start])
[e $ ! != & *U + &U . . *U _game 1 2 * -> _i `ux -> -> # *U &U . . *U _game 1 2 `ui `ux *U + &U . *U _game 0 * -> -> + -> _i `i -> _start `i `ui `ux -> -> # *U &U . *U _game 0 `ui `ux -> -> 0 `i `ui 14  ]
"63
[; ;../Tetris/Tetris.c: 63:    return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 10  ]
[e :U 14 ]
"64
[; ;../Tetris/Tetris.c: 64:  }
}
[e =+ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 11  ]
[e :U 12 ]
}
"66
[; ;../Tetris/Tetris.c: 66:  return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 10  ]
"67
[; ;../Tetris/Tetris.c: 67: }
[e :UE 10 ]
}
"69
[; ;../Tetris/Tetris.c: 69: static uint8_t Tetris_PlayerTouchingLeftBound(Tetris_Player *player)
[v _Tetris_PlayerTouchingLeftBound `(uc ~T0 @X0 1 sf1`*S3 ]
"70
[; ;../Tetris/Tetris.c: 70: {
{
[e :U _Tetris_PlayerTouchingLeftBound ]
"69
[; ;../Tetris/Tetris.c: 69: static uint8_t Tetris_PlayerTouchingLeftBound(Tetris_Player *player)
[v _player `*S3 ~T0 @X0 1 r1 ]
"70
[; ;../Tetris/Tetris.c: 70: {
[f ]
"71
[; ;../Tetris/Tetris.c: 71:  for (uint8_t i = 0; i < TETRIS_UNIT_HEIGHT; ++i)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 16  ]
[e $U 17  ]
[e :U 16 ]
"72
[; ;../Tetris/Tetris.c: 72:  {
{
"73
[; ;../Tetris/Tetris.c: 73:   if (player->unitBits[i] & 0x8000)
[e $ ! != & *U + &U . *U _player 2 * -> _i `ux -> -> # *U &U . *U _player 2 `ui `ux -> 32768 `ui -> -> 0 `i `ui 19  ]
"74
[; ;../Tetris/Tetris.c: 74:    return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 15  ]
[e :U 19 ]
"75
[; ;../Tetris/Tetris.c: 75:  }
}
[e =+ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 16  ]
[e :U 17 ]
}
"77
[; ;../Tetris/Tetris.c: 77:  return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 15  ]
"78
[; ;../Tetris/Tetris.c: 78: }
[e :UE 15 ]
}
"80
[; ;../Tetris/Tetris.c: 80: static uint8_t Tetris_PlayerTouchingRightBound(Tetris_Player *player)
[v _Tetris_PlayerTouchingRightBound `(uc ~T0 @X0 1 sf1`*S3 ]
"81
[; ;../Tetris/Tetris.c: 81: {
{
[e :U _Tetris_PlayerTouchingRightBound ]
"80
[; ;../Tetris/Tetris.c: 80: static uint8_t Tetris_PlayerTouchingRightBound(Tetris_Player *player)
[v _player `*S3 ~T0 @X0 1 r1 ]
"81
[; ;../Tetris/Tetris.c: 81: {
[f ]
"82
[; ;../Tetris/Tetris.c: 82:  for (uint8_t i = 0; i < TETRIS_UNIT_HEIGHT; ++i)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 21  ]
[e $U 22  ]
[e :U 21 ]
"83
[; ;../Tetris/Tetris.c: 83:  {
{
"84
[; ;../Tetris/Tetris.c: 84:   if (player->unitBits[i] & 0x0001)
[e $ ! != & *U + &U . *U _player 2 * -> _i `ux -> -> # *U &U . *U _player 2 `ui `ux -> -> 1 `i `ui -> -> 0 `i `ui 24  ]
"85
[; ;../Tetris/Tetris.c: 85:    return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 20  ]
[e :U 24 ]
"86
[; ;../Tetris/Tetris.c: 86:  }
}
[e =+ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 21  ]
[e :U 22 ]
}
"88
[; ;../Tetris/Tetris.c: 88:  return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 20  ]
"89
[; ;../Tetris/Tetris.c: 89: }
[e :UE 20 ]
}
"91
[; ;../Tetris/Tetris.c: 91: static void Tetris_RemovePlayerFromTable(Tetris_Game *game)
[v _Tetris_RemovePlayerFromTable `(v ~T0 @X0 1 sf1`*S4 ]
"92
[; ;../Tetris/Tetris.c: 92: {
{
[e :U _Tetris_RemovePlayerFromTable ]
"91
[; ;../Tetris/Tetris.c: 91: static void Tetris_RemovePlayerFromTable(Tetris_Game *game)
[v _game `*S4 ~T0 @X0 1 r1 ]
"92
[; ;../Tetris/Tetris.c: 92: {
[f ]
"93
[; ;../Tetris/Tetris.c: 93:  uint8_t start = Tetris_PlayerTopmostY(&game->player);
[v _start `uc ~T0 @X0 1 a ]
[e = _start ( _Tetris_PlayerTopmostY (1 &U . *U _game 1 ]
"94
[; ;../Tetris/Tetris.c: 94:  for (uint8_t i = 0; i < TETRIS_UNIT_HEIGHT; ++i)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 26  ]
[e $U 27  ]
[e :U 26 ]
"95
[; ;../Tetris/Tetris.c: 95:  {
{
"96
[; ;../Tetris/Tetris.c: 96:   game->table[start + i] &= ~game->player.unitBits[i];
[e =& *U + &U . *U _game 0 * -> -> + -> _start `i -> _i `i `ui `ux -> -> # *U &U . *U _game 0 `ui `ux ~ *U + &U . . *U _game 1 2 * -> _i `ux -> -> # *U &U . . *U _game 1 2 `ui `ux ]
"97
[; ;../Tetris/Tetris.c: 97:  }
}
[e =+ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 26  ]
[e :U 27 ]
}
"98
[; ;../Tetris/Tetris.c: 98: }
[e :UE 25 ]
}
"100
[; ;../Tetris/Tetris.c: 100: static void Tetris_ApplyPlayerToTable(Tetris_Game *game)
[v _Tetris_ApplyPlayerToTable `(v ~T0 @X0 1 sf1`*S4 ]
"101
[; ;../Tetris/Tetris.c: 101: {
{
[e :U _Tetris_ApplyPlayerToTable ]
"100
[; ;../Tetris/Tetris.c: 100: static void Tetris_ApplyPlayerToTable(Tetris_Game *game)
[v _game `*S4 ~T0 @X0 1 r1 ]
"101
[; ;../Tetris/Tetris.c: 101: {
[f ]
"102
[; ;../Tetris/Tetris.c: 102:  uint8_t start = Tetris_PlayerTopmostY(&game->player);
[v _start `uc ~T0 @X0 1 a ]
[e = _start ( _Tetris_PlayerTopmostY (1 &U . *U _game 1 ]
"103
[; ;../Tetris/Tetris.c: 103:  for (uint8_t i = 0; i < TETRIS_UNIT_HEIGHT; ++i)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 30  ]
[e $U 31  ]
[e :U 30 ]
"104
[; ;../Tetris/Tetris.c: 104:  {
{
"105
[; ;../Tetris/Tetris.c: 105:   game->table[start + i] |= game->player.unitBits[i];
[e =| *U + &U . *U _game 0 * -> -> + -> _start `i -> _i `i `ui `ux -> -> # *U &U . *U _game 0 `ui `ux *U + &U . . *U _game 1 2 * -> _i `ux -> -> # *U &U . . *U _game 1 2 `ui `ux ]
"106
[; ;../Tetris/Tetris.c: 106:  }
}
[e =+ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 30  ]
[e :U 31 ]
}
"107
[; ;../Tetris/Tetris.c: 107: }
[e :UE 29 ]
}
"109
[; ;../Tetris/Tetris.c: 109: static void Tetris_SelectRandomPlayerUnit(Tetris_Player *player)
[v _Tetris_SelectRandomPlayerUnit `(v ~T0 @X0 1 sf1`*S3 ]
"110
[; ;../Tetris/Tetris.c: 110: {
{
[e :U _Tetris_SelectRandomPlayerUnit ]
"109
[; ;../Tetris/Tetris.c: 109: static void Tetris_SelectRandomPlayerUnit(Tetris_Player *player)
[v _player `*S3 ~T0 @X0 1 r1 ]
"110
[; ;../Tetris/Tetris.c: 110: {
[f ]
"111
[; ;../Tetris/Tetris.c: 111:  uint8_t shift = Tetris_playerStartingPosition.x - Tetris_unitPivot.x;
[v _shift `uc ~T0 @X0 1 a ]
[e = _shift -> - -> . _Tetris_playerStartingPosition 0 `i -> . _Tetris_unitPivot 0 `i `uc ]
"113
[; ;../Tetris/Tetris.c: 113:  player->unit = Tetris_units + (rand() % TETRIS_NUM_UNITS);
[e = . *U _player 1 + &U _Tetris_units * -> % ( _rand ..  -> . `E279 0 `i `x -> -> # *U &U _Tetris_units `i `x ]
"114
[; ;../Tetris/Tetris.c: 114:  for (uint8_t i = 0; i < TETRIS_UNIT_HEIGHT; ++i)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 34  ]
[e $U 35  ]
[e :U 34 ]
"115
[; ;../Tetris/Tetris.c: 115:  {
{
"116
[; ;../Tetris/Tetris.c: 116:   player->unitBits[i] = player->unit->bits[0][i];
[e = *U + &U . *U _player 2 * -> _i `ux -> -> # *U &U . *U _player 2 `ui `ux *U + &U *U + &U . *U . *U _player 1 1 * -> -> -> 0 `i `ui `ux -> * -> # *U &U *U &U . *U . *U _player 1 1 `ui -> -> 4 `i `ui `ux * -> _i `ux -> -> # *U &U *U + &U . *U . *U _player 1 1 * -> -> -> 0 `i `ui `ux -> * -> # *U &U *U &U . *U . *U _player 1 1 `ui -> -> 4 `i `ui `ux `ui `ux ]
"117
[; ;../Tetris/Tetris.c: 117:   player->unitBits[i] <<= 8 - shift;
[e =<< *U + &U . *U _player 2 * -> _i `ux -> -> # *U &U . *U _player 2 `ui `ux -> - -> 8 `i -> _shift `i `ui ]
"118
[; ;../Tetris/Tetris.c: 118:  }
}
[e =+ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 34  ]
[e :U 35 ]
}
"119
[; ;../Tetris/Tetris.c: 119: }
[e :UE 33 ]
}
"121
[; ;../Tetris/Tetris.c: 121: void Tetris_ResetPlayer(Tetris_Player *player)
[v _Tetris_ResetPlayer `(v ~T0 @X0 1 ef1`*S3 ]
"122
[; ;../Tetris/Tetris.c: 122: {
{
[e :U _Tetris_ResetPlayer ]
"121
[; ;../Tetris/Tetris.c: 121: void Tetris_ResetPlayer(Tetris_Player *player)
[v _player `*S3 ~T0 @X0 1 r1 ]
"122
[; ;../Tetris/Tetris.c: 122: {
[f ]
"123
[; ;../Tetris/Tetris.c: 123:  player->position = Tetris_playerStartingPosition;
[e = . *U _player 0 _Tetris_playerStartingPosition ]
"124
[; ;../Tetris/Tetris.c: 124:  player->rotation = 0;
[e = . *U _player 3 -> -> 0 `i `uc ]
"125
[; ;../Tetris/Tetris.c: 125:  Tetris_SelectRandomPlayerUnit(player);
[e ( _Tetris_SelectRandomPlayerUnit (1 _player ]
"126
[; ;../Tetris/Tetris.c: 126: }
[e :UE 37 ]
}
"128
[; ;../Tetris/Tetris.c: 128: void Tetris_ResetGame(Tetris_Game *game)
[v _Tetris_ResetGame `(v ~T0 @X0 1 ef1`*S4 ]
"129
[; ;../Tetris/Tetris.c: 129: {
{
[e :U _Tetris_ResetGame ]
"128
[; ;../Tetris/Tetris.c: 128: void Tetris_ResetGame(Tetris_Game *game)
[v _game `*S4 ~T0 @X0 1 r1 ]
"129
[; ;../Tetris/Tetris.c: 129: {
[f ]
"130
[; ;../Tetris/Tetris.c: 130:  memset(game, 0, sizeof *game);
[e ( _memset (3 , , -> _game `*v -> 0 `i -> # *U _game `ui ]
"131
[; ;../Tetris/Tetris.c: 131:  Tetris_ResetPlayer(&game->player);
[e ( _Tetris_ResetPlayer (1 &U . *U _game 1 ]
"132
[; ;../Tetris/Tetris.c: 132:  Tetris_ApplyPlayerToTable(game);
[e ( _Tetris_ApplyPlayerToTable (1 _game ]
"133
[; ;../Tetris/Tetris.c: 133: }
[e :UE 38 ]
}
"135
[; ;../Tetris/Tetris.c: 135: void Tetris_Update(Tetris_Game *game)
[v _Tetris_Update `(v ~T0 @X0 1 ef1`*S4 ]
"136
[; ;../Tetris/Tetris.c: 136: {
{
[e :U _Tetris_Update ]
"135
[; ;../Tetris/Tetris.c: 135: void Tetris_Update(Tetris_Game *game)
[v _game `*S4 ~T0 @X0 1 r1 ]
"136
[; ;../Tetris/Tetris.c: 136: {
[f ]
"138
[; ;../Tetris/Tetris.c: 138: }
[e :UE 39 ]
}
"140
[; ;../Tetris/Tetris.c: 140: void Tetris_MovePlayerLeft(Tetris_Game *game)
[v _Tetris_MovePlayerLeft `(v ~T0 @X0 1 ef1`*S4 ]
"141
[; ;../Tetris/Tetris.c: 141: {
{
[e :U _Tetris_MovePlayerLeft ]
"140
[; ;../Tetris/Tetris.c: 140: void Tetris_MovePlayerLeft(Tetris_Game *game)
[v _game `*S4 ~T0 @X0 1 r1 ]
"141
[; ;../Tetris/Tetris.c: 141: {
[f ]
"142
[; ;../Tetris/Tetris.c: 142:  if (Tetris_PlayerTouchingLeftBound(&game->player))
[e $ ! != -> ( _Tetris_PlayerTouchingLeftBound (1 &U . *U _game 1 `i -> 0 `i 41  ]
"143
[; ;../Tetris/Tetris.c: 143:   return;
[e $UE 40  ]
[e :U 41 ]
"145
[; ;../Tetris/Tetris.c: 145:  Tetris_RemovePlayerFromTable(game);
[e ( _Tetris_RemovePlayerFromTable (1 _game ]
"147
[; ;../Tetris/Tetris.c: 147:  for (uint8_t i = 0; i < TETRIS_UNIT_HEIGHT; ++i)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 42  ]
[e $U 43  ]
[e :U 42 ]
"148
[; ;../Tetris/Tetris.c: 148:   game->player.unitBits[i] <<= 1;
[e =<< *U + &U . . *U _game 1 2 * -> _i `ux -> -> # *U &U . . *U _game 1 2 `ui `ux -> -> 1 `i `ui ]
[e =+ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 42  ]
[e :U 43 ]
}
"150
[; ;../Tetris/Tetris.c: 150:  if (Tetris_PlayerOverlapsEnvironment(game))
[e $ ! != -> ( _Tetris_PlayerOverlapsEnvironment (1 _game `i -> 0 `i 45  ]
"151
[; ;../Tetris/Tetris.c: 151:  {
{
"152
[; ;../Tetris/Tetris.c: 152:   for (uint8_t i = 0; i < TETRIS_UNIT_HEIGHT; ++i)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 46  ]
[e $U 47  ]
[e :U 46 ]
"153
[; ;../Tetris/Tetris.c: 153:    game->player.unitBits[i] >>= 1;
[e =>> *U + &U . . *U _game 1 2 * -> _i `ux -> -> # *U &U . . *U _game 1 2 `ui `ux -> -> 1 `i `ui ]
[e =+ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 46  ]
[e :U 47 ]
}
"154
[; ;../Tetris/Tetris.c: 154:  }
}
[e $U 49  ]
"155
[; ;../Tetris/Tetris.c: 155:  else
[e :U 45 ]
"156
[; ;../Tetris/Tetris.c: 156:  {
{
"157
[; ;../Tetris/Tetris.c: 157:   --game->player.position.x;
[e =- . . . *U _game 1 0 0 -> -> 1 `i `uc ]
"158
[; ;../Tetris/Tetris.c: 158:  }
}
[e :U 49 ]
"160
[; ;../Tetris/Tetris.c: 160:  Tetris_ApplyPlayerToTable(game);
[e ( _Tetris_ApplyPlayerToTable (1 _game ]
"161
[; ;../Tetris/Tetris.c: 161: }
[e :UE 40 ]
}
"163
[; ;../Tetris/Tetris.c: 163: void Tetris_MovePlayerRight(Tetris_Game *game)
[v _Tetris_MovePlayerRight `(v ~T0 @X0 1 ef1`*S4 ]
"164
[; ;../Tetris/Tetris.c: 164: {
{
[e :U _Tetris_MovePlayerRight ]
"163
[; ;../Tetris/Tetris.c: 163: void Tetris_MovePlayerRight(Tetris_Game *game)
[v _game `*S4 ~T0 @X0 1 r1 ]
"164
[; ;../Tetris/Tetris.c: 164: {
[f ]
"165
[; ;../Tetris/Tetris.c: 165:  if (Tetris_PlayerTouchingRightBound(&game->player))
[e $ ! != -> ( _Tetris_PlayerTouchingRightBound (1 &U . *U _game 1 `i -> 0 `i 51  ]
"166
[; ;../Tetris/Tetris.c: 166:   return;
[e $UE 50  ]
[e :U 51 ]
"168
[; ;../Tetris/Tetris.c: 168:  Tetris_RemovePlayerFromTable(game);
[e ( _Tetris_RemovePlayerFromTable (1 _game ]
"170
[; ;../Tetris/Tetris.c: 170:  for (uint8_t i = 0; i < TETRIS_UNIT_HEIGHT; ++i)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 52  ]
[e $U 53  ]
[e :U 52 ]
"171
[; ;../Tetris/Tetris.c: 171:   game->player.unitBits[i] >>= 1;
[e =>> *U + &U . . *U _game 1 2 * -> _i `ux -> -> # *U &U . . *U _game 1 2 `ui `ux -> -> 1 `i `ui ]
[e =+ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 52  ]
[e :U 53 ]
}
"173
[; ;../Tetris/Tetris.c: 173:  if (Tetris_PlayerOverlapsEnvironment(game))
[e $ ! != -> ( _Tetris_PlayerOverlapsEnvironment (1 _game `i -> 0 `i 55  ]
"174
[; ;../Tetris/Tetris.c: 174:  {
{
"175
[; ;../Tetris/Tetris.c: 175:   for (uint8_t i = 0; i < TETRIS_UNIT_HEIGHT; ++i)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 56  ]
[e $U 57  ]
[e :U 56 ]
"176
[; ;../Tetris/Tetris.c: 176:    game->player.unitBits[i] <<= 1;
[e =<< *U + &U . . *U _game 1 2 * -> _i `ux -> -> # *U &U . . *U _game 1 2 `ui `ux -> -> 1 `i `ui ]
[e =+ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> . `E36 0 `i 56  ]
[e :U 57 ]
}
"177
[; ;../Tetris/Tetris.c: 177:  }
}
[e $U 59  ]
"178
[; ;../Tetris/Tetris.c: 178:  else
[e :U 55 ]
"179
[; ;../Tetris/Tetris.c: 179:  {
{
"180
[; ;../Tetris/Tetris.c: 180:   ++game->player.position.x;
[e =+ . . . *U _game 1 0 0 -> -> 1 `i `uc ]
"181
[; ;../Tetris/Tetris.c: 181:  }
}
[e :U 59 ]
"183
[; ;../Tetris/Tetris.c: 183:  Tetris_ApplyPlayerToTable(game);
[e ( _Tetris_ApplyPlayerToTable (1 _game ]
"184
[; ;../Tetris/Tetris.c: 184: }
[e :UE 50 ]
}
"186
[; ;../Tetris/Tetris.c: 186: void Tetris_RotatePlayer(Tetris_Game *game)
[v _Tetris_RotatePlayer `(v ~T0 @X0 1 ef1`*S4 ]
"187
[; ;../Tetris/Tetris.c: 187: {
{
[e :U _Tetris_RotatePlayer ]
"186
[; ;../Tetris/Tetris.c: 186: void Tetris_RotatePlayer(Tetris_Game *game)
[v _game `*S4 ~T0 @X0 1 r1 ]
"187
[; ;../Tetris/Tetris.c: 187: {
[f ]
"188
[; ;../Tetris/Tetris.c: 188:  Tetris_RemovePlayerFromTable(game);
[e ( _Tetris_RemovePlayerFromTable (1 _game ]
"189
[; ;../Tetris/Tetris.c: 189:  ++game->player.rotation;
[e =+ . . *U _game 1 3 -> -> 1 `i `uc ]
"190
[; ;../Tetris/Tetris.c: 190:  game->player.rotation %= game->player.unit->numRotations;
[e =% . . *U _game 1 3 -> . *U . . *U _game 1 1 0 `i ]
"191
[; ;../Tetris/Tetris.c: 191:  Tetris_ApplyPlayerToTable(game);
[e ( _Tetris_ApplyPlayerToTable (1 _game ]
"192
[; ;../Tetris/Tetris.c: 192: }
[e :UE 60 ]
}
