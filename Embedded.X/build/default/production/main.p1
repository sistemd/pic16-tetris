Version 4.0 HI-TECH Software Intermediate Code
"3956 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3956: extern volatile __bit IRCF0 __attribute__((address(0x47C)));
[v _IRCF0 `Vb ~T0 @X0 0 e@1148 ]
"3959
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3959: extern volatile __bit IRCF1 __attribute__((address(0x47D)));
[v _IRCF1 `Vb ~T0 @X0 0 e@1149 ]
"3962
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3962: extern volatile __bit IRCF2 __attribute__((address(0x47E)));
[v _IRCF2 `Vb ~T0 @X0 0 e@1150 ]
"52 main.c
[; ;main.c: 52: static uint8_t timerPrescaler = EASY_TIMER_PRESCALER;
[c E1527 1 12 9 6 3 .. ]
[n E1527 . FAST_TIMER_PRESCALER EASY_TIMER_PRESCALER MEDIUM_TIMER_PRESCALER HARD_TIMER_PRESCALER ULTIMATE_TIMER_PRESCALER  ]
"3896 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3896: extern volatile __bit GIE __attribute__((address(0x5F)));
[v _GIE `Vb ~T0 @X0 0 e@95 ]
"4370
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 4370: extern volatile __bit TMR1IE __attribute__((address(0x460)));
[v _TMR1IE `Vb ~T0 @X0 0 e@1120 ]
"4364
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 4364: extern volatile __bit TMR1CS __attribute__((address(0x81)));
[v _TMR1CS `Vb ~T0 @X0 0 e@129 ]
"4040
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 4040: extern volatile __bit PEIE __attribute__((address(0x5E)));
[v _PEIE `Vb ~T0 @X0 0 e@94 ]
"4376
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 4376: extern volatile __bit TMR1ON __attribute__((address(0x80)));
[v _TMR1ON `Vb ~T0 @X0 0 e@128 ]
"4328
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 4328: extern volatile __bit T1CKPS0 __attribute__((address(0x84)));
[v _T1CKPS0 `Vb ~T0 @X0 0 e@132 ]
"4331
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 4331: extern volatile __bit T1CKPS1 __attribute__((address(0x85)));
[v _T1CKPS1 `Vb ~T0 @X0 0 e@133 ]
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 650: extern volatile unsigned short TMR1 __attribute__((address(0x00E)));
[v _TMR1 `Vus ~T0 @X0 0 e@14 ]
[t ~ __interrupt . k ]
[t T1 __interrupt ]
"3923
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3923: extern volatile __bit INTE __attribute__((address(0x5C)));
[v _INTE `Vb ~T0 @X0 0 e@92 ]
"3929
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3929: extern volatile __bit INTF __attribute__((address(0x59)));
[v _INTF `Vb ~T0 @X0 0 e@89 ]
[v F1337 `(v ~T0 @X0 1 tf1`ul ]
"92 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic.h
[v __delay `JF1337 ~T0 @X0 0 e ]
[p i __delay ]
"4373 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 4373: extern volatile __bit TMR1IF __attribute__((address(0x60)));
[v _TMR1IF `Vb ~T0 @X0 0 e@96 ]
"76 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\c90\stdlib.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\c90\stdlib.h: 76: extern void srand(unsigned int);
[v _srand `(v ~T0 @X0 0 ef1`ui ]
"20 ./LCD.h
[; ;./LCD.h: 20: extern void LCD_SetupPorts(void);
[v _LCD_SetupPorts `(v ~T0 @X0 0 ef ]
"22
[; ;./LCD.h: 22: extern void LCD_Reset(void);
[v _LCD_Reset `(v ~T0 @X0 0 ef ]
"126 main.c
[; ;main.c: 126:     LCD_SegmentSelection(LCD_BOTH_SEGMENTS);
[c E1369 0 1 2 3 .. ]
[n E1369 . LCD_NO_SEGMENT LCD_BOTTOM_SEGMENT LCD_TOP_SEGMENT LCD_BOTH_SEGMENTS  ]
"30 ./LCD.h
[; ;./LCD.h: 30: extern void LCD_SegmentSelection(LCD_Segments segments);
[v _LCD_SegmentSelection `(v ~T0 @X0 0 ef1`E1369 ]
"42
[; ;./LCD.h: 42: extern void LCD_Clear(void);
[v _LCD_Clear `(v ~T0 @X0 0 ef ]
"32
[; ;./LCD.h: 32: extern void LCD_TurnOn(void);
[v _LCD_TurnOn `(v ~T0 @X0 0 ef ]
"17 ./Buttons.h
[; ;./Buttons.h: 17: extern void Buttons_Setup(void);
[v _Buttons_Setup `(v ~T0 @X0 0 ef ]
"20 ../Tetris\Tetris.h
[; ;../Tetris\Tetris.h: 20: typedef struct {
[s S1 `uc 1 `uc 1 ]
[n S1 . x y ]
[v F47 `ui ~T0 @X0 -> 4 `i t ]
"25
[; ;../Tetris\Tetris.h: 25: typedef struct {
[s S2 `uc 1 `uc 1 `F47 -> 4 `i ]
[n S2 . designator numRotations bits ]
"31
[; ;../Tetris\Tetris.h: 31: typedef struct {
[s S3 `S1 1 `*CS2 1 `ui -> 4 `i `uc 1 ]
[n S3 . position unit unitBits rotation ]
"42
[; ;../Tetris\Tetris.h: 42: typedef struct {
[s S4 `ui -> 24 `i `S3 1 `ui 1 ]
[n S4 . table player currentScore ]
"139 main.c
[; ;main.c: 139:         if (tetrisGame->currentScore > EASY_SCORE_LIMIT)
[c E1534 3 7 10 20 .. ]
[n E1534 . EASY_SCORE_LIMIT MEDIUM_SCORE_LIMIT HARD_SCORE_LIMIT ULTIMATE_SCORE_LIMIT  ]
[p mainexit ]
"5 ./Buttons.h
[; ;./Buttons.h: 5: typedef struct {
[s S142 :1 `uc 1 :1 `uc 1 ]
[n S142 . pressed held ]
"10
[; ;./Buttons.h: 10: typedef struct {
[s S143 `S142 1 `S142 1 `S142 1 `S142 1 ]
[n S143 . left right down rotate ]
"58 ../Tetris\Tetris.h
[; ;../Tetris\Tetris.h: 58: extern void Tetris_ResetGame(Tetris_Game *game, const Tetris_Unit *playerUnit);
[v _Tetris_ResetGame `(v ~T0 @X0 0 ef2`*S4`*CS2 ]
"54
[; ;../Tetris\Tetris.h: 54: extern const Tetris_Unit *Tetris_GetRandomUnit(void);
[v _Tetris_GetRandomUnit `(*CS2 ~T0 @X0 0 ef ]
"19 ./Buttons.h
[; ;./Buttons.h: 19: extern void Buttons_Clear(Buttons *buttons);
[v _Buttons_Clear `(v ~T0 @X0 0 ef1`*S143 ]
"7 ./Drawing.h
[; ;./Drawing.h: 7: extern void DrawCurrentScore(Tetris_Game *tetrisGame);
[v _DrawCurrentScore `(v ~T0 @X0 0 ef1`*S4 ]
"9
[; ;./Drawing.h: 9: extern void DrawHighscore(uint16_t highscore);
[v _DrawHighscore `(v ~T0 @X0 0 ef1`ui ]
"21 ./Buttons.h
[; ;./Buttons.h: 21: extern void Buttons_Update(Buttons *buttons);
[v _Buttons_Update `(v ~T0 @X0 0 ef1`*S143 ]
"70 ../Tetris\Tetris.h
[; ;../Tetris\Tetris.h: 70: extern void Tetris_MovePlayerLeft(Tetris_Game *game);
[v _Tetris_MovePlayerLeft `(v ~T0 @X0 0 ef1`*S4 ]
"72
[; ;../Tetris\Tetris.h: 72: extern void Tetris_MovePlayerRight(Tetris_Game *game);
[v _Tetris_MovePlayerRight `(v ~T0 @X0 0 ef1`*S4 ]
"74
[; ;../Tetris\Tetris.h: 74: extern void Tetris_RotatePlayer(Tetris_Game *game);
[v _Tetris_RotatePlayer `(v ~T0 @X0 0 ef1`*S4 ]
"190 main.c
[; ;main.c: 190:                 uint8_t status = Tetris_UpdateGame(&tetrisGame);
[c E60 0 1 2 .. ]
[n E60 . TETRIS_GAME_OVER TETRIS_GAME_CONTINUES TETRIS_PLAYER_SCORED  ]
"60 ../Tetris\Tetris.h
[; ;../Tetris\Tetris.h: 60: extern Tetris_GameState Tetris_UpdateGame(Tetris_Game *game);
[v _Tetris_UpdateGame `(E60 ~T0 @X0 0 ef1`*S4 ]
"5 ./Drawing.h
[; ;./Drawing.h: 5: extern void DrawTetris(Tetris_Game *tetrisGame);
[v _DrawTetris `(v ~T0 @X0 0 ef1`*S4 ]
"11
[; ;./Drawing.h: 11: extern void FlashVictoriously(void);
[v _FlashVictoriously `(v ~T0 @X0 0 ef ]
"2 main.c
[p x  FOSC = INTRC_NOCLKOUT  ]
"3
[p x  WDTE = OFF  ]
"4
[p x  PWRTE = OFF  ]
"5
[p x  MCLRE = ON  ]
"6
[p x  CP = OFF  ]
"7
[p x  CPD = OFF  ]
"8
[p x  BOREN = OFF  ]
"9
[p x  IESO = OFF  ]
"10
[p x  FCMEN = OFF  ]
"11
[p x  LVP = OFF  ]
"14
[p x  BOR4V = BOR40V  ]
"15
[p x  WRT = OFF  ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 354: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"416
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 416: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"454
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 454: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"461
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 461: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"539
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 539: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"595
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 595: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"652
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 652: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"659
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 659: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"666
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 666: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"673
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 673: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"767
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 767: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"774
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 774: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"845
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 845: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"852
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 852: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"922
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 922: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"929
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 929: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"936
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 936: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"943
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 943: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"1040
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1040: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1135
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1135: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1142
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1142: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1149
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1149: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1156
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1156: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1163
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1163: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1170
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1170: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1240
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1240: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1247
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1247: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1348
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1348: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1418
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1418: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1480
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1480: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1542
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1542: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1604
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1604: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1666
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1666: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1704
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1704: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1760
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1760: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1817: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1864
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1864: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1929
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1929: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1981
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1981: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"2043
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2043: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"2050
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2050: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"2057
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2057: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"2062
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2062: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2179
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2179: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2348
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2348: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2418
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2418: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2488
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2488: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2558
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2558: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2644
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2644: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2706
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2706: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2776
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2776: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2846
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2846: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2928
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2928: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2972
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2972: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2979
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2979: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"3013
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3013: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"3066
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3066: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"3131
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3131: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3196
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3196: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3247
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3247: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3252
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3252: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3259
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3259: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3266
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3266: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3273
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3273: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3280: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3337
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3337: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3389
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3389: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3451
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3451: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3501: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3546
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3546: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[v F1368 `(v ~T0 @X0 1 tf ]
"7 ./Frequency.h
[; ;./Frequency.h: 7: static __attribute__((inline)) void SetupOscillator(void)
[v _SetupOscillator `TF1368 ~T0 @X0 1 s ]
"8
[; ;./Frequency.h: 8: {
{
[e :U _SetupOscillator ]
[f ]
"11
[; ;./Frequency.h: 11:     IRCF0 = 1;
[e = _IRCF0 -> -> 1 `i `b ]
"12
[; ;./Frequency.h: 12:     IRCF1 = 1;
[e = _IRCF1 -> -> 1 `i `b ]
"13
[; ;./Frequency.h: 13:     IRCF2 = 1;
[e = _IRCF2 -> -> 1 `i `b ]
"14
[; ;./Frequency.h: 14: }
[e :UE 144 ]
}
"28 main.c
[; ;main.c: 28: __eeprom uint16_t highscore = 0;
[v _highscore `Eui ~T0 @X0 1 e ]
[i _highscore
-> -> 0 `i `ui
]
"30
[; ;main.c: 30: __eeprom uint16_t uniqueSeed = 0;
[v _uniqueSeed `Eui ~T0 @X0 1 e ]
[i _uniqueSeed
-> -> 0 `i `ui
]
"52
[; ;main.c: 52: static uint8_t timerPrescaler = EASY_TIMER_PRESCALER;
[v _timerPrescaler `uc ~T0 @X0 1 s ]
[i _timerPrescaler
-> . `E1527 1 `uc
]
"54
[; ;main.c: 54: static uint8_t defaultTimerPrescaler = EASY_TIMER_PRESCALER;
[v _defaultTimerPrescaler `uc ~T0 @X0 1 s ]
[i _defaultTimerPrescaler
-> . `E1527 1 `uc
]
"56
[; ;main.c: 56: static uint8_t updateReady = 0;
[v _updateReady `uc ~T0 @X0 1 s ]
[i _updateReady
-> -> 0 `i `uc
]
"62
[; ;main.c: 62: static uint8_t paused = 1;
[v _paused `uc ~T0 @X0 1 s ]
[i _paused
-> -> 1 `i `uc
]
"64
[; ;main.c: 64: static void SetupTimer(void)
[v _SetupTimer `(v ~T0 @X0 1 sf ]
"65
[; ;main.c: 65: {
{
[e :U _SetupTimer ]
[f ]
"66
[; ;main.c: 66:     GIE = 1;
[e = _GIE -> -> 1 `i `b ]
"67
[; ;main.c: 67:     TMR1IE = 1;
[e = _TMR1IE -> -> 1 `i `b ]
"68
[; ;main.c: 68:     TMR1CS = 0;
[e = _TMR1CS -> -> 0 `i `b ]
"69
[; ;main.c: 69:     PEIE = 1;
[e = _PEIE -> -> 1 `i `b ]
"70
[; ;main.c: 70:     TMR1ON = 1;
[e = _TMR1ON -> -> 1 `i `b ]
"71
[; ;main.c: 71:     T1CKPS0 = 1;
[e = _T1CKPS0 -> -> 1 `i `b ]
"72
[; ;main.c: 72:     T1CKPS1 = 0;
[e = _T1CKPS1 -> -> 0 `i `b ]
"73
[; ;main.c: 73: }
[e :UE 149 ]
}
"75
[; ;main.c: 75: static void ResetTimer(void)
[v _ResetTimer `(v ~T0 @X0 1 sf ]
"76
[; ;main.c: 76: {
{
[e :U _ResetTimer ]
[f ]
"77
[; ;main.c: 77:     TMR1 = 0;
[e = _TMR1 -> -> 0 `i `us ]
"78
[; ;main.c: 78: }
[e :UE 150 ]
}
"80
[; ;main.c: 80: static void __attribute__((picinterrupt(("")))) InterruptHandler(void)
[v _InterruptHandler `(v ~T1 @X0 1 sf ]
"81
[; ;main.c: 81: {
{
[e :U _InterruptHandler ]
[f ]
"82
[; ;main.c: 82:     static uint8_t timerInterruptCounter = 0;
[v F1547 `uc ~T0 @X0 1 s timerInterruptCounter ]
[i F1547
-> -> 0 `i `uc
]
"84
[; ;main.c: 84:     if (INTE && INTF)
[e $ ! && _INTE _INTF 152  ]
"85
[; ;main.c: 85:     {
{
"86
[; ;main.c: 86:         _delay((unsigned long)((25)*(8000000/4000000.0)));
[e ( __delay (1 -> * -> -> 25 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
"87
[; ;main.c: 87:         INTF = 0;
[e = _INTF -> -> 0 `i `b ]
"89
[; ;main.c: 89:         if (!paused)
[e $ ! ! != -> _paused `i -> 0 `i 153  ]
"90
[; ;main.c: 90:         {
{
"91
[; ;main.c: 91:             paused = 1;
[e = _paused -> -> 1 `i `uc ]
"92
[; ;main.c: 92:             __asm("sleep");
[; <" sleep ;# ">
"93
[; ;main.c: 93:         }
}
[e $U 154  ]
"94
[; ;main.c: 94:         else
[e :U 153 ]
"95
[; ;main.c: 95:         {
{
"96
[; ;main.c: 96:             paused = 0;
[e = _paused -> -> 0 `i `uc ]
"97
[; ;main.c: 97:         }
}
[e :U 154 ]
"98
[; ;main.c: 98:     }
}
[e :U 152 ]
"100
[; ;main.c: 100:     if (TMR1IE && TMR1IF)
[e $ ! && _TMR1IE _TMR1IF 155  ]
"101
[; ;main.c: 101:     {
{
"102
[; ;main.c: 102:         TMR1IF = 0;
[e = _TMR1IF -> -> 0 `i `b ]
"103
[; ;main.c: 103:         ++timerInterruptCounter;
[e =+ F1547 -> -> 1 `i `uc ]
"104
[; ;main.c: 104:         if (timerInterruptCounter >= timerPrescaler)
[e $ ! >= -> F1547 `i -> _timerPrescaler `i 156  ]
"105
[; ;main.c: 105:         {
{
"106
[; ;main.c: 106:             updateReady = 1;
[e = _updateReady -> -> 1 `i `uc ]
"107
[; ;main.c: 107:             timerInterruptCounter = 0;
[e = F1547 -> -> 0 `i `uc ]
"108
[; ;main.c: 108:         }
}
[e :U 156 ]
"109
[; ;main.c: 109:     }
}
[e :U 155 ]
"110
[; ;main.c: 110: }
[e :UE 151 ]
}
"112
[; ;main.c: 112: static void SetupRandomness(void)
[v _SetupRandomness `(v ~T0 @X0 1 sf ]
"113
[; ;main.c: 113: {
{
[e :U _SetupRandomness ]
[f ]
"114
[; ;main.c: 114:     srand(uniqueSeed);
[e ( _srand (1 _uniqueSeed ]
"115
[; ;main.c: 115:     ++uniqueSeed;
[e =+ _uniqueSeed -> -> 1 `i `Eui ]
"116
[; ;main.c: 116: }
[e :UE 157 ]
}
"118
[; ;main.c: 118: static void Setup(void)
[v _Setup `(v ~T0 @X0 1 sf ]
"119
[; ;main.c: 119: {
{
[e :U _Setup ]
[f ]
"120
[; ;main.c: 120:     SetupOscillator();
[e ( _SetupOscillator ..  ]
"121
[; ;main.c: 121:     SetupRandomness();
[e ( _SetupRandomness ..  ]
"122
[; ;main.c: 122:     SetupTimer();
[e ( _SetupTimer ..  ]
"124
[; ;main.c: 124:     LCD_SetupPorts();
[e ( _LCD_SetupPorts ..  ]
"125
[; ;main.c: 125:     LCD_Reset();
[e ( _LCD_Reset ..  ]
"126
[; ;main.c: 126:     LCD_SegmentSelection(LCD_BOTH_SEGMENTS);
[e ( _LCD_SegmentSelection (1 . `E1369 3 ]
"127
[; ;main.c: 127:     LCD_Clear();
[e ( _LCD_Clear ..  ]
"128
[; ;main.c: 128:     LCD_TurnOn();
[e ( _LCD_TurnOn ..  ]
"130
[; ;main.c: 130:     Buttons_Setup();
[e ( _Buttons_Setup ..  ]
"131
[; ;main.c: 131:     GIE = 1;
[e = _GIE -> -> 1 `i `b ]
"132
[; ;main.c: 132: }
[e :UE 158 ]
}
"134
[; ;main.c: 134: static void UpdateDifficulty(Tetris_Game *tetrisGame)
[v _UpdateDifficulty `(v ~T0 @X0 1 sf1`*S4 ]
"135
[; ;main.c: 135: {
{
[e :U _UpdateDifficulty ]
"134
[; ;main.c: 134: static void UpdateDifficulty(Tetris_Game *tetrisGame)
[v _tetrisGame `*S4 ~T0 @X0 1 r1 ]
"135
[; ;main.c: 135: {
[f ]
"136
[; ;main.c: 136:     switch (defaultTimerPrescaler)
[e $U 161  ]
"137
[; ;main.c: 137:     {
{
"138
[; ;main.c: 138:     case EASY_TIMER_PRESCALER:
[e :U 162 ]
"139
[; ;main.c: 139:         if (tetrisGame->currentScore > EASY_SCORE_LIMIT)
[e $ ! > . *U _tetrisGame 2 -> . `E1534 0 `ui 163  ]
"140
[; ;main.c: 140:             defaultTimerPrescaler = MEDIUM_TIMER_PRESCALER;
[e = _defaultTimerPrescaler -> . `E1527 2 `uc ]
[e :U 163 ]
"141
[; ;main.c: 141:         break;
[e $U 160  ]
"142
[; ;main.c: 142:     case MEDIUM_TIMER_PRESCALER:
[e :U 164 ]
"143
[; ;main.c: 143:         if (tetrisGame->currentScore > MEDIUM_SCORE_LIMIT)
[e $ ! > . *U _tetrisGame 2 -> . `E1534 1 `ui 165  ]
"144
[; ;main.c: 144:             defaultTimerPrescaler = HARD_TIMER_PRESCALER;
[e = _defaultTimerPrescaler -> . `E1527 3 `uc ]
[e :U 165 ]
"145
[; ;main.c: 145:         break;
[e $U 160  ]
"146
[; ;main.c: 146:     case HARD_TIMER_PRESCALER:
[e :U 166 ]
"147
[; ;main.c: 147:         if (tetrisGame->currentScore > HARD_SCORE_LIMIT)
[e $ ! > . *U _tetrisGame 2 -> . `E1534 2 `ui 167  ]
"148
[; ;main.c: 148:             defaultTimerPrescaler = ULTIMATE_TIMER_PRESCALER;
[e = _defaultTimerPrescaler -> . `E1527 4 `uc ]
[e :U 167 ]
"149
[; ;main.c: 149:         break;
[e $U 160  ]
"150
[; ;main.c: 150:     }
}
[e $U 160  ]
[e :U 161 ]
[e [\ -> _defaultTimerPrescaler `i , $ . `E1527 1 162
 , $ . `E1527 2 164
 , $ . `E1527 3 166
 160 ]
[e :U 160 ]
"151
[; ;main.c: 151: }
[e :UE 159 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"153
[; ;main.c: 153: void main(void)
[v _main `(v ~T0 @X0 1 ef ]
"154
[; ;main.c: 154: {
{
[e :U _main ]
[f ]
"156
[; ;main.c: 156:     Setup();
[e ( _Setup ..  ]
"158
[; ;main.c: 158:     Tetris_Game tetrisGame;
[v _tetrisGame `S4 ~T0 @X0 1 a ]
"159
[; ;main.c: 159:     Buttons buttons;
[v _buttons `S143 ~T0 @X0 1 a ]
"161
[; ;main.c: 161:     while (1)
[e :U 170 ]
"162
[; ;main.c: 162:     {
{
"163
[; ;main.c: 163:         Tetris_ResetGame(&tetrisGame, Tetris_GetRandomUnit());
[e ( _Tetris_ResetGame (2 , &U _tetrisGame ( _Tetris_GetRandomUnit ..  ]
"164
[; ;main.c: 164:         defaultTimerPrescaler = EASY_TIMER_PRESCALER;
[e = _defaultTimerPrescaler -> . `E1527 1 `uc ]
"165
[; ;main.c: 165:         Buttons_Clear(&buttons);
[e ( _Buttons_Clear (1 &U _buttons ]
"166
[; ;main.c: 166:         ResetTimer();
[e ( _ResetTimer ..  ]
"168
[; ;main.c: 168:         DrawCurrentScore(&tetrisGame);
[e ( _DrawCurrentScore (1 &U _tetrisGame ]
"169
[; ;main.c: 169:         DrawHighscore(highscore);
[e ( _DrawHighscore (1 _highscore ]
"171
[; ;main.c: 171:         while (1)
[e :U 173 ]
"172
[; ;main.c: 172:         {
{
"173
[; ;main.c: 173:             Buttons_Update(&buttons);
[e ( _Buttons_Update (1 &U _buttons ]
"175
[; ;main.c: 175:             if (buttons.left.pressed)
[e $ ! != -> . . _buttons 0 0 `i -> 0 `i 175  ]
"176
[; ;main.c: 176:                 Tetris_MovePlayerLeft(&tetrisGame);
[e ( _Tetris_MovePlayerLeft (1 &U _tetrisGame ]
[e :U 175 ]
"177
[; ;main.c: 177:             if (buttons.right.pressed)
[e $ ! != -> . . _buttons 1 0 `i -> 0 `i 176  ]
"178
[; ;main.c: 178:                 Tetris_MovePlayerRight(&tetrisGame);
[e ( _Tetris_MovePlayerRight (1 &U _tetrisGame ]
[e :U 176 ]
"179
[; ;main.c: 179:             if (buttons.rotate.pressed)
[e $ ! != -> . . _buttons 3 0 `i -> 0 `i 177  ]
"180
[; ;main.c: 180:                 Tetris_RotatePlayer(&tetrisGame);
[e ( _Tetris_RotatePlayer (1 &U _tetrisGame ]
[e :U 177 ]
"182
[; ;main.c: 182:             if (buttons.down.held)
[e $ ! != -> . . _buttons 2 1 `i -> 0 `i 178  ]
"183
[; ;main.c: 183:                 timerPrescaler = FAST_TIMER_PRESCALER;
[e = _timerPrescaler -> . `E1527 0 `uc ]
[e $U 179  ]
"184
[; ;main.c: 184:             else
[e :U 178 ]
"185
[; ;main.c: 185:                 timerPrescaler = defaultTimerPrescaler;
[e = _timerPrescaler _defaultTimerPrescaler ]
[e :U 179 ]
"187
[; ;main.c: 187:             if (updateReady)
[e $ ! != -> _updateReady `i -> 0 `i 180  ]
"188
[; ;main.c: 188:             {
{
"189
[; ;main.c: 189:                 updateReady = 0;
[e = _updateReady -> -> 0 `i `uc ]
"190
[; ;main.c: 190:                 uint8_t status = Tetris_UpdateGame(&tetrisGame);
[v _status `uc ~T0 @X0 1 a ]
[e = _status -> ( _Tetris_UpdateGame (1 &U _tetrisGame `uc ]
"191
[; ;main.c: 191:                 if (status == TETRIS_PLAYER_SCORED)
[e $ ! == -> _status `i -> . `E60 2 `i 181  ]
"192
[; ;main.c: 192:                 {
{
"193
[; ;main.c: 193:                     DrawCurrentScore(&tetrisGame);
[e ( _DrawCurrentScore (1 &U _tetrisGame ]
"194
[; ;main.c: 194:                     UpdateDifficulty(&tetrisGame);
[e ( _UpdateDifficulty (1 &U _tetrisGame ]
"195
[; ;main.c: 195:                 }
}
[e $U 182  ]
"196
[; ;main.c: 196:                 else if (status == TETRIS_GAME_OVER)
[e :U 181 ]
[e $ ! == -> _status `i -> . `E60 0 `i 183  ]
"197
[; ;main.c: 197:                 {
{
"198
[; ;main.c: 198:                     break;
[e $U 174  ]
"199
[; ;main.c: 199:                 }
}
[e :U 183 ]
[e :U 182 ]
"200
[; ;main.c: 200:             }
}
[e :U 180 ]
"202
[; ;main.c: 202:             DrawTetris(&tetrisGame);
[e ( _DrawTetris (1 &U _tetrisGame ]
"203
[; ;main.c: 203:         }
}
[e :U 172 ]
[e $U 173  ]
[e :U 174 ]
"205
[; ;main.c: 205:         if (tetrisGame.currentScore > highscore)
[e $ ! > . _tetrisGame 2 _highscore 184  ]
"206
[; ;main.c: 206:         {
{
"207
[; ;main.c: 207:             highscore = tetrisGame.currentScore;
[e = _highscore . _tetrisGame 2 ]
"208
[; ;main.c: 208:             FlashVictoriously();
[e ( _FlashVictoriously ..  ]
"209
[; ;main.c: 209:         }
}
[e :U 184 ]
"210
[; ;main.c: 210:     }
}
[e :U 169 ]
[e $U 170  ]
[e :U 171 ]
"211
[; ;main.c: 211: }
[e :UE 168 ]
}
