Version 4.0 HI-TECH Software Intermediate Code
"13 ./Digits.h
[; ;./Digits.h: 13:     uint8_t i = NUM_DIGITS - 1;
[c E1390 5 .. ]
[n E1390 . NUM_DIGITS  ]
"3956 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3956: extern volatile __bit IRCF0 __attribute__((address(0x47C)));
[v _IRCF0 `Vb ~T0 @X0 0 e@1148 ]
"3959
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3959: extern volatile __bit IRCF1 __attribute__((address(0x47D)));
[v _IRCF1 `Vb ~T0 @X0 0 e@1149 ]
"3962
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3962: extern volatile __bit IRCF2 __attribute__((address(0x47E)));
[v _IRCF2 `Vb ~T0 @X0 0 e@1150 ]
"20 ../Tetris\Tetris.h
[; ;../Tetris\Tetris.h: 20: typedef struct {
[s S1 `uc 1 `uc 1 ]
[n S1 . x y ]
[v F47 `ui ~T0 @X0 -> 4 `i t ]
"25
[; ;../Tetris\Tetris.h: 25: typedef struct {
[s S2 `uc 1 `uc 1 `F47 -> 4 `i ]
[n S2 . designator numRotations bits ]
"31
[; ;../Tetris\Tetris.h: 31: typedef struct {
[s S3 `S1 1 `*CS2 1 `ui -> 4 `i `uc 1 ]
[n S3 . position unit unitBits rotation ]
"42
[; ;../Tetris\Tetris.h: 42: typedef struct {
[s S4 `ui -> 24 `i `S3 1 `ui 1 ]
[n S4 . table player currentScore ]
"19 Drawing.c
[; ;Drawing.c: 19:     LCD_SegmentSelection(LCD_TOP_SEGMENT);
[c E1352 0 1 2 3 .. ]
[n E1352 . LCD_NO_SEGMENT LCD_BOTTOM_SEGMENT LCD_TOP_SEGMENT LCD_BOTH_SEGMENTS  ]
"30 ./LCD.h
[; ;./LCD.h: 30: extern void LCD_SegmentSelection(LCD_Segments segments);
[v _LCD_SegmentSelection `(v ~T0 @X0 0 ef1`E1352 ]
"36
[; ;./LCD.h: 36: extern void LCD_SetY(uint8_t y);
[v _LCD_SetY `(v ~T0 @X0 0 ef1`uc ]
"20 Drawing.c
[; ;Drawing.c: 20:     LCD_SetY(FONT_HEIGHT);
[c E1381 4 8 .. ]
[n E1381 . FONT_WIDTH FONT_HEIGHT  ]
"38 ./LCD.h
[; ;./LCD.h: 38: extern void LCD_SetX(uint8_t x);
[v _LCD_SetX `(v ~T0 @X0 0 ef1`uc ]
"23 Drawing.c
[; ;Drawing.c: 23:     for (uint8_t y = FONT_HEIGHT; y < LCD_HEIGHT; y += GAME_PIXEL_HEIGHT)
[c E1358 64 128 8 64 .. ]
[n E1358 . LCD_WIDTH LCD_HEIGHT LCD_NUM_PAGES LCD_SEGMENT_HEIGHT  ]
"28 ./LCD.h
[; ;./LCD.h: 28: extern void LCD_WriteData(uint8_t data);
[v _LCD_WriteData `(v ~T0 @X0 0 ef1`uc ]
"45 Drawing.c
[; ;Drawing.c: 45:             for (uint8_t i = 0; i < GAME_PIXEL_HEIGHT; ++i)
[c E1401 4 5 .. ]
[n E1401 . GAME_PIXEL_WIDTH GAME_PIXEL_HEIGHT  ]
"42 ./LCD.h
[; ;./LCD.h: 42: extern void LCD_Clear(void);
[v _LCD_Clear `(v ~T0 @X0 0 ef ]
"173 Drawing.c
[; ;Drawing.c: 173:     for (uint8_t i = 0; i < NUM_FLASHES; ++i)
[c E1457 6 600 .. ]
[n E1457 . NUM_FLASHES FLASH_DELAY  ]
[v F1344 `(v ~T0 @X0 1 tf1`ul ]
"92 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic.h
[v __delay `JF1344 ~T0 @X0 0 e ]
[p i __delay ]
"34 ./LCD.h
[; ;./LCD.h: 34: extern void LCD_TurnOff(void);
[v _LCD_TurnOff `(v ~T0 @X0 0 ef ]
"32
[; ;./LCD.h: 32: extern void LCD_TurnOn(void);
[v _LCD_TurnOn `(v ~T0 @X0 0 ef ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 354: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"416
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 416: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"454
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 454: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"461
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 461: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"539
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 539: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"595
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 595: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"652
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 652: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"659
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 659: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"666
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 666: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"673
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 673: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"767
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 767: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"774
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 774: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"845
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 845: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"852
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 852: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"922
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 922: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"929
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 929: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"936
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 936: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"943
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 943: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"1040
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1040: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1135
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1135: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1142
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1142: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1149
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1149: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1156
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1156: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1163
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1163: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1170
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1170: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1240
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1240: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1247
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1247: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1348
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1348: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1418
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1418: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1480
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1480: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1542
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1542: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1604
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1604: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1666
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1666: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1704
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1704: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1760
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1760: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1817: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1864
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1864: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1929
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1929: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1981
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 1981: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"2043
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2043: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"2050
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2050: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"2057
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2057: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"2062
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2062: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2179
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2179: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2348
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2348: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2418
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2418: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2488
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2488: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2558
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2558: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2644
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2644: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2706
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2706: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2776
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2776: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2846
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2846: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2928
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2928: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2972
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2972: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2979
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 2979: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"3013
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3013: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"3066
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3066: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"3131
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3131: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3196
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3196: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3247
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3247: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3252
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3252: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3259
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3259: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3266
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3266: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3273
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3273: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3280: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3337
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3337: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3389
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3389: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3451
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3451: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3501: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3546
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f884.h: 3546: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[v F1386 `Cuc ~T0 @X0 -> 8 `i t ]
"8 ./Font.h
[; ;./Font.h: 8: static const uint8_t Font_digits[10][FONT_HEIGHT] = {
[v _Font_digits `F1386 ~T0 @X0 -> 10 `i s ]
[i _Font_digits
:U ..
:U ..
-> -> 0 `i `uc
-> -> 112 `i `uc
-> -> 80 `i `uc
-> -> 80 `i `uc
-> -> 80 `i `uc
-> -> 80 `i `uc
-> -> 112 `i `uc
-> -> 0 `i `uc
..
:U ..
-> -> 0 `i `uc
-> -> 32 `i `uc
-> -> 96 `i `uc
-> -> 32 `i `uc
-> -> 32 `i `uc
-> -> 32 `i `uc
-> -> 32 `i `uc
-> -> 0 `i `uc
..
:U ..
-> -> 0 `i `uc
-> -> 32 `i `uc
-> -> 80 `i `uc
-> -> 16 `i `uc
-> -> 32 `i `uc
-> -> 64 `i `uc
-> -> 112 `i `uc
-> -> 0 `i `uc
..
:U ..
-> -> 0 `i `uc
-> -> 112 `i `uc
-> -> 16 `i `uc
-> -> 96 `i `uc
-> -> 16 `i `uc
-> -> 16 `i `uc
-> -> 96 `i `uc
-> -> 0 `i `uc
..
:U ..
-> -> 0 `i `uc
-> -> 80 `i `uc
-> -> 80 `i `uc
-> -> 80 `i `uc
-> -> 112 `i `uc
-> -> 16 `i `uc
-> -> 16 `i `uc
-> -> 0 `i `uc
..
:U ..
-> -> 0 `i `uc
-> -> 112 `i `uc
-> -> 64 `i `uc
-> -> 112 `i `uc
-> -> 16 `i `uc
-> -> 16 `i `uc
-> -> 96 `i `uc
-> -> 0 `i `uc
..
:U ..
-> -> 0 `i `uc
-> -> 112 `i `uc
-> -> 64 `i `uc
-> -> 112 `i `uc
-> -> 80 `i `uc
-> -> 80 `i `uc
-> -> 112 `i `uc
-> -> 0 `i `uc
..
:U ..
-> -> 0 `i `uc
-> -> 112 `i `uc
-> -> 16 `i `uc
-> -> 16 `i `uc
-> -> 32 `i `uc
-> -> 32 `i `uc
-> -> 32 `i `uc
-> -> 0 `i `uc
..
:U ..
-> -> 0 `i `uc
-> -> 112 `i `uc
-> -> 80 `i `uc
-> -> 112 `i `uc
-> -> 80 `i `uc
-> -> 80 `i `uc
-> -> 112 `i `uc
-> -> 0 `i `uc
..
:U ..
-> -> 0 `i `uc
-> -> 112 `i `uc
-> -> 80 `i `uc
-> -> 80 `i `uc
-> -> 112 `i `uc
-> -> 16 `i `uc
-> -> 16 `i `uc
-> -> 0 `i `uc
..
..
]
"111
[; ;./Font.h: 111: static const uint8_t Font_hi[FONT_HEIGHT] = {
[v _Font_hi `Cuc ~T0 @X0 -> 8 `i s ]
[i _Font_hi
:U ..
-> -> 0 `i `uc
-> -> 164 `i `uc
-> -> 164 `i `uc
-> -> 164 `i `uc
-> -> 228 `i `uc
-> -> 164 `i `uc
-> -> 164 `i `uc
-> -> 0 `i `uc
..
]
[v F1389 `Cuc ~T0 @X0 -> 8 `i t ]
"122
[; ;./Font.h: 122: static const uint8_t Font_score[3][FONT_HEIGHT] = {
[v _Font_score `F1389 ~T0 @X0 -> 3 `i s ]
[i _Font_score
:U ..
:U ..
-> -> 0 `i `uc
-> -> 238 `i `uc
-> -> 136 `i `uc
-> -> 232 `i `uc
-> -> 40 `i `uc
-> -> 40 `i `uc
-> -> 238 `i `uc
-> -> 0 `i `uc
..
:U ..
-> -> 0 `i `uc
-> -> 238 `i `uc
-> -> 170 `i `uc
-> -> 174 `i `uc
-> -> 172 `i `uc
-> -> 170 `i `uc
-> -> 234 `i `uc
-> -> 0 `i `uc
..
:U ..
-> -> 0 `i `uc
-> -> 224 `i `uc
-> -> 128 `i `uc
-> -> 224 `i `uc
-> -> 128 `i `uc
-> -> 128 `i `uc
-> -> 224 `i `uc
-> -> 0 `i `uc
..
..
]
[v F1394 `(v ~T0 @X0 1 tf2`ui`*uc ]
"11 ./Digits.h
[; ;./Digits.h: 11: __attribute__((inline)) void GetDigits(uint16_t n, uint8_t *digits)
[v _GetDigits `TF1394 ~T0 @X0 1 e ]
"12
[; ;./Digits.h: 12: {
{
[e :U _GetDigits ]
"11
[; ;./Digits.h: 11: __attribute__((inline)) void GetDigits(uint16_t n, uint8_t *digits)
[v _n `ui ~T0 @X0 1 r1 ]
[v _digits `*uc ~T0 @X0 1 r2 ]
"12
[; ;./Digits.h: 12: {
[f ]
"13
[; ;./Digits.h: 13:     uint8_t i = NUM_DIGITS - 1;
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> - -> . `E1390 0 `i -> 1 `i `uc ]
"15
[; ;./Digits.h: 15:     while (1)
[e :U 144 ]
"16
[; ;./Digits.h: 16:     {
{
"17
[; ;./Digits.h: 17:         uint16_t newN = n / 10;
[v _newN `ui ~T0 @X0 1 a ]
[e = _newN / _n -> -> 10 `i `ui ]
"18
[; ;./Digits.h: 18:         digits[i] = n - newN * 10;
[e = *U + _digits * -> _i `ux -> -> # *U _digits `ui `ux -> - _n * _newN -> -> 10 `i `ui `uc ]
"19
[; ;./Digits.h: 19:         n = newN;
[e = _n _newN ]
"21
[; ;./Digits.h: 21:         if (i == 0)
[e $ ! == -> _i `i -> 0 `i 146  ]
"22
[; ;./Digits.h: 22:             break;
[e $U 145  ]
[e :U 146 ]
"24
[; ;./Digits.h: 24:         --i;
[e =- _i -> -> 1 `i `uc ]
"25
[; ;./Digits.h: 25:     }
}
[e :U 143 ]
[e $U 144  ]
[e :U 145 ]
"26
[; ;./Digits.h: 26: }
[e :UE 142 ]
}
[v F1400 `(v ~T0 @X0 1 tf ]
"7 ./Frequency.h
[; ;./Frequency.h: 7: static __attribute__((inline)) void SetupOscillator(void)
[v _SetupOscillator `TF1400 ~T0 @X0 1 s ]
"8
[; ;./Frequency.h: 8: {
{
[e :U _SetupOscillator ]
[f ]
"11
[; ;./Frequency.h: 11:     IRCF0 = 1;
[e = _IRCF0 -> -> 1 `i `b ]
"12
[; ;./Frequency.h: 12:     IRCF1 = 1;
[e = _IRCF1 -> -> 1 `i `b ]
"13
[; ;./Frequency.h: 13:     IRCF2 = 1;
[e = _IRCF2 -> -> 1 `i `b ]
"14
[; ;./Frequency.h: 14: }
[e :UE 147 ]
}
"15 Drawing.c
[; ;Drawing.c: 15: static void DrawTetrisGameColumn(Tetris_Game *tetrisGame, uint8_t x, uint16_t rightMask, uint16_t leftMask)
[v _DrawTetrisGameColumn `(v ~T0 @X0 1 sf4`*S4`uc`ui`ui ]
"16
[; ;Drawing.c: 16: {
{
[e :U _DrawTetrisGameColumn ]
"15
[; ;Drawing.c: 15: static void DrawTetrisGameColumn(Tetris_Game *tetrisGame, uint8_t x, uint16_t rightMask, uint16_t leftMask)
[v _tetrisGame `*S4 ~T0 @X0 1 r1 ]
[v _x `uc ~T0 @X0 1 r2 ]
[v _rightMask `ui ~T0 @X0 1 r3 ]
[v _leftMask `ui ~T0 @X0 1 r4 ]
"16
[; ;Drawing.c: 16: {
[f ]
"17
[; ;Drawing.c: 17:     uint8_t tableY = 0;
[v _tableY `uc ~T0 @X0 1 a ]
[e = _tableY -> -> 0 `i `uc ]
"19
[; ;Drawing.c: 19:     LCD_SegmentSelection(LCD_TOP_SEGMENT);
[e ( _LCD_SegmentSelection (1 . `E1352 2 ]
"20
[; ;Drawing.c: 20:     LCD_SetY(FONT_HEIGHT);
[e ( _LCD_SetY (1 -> . `E1381 1 `uc ]
"21
[; ;Drawing.c: 21:     LCD_SetX(x);
[e ( _LCD_SetX (1 _x ]
"23
[; ;Drawing.c: 23:     for (uint8_t y = FONT_HEIGHT; y < LCD_HEIGHT; y += GAME_PIXEL_HEIGHT)
{
[v _y `uc ~T0 @X0 1 a ]
[e = _y -> . `E1381 1 `uc ]
[e $ < -> _y `i -> . `E1358 1 `i 149  ]
[e $U 150  ]
[e :U 149 ]
"24
[; ;Drawing.c: 24:     {
{
"25
[; ;Drawing.c: 25:         uint16_t gameRow = tetrisGame->table[tableY];
[v _gameRow `ui ~T0 @X0 1 a ]
[e = _gameRow *U + &U . *U _tetrisGame 0 * -> _tableY `ux -> -> # *U &U . *U _tetrisGame 0 `ui `ux ]
"26
[; ;Drawing.c: 26:         uint8_t lcdRow = 0;
[v _lcdRow `uc ~T0 @X0 1 a ]
[e = _lcdRow -> -> 0 `i `uc ]
"27
[; ;Drawing.c: 27:         if (gameRow & rightMask)
[e $ ! != & _gameRow _rightMask -> -> 0 `i `ui 152  ]
"28
[; ;Drawing.c: 28:             lcdRow = 0x0F;
[e = _lcdRow -> -> 15 `i `uc ]
[e :U 152 ]
"29
[; ;Drawing.c: 29:         if (gameRow & leftMask)
[e $ ! != & _gameRow _leftMask -> -> 0 `i `ui 153  ]
"30
[; ;Drawing.c: 30:             lcdRow |= 0xF0;
[e =| _lcdRow -> -> 240 `i `uc ]
[e :U 153 ]
"32
[; ;Drawing.c: 32:         if (y == 63)
[e $ ! == -> _y `i -> 63 `i 154  ]
"33
[; ;Drawing.c: 33:         {
{
"34
[; ;Drawing.c: 34:             LCD_WriteData(lcdRow);
[e ( _LCD_WriteData (1 _lcdRow ]
"35
[; ;Drawing.c: 35:             LCD_SegmentSelection(LCD_BOTTOM_SEGMENT);
[e ( _LCD_SegmentSelection (1 . `E1352 1 ]
"36
[; ;Drawing.c: 36:             LCD_SetX(x);
[e ( _LCD_SetX (1 _x ]
"37
[; ;Drawing.c: 37:             LCD_SetY(0);
[e ( _LCD_SetY (1 -> -> 0 `i `uc ]
"38
[; ;Drawing.c: 38:             LCD_WriteData(lcdRow);
[e ( _LCD_WriteData (1 _lcdRow ]
"39
[; ;Drawing.c: 39:             LCD_WriteData(lcdRow);
[e ( _LCD_WriteData (1 _lcdRow ]
"40
[; ;Drawing.c: 40:             LCD_WriteData(lcdRow);
[e ( _LCD_WriteData (1 _lcdRow ]
"41
[; ;Drawing.c: 41:             LCD_WriteData(lcdRow);
[e ( _LCD_WriteData (1 _lcdRow ]
"42
[; ;Drawing.c: 42:         }
}
[e $U 155  ]
"43
[; ;Drawing.c: 43:         else
[e :U 154 ]
"44
[; ;Drawing.c: 44:         {
{
"45
[; ;Drawing.c: 45:             for (uint8_t i = 0; i < GAME_PIXEL_HEIGHT; ++i)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> . `E1401 1 `i 156  ]
[e $U 157  ]
[e :U 156 ]
"46
[; ;Drawing.c: 46:                 LCD_WriteData(lcdRow);
[e ( _LCD_WriteData (1 _lcdRow ]
[e =+ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> . `E1401 1 `i 156  ]
[e :U 157 ]
}
"47
[; ;Drawing.c: 47:         }
}
[e :U 155 ]
"49
[; ;Drawing.c: 49:         ++tableY;
[e =+ _tableY -> -> 1 `i `uc ]
"50
[; ;Drawing.c: 50:     }
}
[e =+ _y -> -> . `E1401 1 `i `uc ]
[e $ < -> _y `i -> . `E1358 1 `i 149  ]
[e :U 150 ]
}
"51
[; ;Drawing.c: 51: }
[e :UE 148 ]
}
"53
[; ;Drawing.c: 53: static void DrawHiMarker(void)
[v _DrawHiMarker `(v ~T0 @X0 1 sf ]
"54
[; ;Drawing.c: 54: {
{
[e :U _DrawHiMarker ]
[f ]
"55
[; ;Drawing.c: 55:     LCD_SegmentSelection(LCD_TOP_SEGMENT);
[e ( _LCD_SegmentSelection (1 . `E1352 2 ]
"56
[; ;Drawing.c: 56:     LCD_SetX(3);
[e ( _LCD_SetX (1 -> -> 3 `i `uc ]
"57
[; ;Drawing.c: 57:     LCD_SetY(0);
[e ( _LCD_SetY (1 -> -> 0 `i `uc ]
"58
[; ;Drawing.c: 58:     for (uint8_t y = 0; y < FONT_HEIGHT; ++y)
{
[v _y `uc ~T0 @X0 1 a ]
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 160  ]
[e $U 161  ]
[e :U 160 ]
"59
[; ;Drawing.c: 59:         LCD_WriteData(Font_hi[y] >> 2);
[e ( _LCD_WriteData (1 -> >> -> *U + &U _Font_hi * -> _y `ux -> -> # *U &U _Font_hi `ui `ux `i -> 2 `i `uc ]
[e =+ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 160  ]
[e :U 161 ]
}
"60
[; ;Drawing.c: 60: }
[e :UE 159 ]
}
"62
[; ;Drawing.c: 62: void DrawTetris(Tetris_Game *tetrisGame)
[v _DrawTetris `(v ~T0 @X0 1 ef1`*S4 ]
"63
[; ;Drawing.c: 63: {
{
[e :U _DrawTetris ]
"62
[; ;Drawing.c: 62: void DrawTetris(Tetris_Game *tetrisGame)
[v _tetrisGame `*S4 ~T0 @X0 1 r1 ]
"63
[; ;Drawing.c: 63: {
[f ]
"64
[; ;Drawing.c: 64:     uint16_t leftMask = 0b0000000000000010;
[v _leftMask `ui ~T0 @X0 1 a ]
[e = _leftMask -> -> 2 `i `ui ]
"65
[; ;Drawing.c: 65:     uint16_t rightMask = 0b0000000000000001;
[v _rightMask `ui ~T0 @X0 1 a ]
[e = _rightMask -> -> 1 `i `ui ]
"67
[; ;Drawing.c: 67:     for (uint8_t x = 0; x < LCD_NUM_PAGES; ++x)
{
[v _x `uc ~T0 @X0 1 a ]
[e = _x -> -> 0 `i `uc ]
[e $ < -> _x `i -> . `E1358 2 `i 164  ]
[e $U 165  ]
[e :U 164 ]
"68
[; ;Drawing.c: 68:     {
{
"69
[; ;Drawing.c: 69:         DrawTetrisGameColumn(tetrisGame, x, rightMask, leftMask);
[e ( _DrawTetrisGameColumn (4 , , , _tetrisGame _x _rightMask _leftMask ]
"70
[; ;Drawing.c: 70:         leftMask <<= 2;
[e =<< _leftMask -> -> 2 `i `ui ]
"71
[; ;Drawing.c: 71:         rightMask <<= 2;
[e =<< _rightMask -> -> 2 `i `ui ]
"72
[; ;Drawing.c: 72:     }
}
[e =+ _x -> -> 1 `i `uc ]
[e $ < -> _x `i -> . `E1358 2 `i 164  ]
[e :U 165 ]
}
"73
[; ;Drawing.c: 73: }
[e :UE 163 ]
}
"75
[; ;Drawing.c: 75: void DrawCurrentScore(Tetris_Game *tetrisGame)
[v _DrawCurrentScore `(v ~T0 @X0 1 ef1`*S4 ]
"76
[; ;Drawing.c: 76: {
{
[e :U _DrawCurrentScore ]
"75
[; ;Drawing.c: 75: void DrawCurrentScore(Tetris_Game *tetrisGame)
[v _tetrisGame `*S4 ~T0 @X0 1 r1 ]
"76
[; ;Drawing.c: 76: {
[f ]
"77
[; ;Drawing.c: 77:     uint8_t scoreDigits[NUM_DIGITS];
[v _scoreDigits `uc ~T0 @X0 -> 5 `i a ]
"78
[; ;Drawing.c: 78:     GetDigits(tetrisGame->currentScore, scoreDigits);
[e ( _GetDigits (2 , . *U _tetrisGame 2 &U _scoreDigits ]
"80
[; ;Drawing.c: 80:     LCD_SegmentSelection(LCD_TOP_SEGMENT);
[e ( _LCD_SegmentSelection (1 . `E1352 2 ]
"81
[; ;Drawing.c: 81:     LCD_SetX(7);
[e ( _LCD_SetX (1 -> -> 7 `i `uc ]
"82
[; ;Drawing.c: 82:     LCD_SetY(0);
[e ( _LCD_SetY (1 -> -> 0 `i `uc ]
"83
[; ;Drawing.c: 83:     for (uint8_t y = 0; y < FONT_HEIGHT; ++y)
{
[v _y `uc ~T0 @X0 1 a ]
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 168  ]
[e $U 169  ]
[e :U 168 ]
"84
[; ;Drawing.c: 84:     {
{
"85
[; ;Drawing.c: 85:         uint8_t lcdData = Font_digits[scoreDigits[0]][y] | (Font_digits[scoreDigits[1]][y] >> 4);
[v _lcdData `uc ~T0 @X0 1 a ]
[e = _lcdData -> | -> *U + &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 0 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux * -> _y `ux -> -> # *U &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 0 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux `ui `ux `i >> -> *U + &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 1 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux * -> _y `ux -> -> # *U &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 1 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux `ui `ux `i -> 4 `i `uc ]
"86
[; ;Drawing.c: 86:         LCD_WriteData(lcdData);
[e ( _LCD_WriteData (1 _lcdData ]
"87
[; ;Drawing.c: 87:     }
}
[e =+ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 168  ]
[e :U 169 ]
}
"89
[; ;Drawing.c: 89:     LCD_SetX(6);
[e ( _LCD_SetX (1 -> -> 6 `i `uc ]
"90
[; ;Drawing.c: 90:     LCD_SetY(0);
[e ( _LCD_SetY (1 -> -> 0 `i `uc ]
"91
[; ;Drawing.c: 91:     for (uint8_t y = 0; y < FONT_HEIGHT; ++y)
{
[v _y `uc ~T0 @X0 1 a ]
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 171  ]
[e $U 172  ]
[e :U 171 ]
"92
[; ;Drawing.c: 92:     {
{
"93
[; ;Drawing.c: 93:         uint8_t lcdData = Font_digits[scoreDigits[2]][y] | (Font_digits[scoreDigits[3]][y] >> 4);
[v _lcdData `uc ~T0 @X0 1 a ]
[e = _lcdData -> | -> *U + &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 2 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux * -> _y `ux -> -> # *U &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 2 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux `ui `ux `i >> -> *U + &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 3 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux * -> _y `ux -> -> # *U &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 3 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux `ui `ux `i -> 4 `i `uc ]
"94
[; ;Drawing.c: 94:         LCD_WriteData(lcdData);
[e ( _LCD_WriteData (1 _lcdData ]
"95
[; ;Drawing.c: 95:     }
}
[e =+ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 171  ]
[e :U 172 ]
}
"97
[; ;Drawing.c: 97:     LCD_SetX(5);
[e ( _LCD_SetX (1 -> -> 5 `i `uc ]
"98
[; ;Drawing.c: 98:     LCD_SetY(0);
[e ( _LCD_SetY (1 -> -> 0 `i `uc ]
"99
[; ;Drawing.c: 99:     for (uint8_t y = 0; y < FONT_HEIGHT; ++y)
{
[v _y `uc ~T0 @X0 1 a ]
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 174  ]
[e $U 175  ]
[e :U 174 ]
"100
[; ;Drawing.c: 100:     {
{
"101
[; ;Drawing.c: 101:         uint8_t lcdData = Font_digits[scoreDigits[4]][y];
[v _lcdData `uc ~T0 @X0 1 a ]
[e = _lcdData *U + &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 4 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux * -> _y `ux -> -> # *U &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 4 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux `ui `ux ]
"102
[; ;Drawing.c: 102:         LCD_WriteData(lcdData);
[e ( _LCD_WriteData (1 _lcdData ]
"103
[; ;Drawing.c: 103:     }
}
[e =+ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 174  ]
[e :U 175 ]
}
"104
[; ;Drawing.c: 104: }
[e :UE 167 ]
}
"106
[; ;Drawing.c: 106: void DrawHighscore(uint16_t highscore)
[v _DrawHighscore `(v ~T0 @X0 1 ef1`ui ]
"107
[; ;Drawing.c: 107: {
{
[e :U _DrawHighscore ]
"106
[; ;Drawing.c: 106: void DrawHighscore(uint16_t highscore)
[v _highscore `ui ~T0 @X0 1 r1 ]
"107
[; ;Drawing.c: 107: {
[f ]
"108
[; ;Drawing.c: 108:     DrawHiMarker();
[e ( _DrawHiMarker ..  ]
"110
[; ;Drawing.c: 110:     uint8_t scoreDigits[NUM_DIGITS];
[v _scoreDigits `uc ~T0 @X0 -> 5 `i a ]
"111
[; ;Drawing.c: 111:     GetDigits(highscore, scoreDigits);
[e ( _GetDigits (2 , _highscore &U _scoreDigits ]
"113
[; ;Drawing.c: 113:     LCD_SegmentSelection(LCD_TOP_SEGMENT);
[e ( _LCD_SegmentSelection (1 . `E1352 2 ]
"114
[; ;Drawing.c: 114:     LCD_SetX(2);
[e ( _LCD_SetX (1 -> -> 2 `i `uc ]
"115
[; ;Drawing.c: 115:     LCD_SetY(0);
[e ( _LCD_SetY (1 -> -> 0 `i `uc ]
"116
[; ;Drawing.c: 116:     for (uint8_t y = 0; y < FONT_HEIGHT; ++y)
{
[v _y `uc ~T0 @X0 1 a ]
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 178  ]
[e $U 179  ]
[e :U 178 ]
"117
[; ;Drawing.c: 117:     {
{
"118
[; ;Drawing.c: 118:         uint8_t lcdData = Font_digits[scoreDigits[0]][y] >> 4;
[v _lcdData `uc ~T0 @X0 1 a ]
[e = _lcdData -> >> -> *U + &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 0 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux * -> _y `ux -> -> # *U &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 0 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux `ui `ux `i -> 4 `i `uc ]
"119
[; ;Drawing.c: 119:         LCD_WriteData(lcdData << 1);
[e ( _LCD_WriteData (1 -> << -> _lcdData `i -> 1 `i `uc ]
"120
[; ;Drawing.c: 120:     }
}
[e =+ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 178  ]
[e :U 179 ]
}
"122
[; ;Drawing.c: 122:     LCD_SetX(1);
[e ( _LCD_SetX (1 -> -> 1 `i `uc ]
"123
[; ;Drawing.c: 123:     LCD_SetY(0);
[e ( _LCD_SetY (1 -> -> 0 `i `uc ]
"124
[; ;Drawing.c: 124:     for (uint8_t y = 0; y < FONT_HEIGHT; ++y)
{
[v _y `uc ~T0 @X0 1 a ]
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 181  ]
[e $U 182  ]
[e :U 181 ]
"125
[; ;Drawing.c: 125:     {
{
"126
[; ;Drawing.c: 126:         uint8_t lcdData = Font_digits[scoreDigits[1]][y] | (Font_digits[scoreDigits[2]][y] >> 4);
[v _lcdData `uc ~T0 @X0 1 a ]
[e = _lcdData -> | -> *U + &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 1 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux * -> _y `ux -> -> # *U &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 1 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux `ui `ux `i >> -> *U + &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 2 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux * -> _y `ux -> -> # *U &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 2 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux `ui `ux `i -> 4 `i `uc ]
"127
[; ;Drawing.c: 127:         LCD_WriteData(lcdData << 1);
[e ( _LCD_WriteData (1 -> << -> _lcdData `i -> 1 `i `uc ]
"128
[; ;Drawing.c: 128:     }
}
[e =+ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 181  ]
[e :U 182 ]
}
"130
[; ;Drawing.c: 130:     LCD_SetX(0);
[e ( _LCD_SetX (1 -> -> 0 `i `uc ]
"131
[; ;Drawing.c: 131:     LCD_SetY(0);
[e ( _LCD_SetY (1 -> -> 0 `i `uc ]
"132
[; ;Drawing.c: 132:     for (uint8_t y = 0; y < FONT_HEIGHT; ++y)
{
[v _y `uc ~T0 @X0 1 a ]
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 184  ]
[e $U 185  ]
[e :U 184 ]
"133
[; ;Drawing.c: 133:     {
{
"134
[; ;Drawing.c: 134:         uint8_t lcdData = Font_digits[scoreDigits[3]][y] | (Font_digits[scoreDigits[4]][y] >> 4);
[v _lcdData `uc ~T0 @X0 1 a ]
[e = _lcdData -> | -> *U + &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 3 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux * -> _y `ux -> -> # *U &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 3 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux `ui `ux `i >> -> *U + &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 4 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux * -> _y `ux -> -> # *U &U *U + &U _Font_digits * -> *U + &U _scoreDigits * -> -> -> 4 `i `ui `ux -> -> # *U &U _scoreDigits `ui `ux `ux -> * -> # *U &U *U &U _Font_digits `ui -> -> 8 `i `ui `ux `ui `ux `i -> 4 `i `uc ]
"135
[; ;Drawing.c: 135:         LCD_WriteData(lcdData << 1);
[e ( _LCD_WriteData (1 -> << -> _lcdData `i -> 1 `i `uc ]
"136
[; ;Drawing.c: 136:     }
}
[e =+ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 184  ]
[e :U 185 ]
}
"137
[; ;Drawing.c: 137: }
[e :UE 177 ]
}
"139
[; ;Drawing.c: 139: static void DrawHighscoreText(void)
[v _DrawHighscoreText `(v ~T0 @X0 1 sf ]
"140
[; ;Drawing.c: 140: {
{
[e :U _DrawHighscoreText ]
[f ]
"141
[; ;Drawing.c: 141:     uint8_t const baseX = 5;
[v F1451 `Cuc ~T0 @X0 1 s baseX ]
[i F1451
-> -> 5 `i `uc
]
"142
[; ;Drawing.c: 142:     uint8_t const baseY = 56;
[v F1452 `Cuc ~T0 @X0 1 s baseY ]
[i F1452
-> -> 56 `i `uc
]
"144
[; ;Drawing.c: 144:     LCD_SegmentSelection(LCD_TOP_SEGMENT);
[e ( _LCD_SegmentSelection (1 . `E1352 2 ]
"145
[; ;Drawing.c: 145:     LCD_SetX(baseX);
[e ( _LCD_SetX (1 F1451 ]
"146
[; ;Drawing.c: 146:     LCD_SetY(baseY);
[e ( _LCD_SetY (1 F1452 ]
"148
[; ;Drawing.c: 148:     for (uint8_t y = 0; y < FONT_HEIGHT; ++y)
{
[v _y `uc ~T0 @X0 1 a ]
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 188  ]
[e $U 189  ]
[e :U 188 ]
"149
[; ;Drawing.c: 149:         LCD_WriteData(Font_hi[y]);
[e ( _LCD_WriteData (1 *U + &U _Font_hi * -> _y `ux -> -> # *U &U _Font_hi `ui `ux ]
[e =+ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 188  ]
[e :U 189 ]
}
"152
[; ;Drawing.c: 152:     for (uint8_t x = 0; x < 3; ++x)
{
[v _x `uc ~T0 @X0 1 a ]
[e = _x -> -> 0 `i `uc ]
[e $ < -> _x `i -> 3 `i 191  ]
[e $U 192  ]
[e :U 191 ]
"153
[; ;Drawing.c: 153:     {
{
"154
[; ;Drawing.c: 154:         LCD_SetY(baseY);
[e ( _LCD_SetY (1 F1452 ]
"155
[; ;Drawing.c: 155:         LCD_SetX(baseX - x - 1);
[e ( _LCD_SetX (1 -> - - -> F1451 `i -> _x `i -> 1 `i `uc ]
"156
[; ;Drawing.c: 156:         for (uint8_t y = 0; y < FONT_HEIGHT; ++y)
{
[v _y `uc ~T0 @X0 1 a ]
[e = _y -> -> 0 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 194  ]
[e $U 195  ]
[e :U 194 ]
"157
[; ;Drawing.c: 157:             LCD_WriteData(Font_score[x][y]);
[e ( _LCD_WriteData (1 *U + &U *U + &U _Font_score * -> _x `ux -> * -> # *U &U *U &U _Font_score `ui -> -> 8 `i `ui `ux * -> _y `ux -> -> # *U &U *U + &U _Font_score * -> _x `ux -> * -> # *U &U *U &U _Font_score `ui -> -> 8 `i `ui `ux `ui `ux ]
[e =+ _y -> -> 1 `i `uc ]
[e $ < -> _y `i -> . `E1381 1 `i 194  ]
[e :U 195 ]
}
"158
[; ;Drawing.c: 158:     }
}
[e =+ _x -> -> 1 `i `uc ]
[e $ < -> _x `i -> 3 `i 191  ]
[e :U 192 ]
}
"159
[; ;Drawing.c: 159: }
[e :UE 187 ]
}
"167
[; ;Drawing.c: 167: void FlashVictoriously(void)
[v _FlashVictoriously `(v ~T0 @X0 1 ef ]
"168
[; ;Drawing.c: 168: {
{
[e :U _FlashVictoriously ]
[f ]
"169
[; ;Drawing.c: 169:     LCD_SegmentSelection(LCD_BOTH_SEGMENTS);
[e ( _LCD_SegmentSelection (1 . `E1352 3 ]
"170
[; ;Drawing.c: 170:     LCD_Clear();
[e ( _LCD_Clear ..  ]
"171
[; ;Drawing.c: 171:     DrawHighscoreText();
[e ( _DrawHighscoreText ..  ]
"173
[; ;Drawing.c: 173:     for (uint8_t i = 0; i < NUM_FLASHES; ++i)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> . `E1457 0 `i 198  ]
[e $U 199  ]
[e :U 198 ]
"174
[; ;Drawing.c: 174:     {
{
"175
[; ;Drawing.c: 175:         _delay((unsigned long)((FLASH_DELAY)*(8000000/4000.0)));
[e ( __delay (1 -> * -> . `E1457 1 `d / -> -> 8000000 `l `d .4000.0 `ul ]
"176
[; ;Drawing.c: 176:         LCD_TurnOff();
[e ( _LCD_TurnOff ..  ]
"177
[; ;Drawing.c: 177:         _delay((unsigned long)((FLASH_DELAY)*(8000000/4000.0)));
[e ( __delay (1 -> * -> . `E1457 1 `d / -> -> 8000000 `l `d .4000.0 `ul ]
"178
[; ;Drawing.c: 178:         LCD_TurnOn();
[e ( _LCD_TurnOn ..  ]
"179
[; ;Drawing.c: 179:     }
}
[e =+ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> . `E1457 0 `i 198  ]
[e :U 199 ]
}
"180
[; ;Drawing.c: 180: }
[e :UE 197 ]
}
